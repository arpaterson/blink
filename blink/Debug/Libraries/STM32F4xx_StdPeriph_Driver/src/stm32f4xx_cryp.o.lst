   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"stm32f4xx_cryp.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.section	.text.CRYP_DeInit,"ax",%progbits
  19              		.align	2
  20              		.global	CRYP_DeInit
  21              		.thumb
  22              		.thumb_func
  24              	CRYP_DeInit:
  25              	.LFB110:
  26              		.file 1 "../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c"
   1:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** /**
   2:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   ******************************************************************************
   3:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @file    stm32f4xx_cryp.c
   4:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @author  MCD Application Team
   5:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @version V1.0.0
   6:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @date    30-September-2011
   7:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @brief   This file provides firmware functions to manage the following 
   8:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *          functionalities of the  Cryptographic processor (CRYP) peripheral:           
   9:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *           - Initialization and Configuration functions
  10:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *           - Data treatment functions 
  11:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *           - Context swapping functions     
  12:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *           - DMA interface function       
  13:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *           - Interrupts and flags management       
  14:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *
  15:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *  @verbatim
  16:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *                               
  17:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *          ===================================================================      
  18:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *                                 How to use this driver
  19:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *          =================================================================== 
  20:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *          1. Enable the CRYP controller clock using 
  21:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *              RCC_AHB2PeriphClockCmd(RCC_AHB2Periph_CRYP, ENABLE); function.
  22:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *
  23:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *          2. Initialise the CRYP using CRYP_Init(), CRYP_KeyInit() and if 
  24:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *             needed CRYP_IVInit(). 
  25:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *
  26:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *          3. Flush the IN and OUT FIFOs by using CRYP_FIFOFlush() function.
  27:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *
  28:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *          4. Enable the CRYP controller using the CRYP_Cmd() function. 
  29:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *
  30:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *          5. If using DMA for Data input and output transfer, 
  31:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *             Activate the needed DMA Requests using CRYP_DMACmd() function 
  32:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   
  33:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *          6. If DMA is not used for data transfer, use CRYP_DataIn() and 
  34:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *             CRYP_DataOut() functions to enter data to IN FIFO and get result
  35:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *             from OUT FIFO.
  36:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *
  37:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *          7. To control CRYP events you can use one of the following 
  38:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *              two methods:
  39:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *               - Check on CRYP flags using the CRYP_GetFlagStatus() function.  
  40:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *               - Use CRYP interrupts through the function CRYP_ITConfig() at 
  41:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *                 initialization phase and CRYP_GetITStatus() function into 
  42:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *                 interrupt routines in processing phase.
  43:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *       
  44:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *          8. Save and restore Cryptographic processor context using  
  45:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *             CRYP_SaveContext() and CRYP_RestoreContext() functions.     
  46:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *
  47:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *
  48:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *          ===================================================================  
  49:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *                Procedure to perform an encryption or a decryption
  50:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *          ===================================================================  
  51:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *
  52:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *      Initialization
  53:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *      ===============  
  54:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *     1. Initialize the peripheral using CRYP_Init(), CRYP_KeyInit() and 
  55:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *        CRYP_IVInit functions:
  56:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *        - Configure the key size (128-, 192- or 256-bit, in the AES only) 
  57:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *        - Enter the symmetric key 
  58:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *        - Configure the data type
  59:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *        - In case of decryption in AES-ECB or AES-CBC, you must prepare 
  60:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *          the key: configure the key preparation mode. Then Enable the CRYP 
  61:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *          peripheral using CRYP_Cmd() function: the BUSY flag is set. 
  62:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *          Wait until BUSY flag is reset : the key is prepared for decryption
  63:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *       - Configure the algorithm and chaining (the DES/TDES in ECB/CBC, the 
  64:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *          AES in ECB/CBC/CTR) 
  65:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *       - Configure the direction (encryption/decryption).
  66:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *       - Write the initialization vectors (in CBC or CTR modes only)
  67:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *
  68:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *    2. Flush the IN and OUT FIFOs using the CRYP_FIFOFlush() function
  69:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *
  70:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *
  71:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *    Basic Processing mode (polling mode) 
  72:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *    ====================================  
  73:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *    1. Enable the cryptographic processor using CRYP_Cmd() function.
  74:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *
  75:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *    2. Write the first blocks in the input FIFO (2 to 8 words) using 
  76:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *       CRYP_DataIn() function.
  77:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *
  78:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *    3. Repeat the following sequence until the complete message has been 
  79:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *       processed:
  80:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *
  81:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *       a) Wait for flag CRYP_FLAG_OFNE occurs (using CRYP_GetFlagStatus() 
  82:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *          function), then read the OUT-FIFO using CRYP_DataOut() function
  83:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *          (1 block or until the FIFO is empty)
  84:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *
  85:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *       b) Wait for flag CRYP_FLAG_IFNF occurs, (using CRYP_GetFlagStatus() 
  86:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *          function then write the IN FIFO using CRYP_DataIn() function 
  87:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *          (1 block or until the FIFO is full)
  88:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *
  89:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *    4. At the end of the processing, CRYP_FLAG_BUSY flag will be reset and 
  90:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *        both FIFOs are empty (CRYP_FLAG_IFEM is set and CRYP_FLAG_OFNE is 
  91:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *        reset). You can disable the peripheral using CRYP_Cmd() function.
  92:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *
  93:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *    Interrupts Processing mode 
  94:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *    ===========================
  95:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *    In this mode, Processing is done when the data are transferred by the 
  96:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *    CPU during interrupts.
  97:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *
  98:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *    1. Enable the interrupts CRYP_IT_INI and CRYP_IT_OUTI using 
  99:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *       CRYP_ITConfig() function.
 100:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *
 101:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *    2. Enable the cryptographic processor using CRYP_Cmd() function.
 102:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *
 103:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *    3. In the CRYP_IT_INI interrupt handler : load the input message into the 
 104:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *       IN FIFO using CRYP_DataIn() function . You can load 2 or 4 words at a 
 105:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *       time, or load data until the IN FIFO is full. When the last word of
 106:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *       the message has been entered into the IN FIFO, disable the CRYP_IT_INI 
 107:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *       interrupt (using CRYP_ITConfig() function).
 108:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *
 109:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *    4. In the CRYP_IT_OUTI interrupt handler : read the output message from 
 110:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *       the OUT FIFO using CRYP_DataOut() function. You can read 1 block (2 or 
 111:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *       4 words) at a time or read data until the FIFO is empty.
 112:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *       When the last word has been read, INIM=0, BUSY=0 and both FIFOs are 
 113:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *       empty (CRYP_FLAG_IFEM is set and CRYP_FLAG_OFNE is reset). 
 114:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *       You can disable the CRYP_IT_OUTI interrupt (using CRYP_ITConfig() 
 115:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *       function) and you can disable the peripheral using CRYP_Cmd() function.
 116:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *
 117:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *    DMA Processing mode 
 118:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *    ====================
 119:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *    In this mode, Processing is done when the DMA is used to transfer the 
 120:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *    data from/to the memory.
 121:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *
 122:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *    1. Configure the DMA controller to transfer the input data from the 
 123:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *       memory using DMA_Init() function. 
 124:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *       The transfer length is the length of the message. 
 125:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *       As message padding is not managed by the peripheral, the message 
 126:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *       length must be an entire number of blocks. The data are transferred 
 127:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *       in burst mode. The burst length is 4 words in the AES and 2 or 4 
 128:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *       words in the DES/TDES. The DMA should be configured to set an 
 129:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *       interrupt on transfer completion of the output data to indicate that 
 130:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *       the processing is finished. 
 131:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *       Refer to DMA peripheral driver for more details.  
 132:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *
 133:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *    2. Enable the cryptographic processor using CRYP_Cmd() function. 
 134:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *       Enable the DMA requests CRYP_DMAReq_DataIN and CRYP_DMAReq_DataOUT 
 135:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *       using CRYP_DMACmd() function.
 136:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *
 137:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *    3. All the transfers and processing are managed by the DMA and the 
 138:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *       cryptographic processor. The DMA transfer complete interrupt indicates 
 139:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *       that the processing is complete. Both FIFOs are normally empty and 
 140:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *       CRYP_FLAG_BUSY flag is reset.
 141:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *
 142:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *  @endverbatim
 143:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *
 144:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   ******************************************************************************
 145:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @attention
 146:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *
 147:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * THE PRESENT FIRMWARE WHICH IS FOR GUIDANCE ONLY AIMS AT PROVIDING CUSTOMERS
 148:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * WITH CODING INFORMATION REGARDING THEIR PRODUCTS IN ORDER FOR THEM TO SAVE
 149:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * TIME. AS A RESULT, STMICROELECTRONICS SHALL NOT BE HELD LIABLE FOR ANY
 150:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * DIRECT, INDIRECT OR CONSEQUENTIAL DAMAGES WITH RESPECT TO ANY CLAIMS ARISING
 151:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * FROM THE CONTENT OF SUCH FIRMWARE AND/OR THE USE MADE BY CUSTOMERS OF THE
 152:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * CODING INFORMATION CONTAINED HEREIN IN CONNECTION WITH THEIR PRODUCTS.
 153:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *
 154:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * <h2><center>&copy; COPYRIGHT 2011 STMicroelectronics</center></h2>
 155:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   ******************************************************************************  
 156:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   */
 157:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 158:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** /* Includes ------------------------------------------------------------------*/
 159:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** #include "stm32f4xx_cryp.h"
 160:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** #include "stm32f4xx_rcc.h"
 161:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 162:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** /** @addtogroup STM32F4xx_StdPeriph_Driver
 163:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @{
 164:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   */
 165:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 166:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** /** @defgroup CRYP 
 167:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @brief CRYP driver modules
 168:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @{
 169:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   */ 
 170:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 171:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** /* Private typedef -----------------------------------------------------------*/
 172:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** /* Private define ------------------------------------------------------------*/
 173:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** #define FLAG_MASK     ((uint8_t)0x20)
 174:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** #define MAX_TIMEOUT   ((uint16_t)0xFFFF)
 175:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 176:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** /* Private macro -------------------------------------------------------------*/
 177:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** /* Private variables ---------------------------------------------------------*/
 178:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** /* Private function prototypes -----------------------------------------------*/
 179:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** /* Private functions ---------------------------------------------------------*/
 180:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 181:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** /** @defgroup CRYP_Private_Functions
 182:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @{
 183:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   */ 
 184:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 185:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** /** @defgroup CRYP_Group1 Initialization and Configuration functions
 186:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****  *  @brief    Initialization and Configuration functions 
 187:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****  *
 188:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** @verbatim    
 189:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****  ===============================================================================
 190:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****                       Initialization and Configuration functions
 191:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****  ===============================================================================  
 192:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   This section provides functions allowing to 
 193:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****    - Initialize the cryptographic Processor using CRYP_Init() function 
 194:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****       -  Encrypt or Decrypt 
 195:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****       -  mode : TDES-ECB, TDES-CBC, 
 196:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****                 DES-ECB, DES-CBC, 
 197:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****                 AES-ECB, AES-CBC, AES-CTR, AES-Key 
 198:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****       - DataType :  32-bit data, 16-bit data, bit data or bit-string
 199:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****       - Key Size (only in AES modes)
 200:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****    - Configure the Encrypt or Decrypt Key using CRYP_KeyInit() function 
 201:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****    - Configure the Initialization Vectors(IV) for CBC and CTR modes using 
 202:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****      CRYP_IVInit() function.  
 203:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****    - Flushes the IN and OUT FIFOs : using CRYP_FIFOFlush() function.                         
 204:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****    - Enable or disable the CRYP Processor using CRYP_Cmd() function 
 205:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****     
 206:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****    
 207:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** @endverbatim
 208:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @{
 209:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   */
 210:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** /**
 211:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @brief  Deinitializes the CRYP peripheral registers to their default reset values
 212:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @param  None
 213:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @retval None
 214:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   */
 215:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** void CRYP_DeInit(void)
 216:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** {
  27              		.loc 1 216 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 1, uses_anonymous_args = 0
  31 0000 80B5     		push	{r7, lr}
  32              	.LCFI0:
  33              		.cfi_def_cfa_offset 8
  34              		.cfi_offset 14, -4
  35              		.cfi_offset 7, -8
  36 0002 00AF     		add	r7, sp, #0
  37              	.LCFI1:
  38              		.cfi_def_cfa_register 7
 217:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   /* Enable CRYP reset state */
 218:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   RCC_AHB2PeriphResetCmd(RCC_AHB2Periph_CRYP, ENABLE);
  39              		.loc 1 218 0
  40 0004 4FF01000 		mov	r0, #16
  41 0008 4FF00101 		mov	r1, #1
  42 000c FFF7FEFF 		bl	RCC_AHB2PeriphResetCmd
 219:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 220:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   /* Release CRYP from reset state */
 221:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   RCC_AHB2PeriphResetCmd(RCC_AHB2Periph_CRYP, DISABLE);
  43              		.loc 1 221 0
  44 0010 4FF01000 		mov	r0, #16
  45 0014 4FF00001 		mov	r1, #0
  46 0018 FFF7FEFF 		bl	RCC_AHB2PeriphResetCmd
 222:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** }
  47              		.loc 1 222 0
  48 001c 80BD     		pop	{r7, pc}
  49              		.cfi_endproc
  50              	.LFE110:
  52 001e 00BF     		.section	.text.CRYP_Init,"ax",%progbits
  53              		.align	2
  54              		.global	CRYP_Init
  55              		.thumb
  56              		.thumb_func
  58              	CRYP_Init:
  59              	.LFB111:
 223:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 224:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** /**
 225:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @brief  Initializes the CRYP peripheral according to the specified parameters
 226:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *         in the CRYP_InitStruct.
 227:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @param  CRYP_InitStruct: pointer to a CRYP_InitTypeDef structure that contains
 228:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *         the configuration information for the CRYP peripheral.
 229:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @retval None
 230:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   */
 231:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** void CRYP_Init(CRYP_InitTypeDef* CRYP_InitStruct)
 232:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** {
  60              		.loc 1 232 0
  61              		.cfi_startproc
  62              		@ args = 0, pretend = 0, frame = 8
  63              		@ frame_needed = 1, uses_anonymous_args = 0
  64              		@ link register save eliminated.
  65 0000 80B4     		push	{r7}
  66              	.LCFI2:
  67              		.cfi_def_cfa_offset 4
  68              		.cfi_offset 7, -4
  69 0002 83B0     		sub	sp, sp, #12
  70              	.LCFI3:
  71              		.cfi_def_cfa_offset 16
  72 0004 00AF     		add	r7, sp, #0
  73              	.LCFI4:
  74              		.cfi_def_cfa_register 7
  75 0006 7860     		str	r0, [r7, #4]
 233:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   /* Check the parameters */
 234:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   assert_param(IS_CRYP_ALGOMODE(CRYP_InitStruct->CRYP_AlgoMode));
 235:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   assert_param(IS_CRYP_DATATYPE(CRYP_InitStruct->CRYP_DataType));
 236:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   assert_param(IS_CRYP_ALGODIR(CRYP_InitStruct->CRYP_AlgoDir));
 237:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 238:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   /* Select Algorithm mode*/  
 239:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   CRYP->CR &= ~CRYP_CR_ALGOMODE;
  76              		.loc 1 239 0
  77 0008 4FF00003 		mov	r3, #0
  78 000c C5F20603 		movt	r3, 20486
  79 0010 4FF00002 		mov	r2, #0
  80 0014 C5F20602 		movt	r2, 20486
  81 0018 1268     		ldr	r2, [r2, #0]
  82 001a 22F03802 		bic	r2, r2, #56
  83 001e 1A60     		str	r2, [r3, #0]
 240:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   CRYP->CR |= CRYP_InitStruct->CRYP_AlgoMode;
  84              		.loc 1 240 0
  85 0020 4FF00003 		mov	r3, #0
  86 0024 C5F20603 		movt	r3, 20486
  87 0028 4FF00002 		mov	r2, #0
  88 002c C5F20602 		movt	r2, 20486
  89 0030 1168     		ldr	r1, [r2, #0]
  90 0032 7A68     		ldr	r2, [r7, #4]
  91 0034 5288     		ldrh	r2, [r2, #2]
  92 0036 0A43     		orrs	r2, r2, r1
  93 0038 1A60     		str	r2, [r3, #0]
 241:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 242:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   /* Select dataType */ 
 243:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   CRYP->CR &= ~CRYP_CR_DATATYPE;
  94              		.loc 1 243 0
  95 003a 4FF00003 		mov	r3, #0
  96 003e C5F20603 		movt	r3, 20486
  97 0042 4FF00002 		mov	r2, #0
  98 0046 C5F20602 		movt	r2, 20486
  99 004a 1268     		ldr	r2, [r2, #0]
 100 004c 22F0C002 		bic	r2, r2, #192
 101 0050 1A60     		str	r2, [r3, #0]
 244:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   CRYP->CR |= CRYP_InitStruct->CRYP_DataType;
 102              		.loc 1 244 0
 103 0052 4FF00003 		mov	r3, #0
 104 0056 C5F20603 		movt	r3, 20486
 105 005a 4FF00002 		mov	r2, #0
 106 005e C5F20602 		movt	r2, 20486
 107 0062 1168     		ldr	r1, [r2, #0]
 108 0064 7A68     		ldr	r2, [r7, #4]
 109 0066 9288     		ldrh	r2, [r2, #4]
 110 0068 0A43     		orrs	r2, r2, r1
 111 006a 1A60     		str	r2, [r3, #0]
 245:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 246:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   /* select Key size (used only with AES algorithm) */
 247:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   if ((CRYP_InitStruct->CRYP_AlgoMode == CRYP_AlgoMode_AES_ECB) ||
 112              		.loc 1 247 0
 113 006c 7B68     		ldr	r3, [r7, #4]
 114 006e 5B88     		ldrh	r3, [r3, #2]
 115 0070 202B     		cmp	r3, #32
 116 0072 0BD0     		beq	.L3
 248:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****       (CRYP_InitStruct->CRYP_AlgoMode == CRYP_AlgoMode_AES_CBC) ||
 117              		.loc 1 248 0 discriminator 1
 118 0074 7B68     		ldr	r3, [r7, #4]
 119 0076 5B88     		ldrh	r3, [r3, #2]
 247:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   if ((CRYP_InitStruct->CRYP_AlgoMode == CRYP_AlgoMode_AES_ECB) ||
 120              		.loc 1 247 0 discriminator 1
 121 0078 282B     		cmp	r3, #40
 122 007a 07D0     		beq	.L3
 249:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****       (CRYP_InitStruct->CRYP_AlgoMode == CRYP_AlgoMode_AES_CTR) ||
 123              		.loc 1 249 0
 124 007c 7B68     		ldr	r3, [r7, #4]
 125 007e 5B88     		ldrh	r3, [r3, #2]
 248:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****       (CRYP_InitStruct->CRYP_AlgoMode == CRYP_AlgoMode_AES_CBC) ||
 126              		.loc 1 248 0
 127 0080 302B     		cmp	r3, #48
 128 0082 03D0     		beq	.L3
 250:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****       (CRYP_InitStruct->CRYP_AlgoMode == CRYP_AlgoMode_AES_Key))
 129              		.loc 1 250 0
 130 0084 7B68     		ldr	r3, [r7, #4]
 131 0086 5B88     		ldrh	r3, [r3, #2]
 249:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****       (CRYP_InitStruct->CRYP_AlgoMode == CRYP_AlgoMode_AES_CTR) ||
 132              		.loc 1 249 0
 133 0088 382B     		cmp	r3, #56
 134 008a 18D1     		bne	.L4
 135              	.L3:
 251:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   {
 252:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****     assert_param(IS_CRYP_KEYSIZE(CRYP_InitStruct->CRYP_KeySize));
 253:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****     CRYP->CR &= ~CRYP_CR_KEYSIZE;
 136              		.loc 1 253 0
 137 008c 4FF00003 		mov	r3, #0
 138 0090 C5F20603 		movt	r3, 20486
 139 0094 4FF00002 		mov	r2, #0
 140 0098 C5F20602 		movt	r2, 20486
 141 009c 1268     		ldr	r2, [r2, #0]
 142 009e 22F44072 		bic	r2, r2, #768
 143 00a2 1A60     		str	r2, [r3, #0]
 254:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****     CRYP->CR |= CRYP_InitStruct->CRYP_KeySize; /* Key size and value must be 
 144              		.loc 1 254 0
 145 00a4 4FF00003 		mov	r3, #0
 146 00a8 C5F20603 		movt	r3, 20486
 147 00ac 4FF00002 		mov	r2, #0
 148 00b0 C5F20602 		movt	r2, 20486
 149 00b4 1168     		ldr	r1, [r2, #0]
 150 00b6 7A68     		ldr	r2, [r7, #4]
 151 00b8 D288     		ldrh	r2, [r2, #6]
 152 00ba 0A43     		orrs	r2, r2, r1
 153 00bc 1A60     		str	r2, [r3, #0]
 154              	.L4:
 255:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****                                                   configured once the key has 
 256:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****                                                   been prepared */
 257:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   }
 258:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 259:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   /* Select data Direction */ 
 260:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   CRYP->CR &= ~CRYP_CR_ALGODIR;
 155              		.loc 1 260 0
 156 00be 4FF00003 		mov	r3, #0
 157 00c2 C5F20603 		movt	r3, 20486
 158 00c6 4FF00002 		mov	r2, #0
 159 00ca C5F20602 		movt	r2, 20486
 160 00ce 1268     		ldr	r2, [r2, #0]
 161 00d0 22F00402 		bic	r2, r2, #4
 162 00d4 1A60     		str	r2, [r3, #0]
 261:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   CRYP->CR |= CRYP_InitStruct->CRYP_AlgoDir;
 163              		.loc 1 261 0
 164 00d6 4FF00003 		mov	r3, #0
 165 00da C5F20603 		movt	r3, 20486
 166 00de 4FF00002 		mov	r2, #0
 167 00e2 C5F20602 		movt	r2, 20486
 168 00e6 1168     		ldr	r1, [r2, #0]
 169 00e8 7A68     		ldr	r2, [r7, #4]
 170 00ea 1288     		ldrh	r2, [r2, #0]
 171 00ec 0A43     		orrs	r2, r2, r1
 172 00ee 1A60     		str	r2, [r3, #0]
 262:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** }
 173              		.loc 1 262 0
 174 00f0 07F10C07 		add	r7, r7, #12
 175 00f4 BD46     		mov	sp, r7
 176 00f6 80BC     		pop	{r7}
 177 00f8 7047     		bx	lr
 178              		.cfi_endproc
 179              	.LFE111:
 181 00fa 00BF     		.section	.text.CRYP_StructInit,"ax",%progbits
 182              		.align	2
 183              		.global	CRYP_StructInit
 184              		.thumb
 185              		.thumb_func
 187              	CRYP_StructInit:
 188              	.LFB112:
 263:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 264:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** /**
 265:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @brief  Fills each CRYP_InitStruct member with its default value.
 266:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @param  CRYP_InitStruct: pointer to a CRYP_InitTypeDef structure which will
 267:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *         be initialized.
 268:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @retval None
 269:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   */
 270:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** void CRYP_StructInit(CRYP_InitTypeDef* CRYP_InitStruct)
 271:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** {
 189              		.loc 1 271 0
 190              		.cfi_startproc
 191              		@ args = 0, pretend = 0, frame = 8
 192              		@ frame_needed = 1, uses_anonymous_args = 0
 193              		@ link register save eliminated.
 194 0000 80B4     		push	{r7}
 195              	.LCFI5:
 196              		.cfi_def_cfa_offset 4
 197              		.cfi_offset 7, -4
 198 0002 83B0     		sub	sp, sp, #12
 199              	.LCFI6:
 200              		.cfi_def_cfa_offset 16
 201 0004 00AF     		add	r7, sp, #0
 202              	.LCFI7:
 203              		.cfi_def_cfa_register 7
 204 0006 7860     		str	r0, [r7, #4]
 272:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   /* Initialize the CRYP_AlgoDir member */
 273:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   CRYP_InitStruct->CRYP_AlgoDir = CRYP_AlgoDir_Encrypt;
 205              		.loc 1 273 0
 206 0008 7B68     		ldr	r3, [r7, #4]
 207 000a 4FF00002 		mov	r2, #0
 208 000e 1A80     		strh	r2, [r3, #0]	@ movhi
 274:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 275:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   /* initialize the CRYP_AlgoMode member */
 276:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   CRYP_InitStruct->CRYP_AlgoMode = CRYP_AlgoMode_TDES_ECB;
 209              		.loc 1 276 0
 210 0010 7B68     		ldr	r3, [r7, #4]
 211 0012 4FF00002 		mov	r2, #0
 212 0016 5A80     		strh	r2, [r3, #2]	@ movhi
 277:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 278:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   /* initialize the CRYP_DataType member */
 279:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   CRYP_InitStruct->CRYP_DataType = CRYP_DataType_32b;
 213              		.loc 1 279 0
 214 0018 7B68     		ldr	r3, [r7, #4]
 215 001a 4FF00002 		mov	r2, #0
 216 001e 9A80     		strh	r2, [r3, #4]	@ movhi
 280:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   
 281:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   /* Initialize the CRYP_KeySize member */
 282:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   CRYP_InitStruct->CRYP_KeySize = CRYP_KeySize_128b;
 217              		.loc 1 282 0
 218 0020 7B68     		ldr	r3, [r7, #4]
 219 0022 4FF00002 		mov	r2, #0
 220 0026 DA80     		strh	r2, [r3, #6]	@ movhi
 283:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** }
 221              		.loc 1 283 0
 222 0028 07F10C07 		add	r7, r7, #12
 223 002c BD46     		mov	sp, r7
 224 002e 80BC     		pop	{r7}
 225 0030 7047     		bx	lr
 226              		.cfi_endproc
 227              	.LFE112:
 229 0032 00BF     		.section	.text.CRYP_KeyInit,"ax",%progbits
 230              		.align	2
 231              		.global	CRYP_KeyInit
 232              		.thumb
 233              		.thumb_func
 235              	CRYP_KeyInit:
 236              	.LFB113:
 284:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 285:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** /**
 286:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @brief  Initializes the CRYP Keys according to the specified parameters in
 287:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *         the CRYP_KeyInitStruct.
 288:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @param  CRYP_KeyInitStruct: pointer to a CRYP_KeyInitTypeDef structure that
 289:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *         contains the configuration information for the CRYP Keys.
 290:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @retval None
 291:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   */
 292:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** void CRYP_KeyInit(CRYP_KeyInitTypeDef* CRYP_KeyInitStruct)
 293:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** {
 237              		.loc 1 293 0
 238              		.cfi_startproc
 239              		@ args = 0, pretend = 0, frame = 8
 240              		@ frame_needed = 1, uses_anonymous_args = 0
 241              		@ link register save eliminated.
 242 0000 80B4     		push	{r7}
 243              	.LCFI8:
 244              		.cfi_def_cfa_offset 4
 245              		.cfi_offset 7, -4
 246 0002 83B0     		sub	sp, sp, #12
 247              	.LCFI9:
 248              		.cfi_def_cfa_offset 16
 249 0004 00AF     		add	r7, sp, #0
 250              	.LCFI10:
 251              		.cfi_def_cfa_register 7
 252 0006 7860     		str	r0, [r7, #4]
 294:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   /* Key Initialisation */
 295:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   CRYP->K0LR = CRYP_KeyInitStruct->CRYP_Key0Left;
 253              		.loc 1 295 0
 254 0008 4FF00003 		mov	r3, #0
 255 000c C5F20603 		movt	r3, 20486
 256 0010 7A68     		ldr	r2, [r7, #4]
 257 0012 1268     		ldr	r2, [r2, #0]
 258 0014 1A62     		str	r2, [r3, #32]
 296:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   CRYP->K0RR = CRYP_KeyInitStruct->CRYP_Key0Right;
 259              		.loc 1 296 0
 260 0016 4FF00003 		mov	r3, #0
 261 001a C5F20603 		movt	r3, 20486
 262 001e 7A68     		ldr	r2, [r7, #4]
 263 0020 5268     		ldr	r2, [r2, #4]
 264 0022 5A62     		str	r2, [r3, #36]
 297:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   CRYP->K1LR = CRYP_KeyInitStruct->CRYP_Key1Left;
 265              		.loc 1 297 0
 266 0024 4FF00003 		mov	r3, #0
 267 0028 C5F20603 		movt	r3, 20486
 268 002c 7A68     		ldr	r2, [r7, #4]
 269 002e 9268     		ldr	r2, [r2, #8]
 270 0030 9A62     		str	r2, [r3, #40]
 298:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   CRYP->K1RR = CRYP_KeyInitStruct->CRYP_Key1Right;
 271              		.loc 1 298 0
 272 0032 4FF00003 		mov	r3, #0
 273 0036 C5F20603 		movt	r3, 20486
 274 003a 7A68     		ldr	r2, [r7, #4]
 275 003c D268     		ldr	r2, [r2, #12]
 276 003e DA62     		str	r2, [r3, #44]
 299:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   CRYP->K2LR = CRYP_KeyInitStruct->CRYP_Key2Left;
 277              		.loc 1 299 0
 278 0040 4FF00003 		mov	r3, #0
 279 0044 C5F20603 		movt	r3, 20486
 280 0048 7A68     		ldr	r2, [r7, #4]
 281 004a 1269     		ldr	r2, [r2, #16]
 282 004c 1A63     		str	r2, [r3, #48]
 300:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   CRYP->K2RR = CRYP_KeyInitStruct->CRYP_Key2Right;
 283              		.loc 1 300 0
 284 004e 4FF00003 		mov	r3, #0
 285 0052 C5F20603 		movt	r3, 20486
 286 0056 7A68     		ldr	r2, [r7, #4]
 287 0058 5269     		ldr	r2, [r2, #20]
 288 005a 5A63     		str	r2, [r3, #52]
 301:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   CRYP->K3LR = CRYP_KeyInitStruct->CRYP_Key3Left;
 289              		.loc 1 301 0
 290 005c 4FF00003 		mov	r3, #0
 291 0060 C5F20603 		movt	r3, 20486
 292 0064 7A68     		ldr	r2, [r7, #4]
 293 0066 9269     		ldr	r2, [r2, #24]
 294 0068 9A63     		str	r2, [r3, #56]
 302:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   CRYP->K3RR = CRYP_KeyInitStruct->CRYP_Key3Right;
 295              		.loc 1 302 0
 296 006a 4FF00003 		mov	r3, #0
 297 006e C5F20603 		movt	r3, 20486
 298 0072 7A68     		ldr	r2, [r7, #4]
 299 0074 D269     		ldr	r2, [r2, #28]
 300 0076 DA63     		str	r2, [r3, #60]
 303:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** }
 301              		.loc 1 303 0
 302 0078 07F10C07 		add	r7, r7, #12
 303 007c BD46     		mov	sp, r7
 304 007e 80BC     		pop	{r7}
 305 0080 7047     		bx	lr
 306              		.cfi_endproc
 307              	.LFE113:
 309 0082 00BF     		.section	.text.CRYP_KeyStructInit,"ax",%progbits
 310              		.align	2
 311              		.global	CRYP_KeyStructInit
 312              		.thumb
 313              		.thumb_func
 315              	CRYP_KeyStructInit:
 316              	.LFB114:
 304:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 305:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** /**
 306:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @brief  Fills each CRYP_KeyInitStruct member with its default value.
 307:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @param  CRYP_KeyInitStruct: pointer to a CRYP_KeyInitTypeDef structure 
 308:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *         which will be initialized.
 309:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @retval None
 310:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   */
 311:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** void CRYP_KeyStructInit(CRYP_KeyInitTypeDef* CRYP_KeyInitStruct)
 312:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** {
 317              		.loc 1 312 0
 318              		.cfi_startproc
 319              		@ args = 0, pretend = 0, frame = 8
 320              		@ frame_needed = 1, uses_anonymous_args = 0
 321              		@ link register save eliminated.
 322 0000 80B4     		push	{r7}
 323              	.LCFI11:
 324              		.cfi_def_cfa_offset 4
 325              		.cfi_offset 7, -4
 326 0002 83B0     		sub	sp, sp, #12
 327              	.LCFI12:
 328              		.cfi_def_cfa_offset 16
 329 0004 00AF     		add	r7, sp, #0
 330              	.LCFI13:
 331              		.cfi_def_cfa_register 7
 332 0006 7860     		str	r0, [r7, #4]
 313:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   CRYP_KeyInitStruct->CRYP_Key0Left  = 0;
 333              		.loc 1 313 0
 334 0008 7B68     		ldr	r3, [r7, #4]
 335 000a 4FF00002 		mov	r2, #0
 336 000e 1A60     		str	r2, [r3, #0]
 314:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   CRYP_KeyInitStruct->CRYP_Key0Right = 0;
 337              		.loc 1 314 0
 338 0010 7B68     		ldr	r3, [r7, #4]
 339 0012 4FF00002 		mov	r2, #0
 340 0016 5A60     		str	r2, [r3, #4]
 315:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   CRYP_KeyInitStruct->CRYP_Key1Left  = 0;
 341              		.loc 1 315 0
 342 0018 7B68     		ldr	r3, [r7, #4]
 343 001a 4FF00002 		mov	r2, #0
 344 001e 9A60     		str	r2, [r3, #8]
 316:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   CRYP_KeyInitStruct->CRYP_Key1Right = 0;
 345              		.loc 1 316 0
 346 0020 7B68     		ldr	r3, [r7, #4]
 347 0022 4FF00002 		mov	r2, #0
 348 0026 DA60     		str	r2, [r3, #12]
 317:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   CRYP_KeyInitStruct->CRYP_Key2Left  = 0;
 349              		.loc 1 317 0
 350 0028 7B68     		ldr	r3, [r7, #4]
 351 002a 4FF00002 		mov	r2, #0
 352 002e 1A61     		str	r2, [r3, #16]
 318:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   CRYP_KeyInitStruct->CRYP_Key2Right = 0;
 353              		.loc 1 318 0
 354 0030 7B68     		ldr	r3, [r7, #4]
 355 0032 4FF00002 		mov	r2, #0
 356 0036 5A61     		str	r2, [r3, #20]
 319:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   CRYP_KeyInitStruct->CRYP_Key3Left  = 0;
 357              		.loc 1 319 0
 358 0038 7B68     		ldr	r3, [r7, #4]
 359 003a 4FF00002 		mov	r2, #0
 360 003e 9A61     		str	r2, [r3, #24]
 320:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   CRYP_KeyInitStruct->CRYP_Key3Right = 0;
 361              		.loc 1 320 0
 362 0040 7B68     		ldr	r3, [r7, #4]
 363 0042 4FF00002 		mov	r2, #0
 364 0046 DA61     		str	r2, [r3, #28]
 321:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** }
 365              		.loc 1 321 0
 366 0048 07F10C07 		add	r7, r7, #12
 367 004c BD46     		mov	sp, r7
 368 004e 80BC     		pop	{r7}
 369 0050 7047     		bx	lr
 370              		.cfi_endproc
 371              	.LFE114:
 373 0052 00BF     		.section	.text.CRYP_IVInit,"ax",%progbits
 374              		.align	2
 375              		.global	CRYP_IVInit
 376              		.thumb
 377              		.thumb_func
 379              	CRYP_IVInit:
 380              	.LFB115:
 322:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** /**
 323:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @brief  Initializes the CRYP Initialization Vectors(IV) according to the
 324:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *         specified parameters in the CRYP_IVInitStruct.
 325:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @param  CRYP_IVInitStruct: pointer to a CRYP_IVInitTypeDef structure that contains
 326:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *         the configuration information for the CRYP Initialization Vectors(IV).
 327:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @retval None
 328:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   */
 329:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** void CRYP_IVInit(CRYP_IVInitTypeDef* CRYP_IVInitStruct)
 330:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** {
 381              		.loc 1 330 0
 382              		.cfi_startproc
 383              		@ args = 0, pretend = 0, frame = 8
 384              		@ frame_needed = 1, uses_anonymous_args = 0
 385              		@ link register save eliminated.
 386 0000 80B4     		push	{r7}
 387              	.LCFI14:
 388              		.cfi_def_cfa_offset 4
 389              		.cfi_offset 7, -4
 390 0002 83B0     		sub	sp, sp, #12
 391              	.LCFI15:
 392              		.cfi_def_cfa_offset 16
 393 0004 00AF     		add	r7, sp, #0
 394              	.LCFI16:
 395              		.cfi_def_cfa_register 7
 396 0006 7860     		str	r0, [r7, #4]
 331:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   CRYP->IV0LR = CRYP_IVInitStruct->CRYP_IV0Left;
 397              		.loc 1 331 0
 398 0008 4FF00003 		mov	r3, #0
 399 000c C5F20603 		movt	r3, 20486
 400 0010 7A68     		ldr	r2, [r7, #4]
 401 0012 1268     		ldr	r2, [r2, #0]
 402 0014 1A64     		str	r2, [r3, #64]
 332:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   CRYP->IV0RR = CRYP_IVInitStruct->CRYP_IV0Right;
 403              		.loc 1 332 0
 404 0016 4FF00003 		mov	r3, #0
 405 001a C5F20603 		movt	r3, 20486
 406 001e 7A68     		ldr	r2, [r7, #4]
 407 0020 5268     		ldr	r2, [r2, #4]
 408 0022 5A64     		str	r2, [r3, #68]
 333:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   CRYP->IV1LR = CRYP_IVInitStruct->CRYP_IV1Left;
 409              		.loc 1 333 0
 410 0024 4FF00003 		mov	r3, #0
 411 0028 C5F20603 		movt	r3, 20486
 412 002c 7A68     		ldr	r2, [r7, #4]
 413 002e 9268     		ldr	r2, [r2, #8]
 414 0030 9A64     		str	r2, [r3, #72]
 334:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   CRYP->IV1RR = CRYP_IVInitStruct->CRYP_IV1Right;
 415              		.loc 1 334 0
 416 0032 4FF00003 		mov	r3, #0
 417 0036 C5F20603 		movt	r3, 20486
 418 003a 7A68     		ldr	r2, [r7, #4]
 419 003c D268     		ldr	r2, [r2, #12]
 420 003e DA64     		str	r2, [r3, #76]
 335:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** }
 421              		.loc 1 335 0
 422 0040 07F10C07 		add	r7, r7, #12
 423 0044 BD46     		mov	sp, r7
 424 0046 80BC     		pop	{r7}
 425 0048 7047     		bx	lr
 426              		.cfi_endproc
 427              	.LFE115:
 429 004a 00BF     		.section	.text.CRYP_IVStructInit,"ax",%progbits
 430              		.align	2
 431              		.global	CRYP_IVStructInit
 432              		.thumb
 433              		.thumb_func
 435              	CRYP_IVStructInit:
 436              	.LFB116:
 336:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 337:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** /**
 338:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @brief  Fills each CRYP_IVInitStruct member with its default value.
 339:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @param  CRYP_IVInitStruct: pointer to a CRYP_IVInitTypeDef Initialization 
 340:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *         Vectors(IV) structure which will be initialized.
 341:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @retval None
 342:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   */
 343:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** void CRYP_IVStructInit(CRYP_IVInitTypeDef* CRYP_IVInitStruct)
 344:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** {
 437              		.loc 1 344 0
 438              		.cfi_startproc
 439              		@ args = 0, pretend = 0, frame = 8
 440              		@ frame_needed = 1, uses_anonymous_args = 0
 441              		@ link register save eliminated.
 442 0000 80B4     		push	{r7}
 443              	.LCFI17:
 444              		.cfi_def_cfa_offset 4
 445              		.cfi_offset 7, -4
 446 0002 83B0     		sub	sp, sp, #12
 447              	.LCFI18:
 448              		.cfi_def_cfa_offset 16
 449 0004 00AF     		add	r7, sp, #0
 450              	.LCFI19:
 451              		.cfi_def_cfa_register 7
 452 0006 7860     		str	r0, [r7, #4]
 345:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   CRYP_IVInitStruct->CRYP_IV0Left  = 0;
 453              		.loc 1 345 0
 454 0008 7B68     		ldr	r3, [r7, #4]
 455 000a 4FF00002 		mov	r2, #0
 456 000e 1A60     		str	r2, [r3, #0]
 346:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   CRYP_IVInitStruct->CRYP_IV0Right = 0;
 457              		.loc 1 346 0
 458 0010 7B68     		ldr	r3, [r7, #4]
 459 0012 4FF00002 		mov	r2, #0
 460 0016 5A60     		str	r2, [r3, #4]
 347:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   CRYP_IVInitStruct->CRYP_IV1Left  = 0;
 461              		.loc 1 347 0
 462 0018 7B68     		ldr	r3, [r7, #4]
 463 001a 4FF00002 		mov	r2, #0
 464 001e 9A60     		str	r2, [r3, #8]
 348:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   CRYP_IVInitStruct->CRYP_IV1Right = 0;
 465              		.loc 1 348 0
 466 0020 7B68     		ldr	r3, [r7, #4]
 467 0022 4FF00002 		mov	r2, #0
 468 0026 DA60     		str	r2, [r3, #12]
 349:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** }
 469              		.loc 1 349 0
 470 0028 07F10C07 		add	r7, r7, #12
 471 002c BD46     		mov	sp, r7
 472 002e 80BC     		pop	{r7}
 473 0030 7047     		bx	lr
 474              		.cfi_endproc
 475              	.LFE116:
 477 0032 00BF     		.section	.text.CRYP_FIFOFlush,"ax",%progbits
 478              		.align	2
 479              		.global	CRYP_FIFOFlush
 480              		.thumb
 481              		.thumb_func
 483              	CRYP_FIFOFlush:
 484              	.LFB117:
 350:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 351:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** /**
 352:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @brief  Flushes the IN and OUT FIFOs (that is read and write pointers of the 
 353:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *         FIFOs are reset)
 354:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @note   The FIFOs must be flushed only when BUSY flag is reset.  
 355:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @param  None
 356:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @retval None
 357:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   */
 358:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** void CRYP_FIFOFlush(void)
 359:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** {
 485              		.loc 1 359 0
 486              		.cfi_startproc
 487              		@ args = 0, pretend = 0, frame = 0
 488              		@ frame_needed = 1, uses_anonymous_args = 0
 489              		@ link register save eliminated.
 490 0000 80B4     		push	{r7}
 491              	.LCFI20:
 492              		.cfi_def_cfa_offset 4
 493              		.cfi_offset 7, -4
 494 0002 00AF     		add	r7, sp, #0
 495              	.LCFI21:
 496              		.cfi_def_cfa_register 7
 360:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   /* Reset the read and write pointers of the FIFOs */
 361:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   CRYP->CR |= CRYP_CR_FFLUSH;
 497              		.loc 1 361 0
 498 0004 4FF00003 		mov	r3, #0
 499 0008 C5F20603 		movt	r3, 20486
 500 000c 4FF00002 		mov	r2, #0
 501 0010 C5F20602 		movt	r2, 20486
 502 0014 1268     		ldr	r2, [r2, #0]
 503 0016 42F48042 		orr	r2, r2, #16384
 504 001a 1A60     		str	r2, [r3, #0]
 362:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** }
 505              		.loc 1 362 0
 506 001c BD46     		mov	sp, r7
 507 001e 80BC     		pop	{r7}
 508 0020 7047     		bx	lr
 509              		.cfi_endproc
 510              	.LFE117:
 512 0022 00BF     		.section	.text.CRYP_Cmd,"ax",%progbits
 513              		.align	2
 514              		.global	CRYP_Cmd
 515              		.thumb
 516              		.thumb_func
 518              	CRYP_Cmd:
 519              	.LFB118:
 363:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 364:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** /**
 365:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @brief  Enables or disables the CRYP peripheral.
 366:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @param  NewState: new state of the CRYP peripheral.
 367:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *          This parameter can be: ENABLE or DISABLE.
 368:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @retval None
 369:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   */
 370:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** void CRYP_Cmd(FunctionalState NewState)
 371:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** {
 520              		.loc 1 371 0
 521              		.cfi_startproc
 522              		@ args = 0, pretend = 0, frame = 8
 523              		@ frame_needed = 1, uses_anonymous_args = 0
 524              		@ link register save eliminated.
 525 0000 80B4     		push	{r7}
 526              	.LCFI22:
 527              		.cfi_def_cfa_offset 4
 528              		.cfi_offset 7, -4
 529 0002 83B0     		sub	sp, sp, #12
 530              	.LCFI23:
 531              		.cfi_def_cfa_offset 16
 532 0004 00AF     		add	r7, sp, #0
 533              	.LCFI24:
 534              		.cfi_def_cfa_register 7
 535 0006 0346     		mov	r3, r0
 536 0008 FB71     		strb	r3, [r7, #7]
 372:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   /* Check the parameters */
 373:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 374:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 375:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   if (NewState != DISABLE)
 537              		.loc 1 375 0
 538 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 539 000c 002B     		cmp	r3, #0
 540 000e 0CD0     		beq	.L12
 376:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   {
 377:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****     /* Enable the Cryptographic processor */
 378:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****     CRYP->CR |= CRYP_CR_CRYPEN;
 541              		.loc 1 378 0
 542 0010 4FF00003 		mov	r3, #0
 543 0014 C5F20603 		movt	r3, 20486
 544 0018 4FF00002 		mov	r2, #0
 545 001c C5F20602 		movt	r2, 20486
 546 0020 1268     		ldr	r2, [r2, #0]
 547 0022 42F40042 		orr	r2, r2, #32768
 548 0026 1A60     		str	r2, [r3, #0]
 549 0028 0BE0     		b	.L11
 550              	.L12:
 379:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   }
 380:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   else
 381:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   {
 382:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****     /* Disable the Cryptographic processor */
 383:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****     CRYP->CR &= ~CRYP_CR_CRYPEN;
 551              		.loc 1 383 0
 552 002a 4FF00003 		mov	r3, #0
 553 002e C5F20603 		movt	r3, 20486
 554 0032 4FF00002 		mov	r2, #0
 555 0036 C5F20602 		movt	r2, 20486
 556 003a 1268     		ldr	r2, [r2, #0]
 557 003c 22F40042 		bic	r2, r2, #32768
 558 0040 1A60     		str	r2, [r3, #0]
 559              	.L11:
 384:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   }
 385:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** }
 560              		.loc 1 385 0
 561 0042 07F10C07 		add	r7, r7, #12
 562 0046 BD46     		mov	sp, r7
 563 0048 80BC     		pop	{r7}
 564 004a 7047     		bx	lr
 565              		.cfi_endproc
 566              	.LFE118:
 568              		.section	.text.CRYP_DataIn,"ax",%progbits
 569              		.align	2
 570              		.global	CRYP_DataIn
 571              		.thumb
 572              		.thumb_func
 574              	CRYP_DataIn:
 575              	.LFB119:
 386:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** /**
 387:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @}
 388:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   */
 389:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   
 390:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** /** @defgroup CRYP_Group2 CRYP Data processing functions
 391:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****  *  @brief    CRYP Data processing functions
 392:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****  *
 393:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** @verbatim    
 394:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****  ===============================================================================
 395:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****                       CRYP Data processing functions
 396:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****  ===============================================================================  
 397:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   This section provides functions allowing the encryption and decryption 
 398:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   operations: 
 399:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   - Enter data to be treated in the IN FIFO : using CRYP_DataIn() function.
 400:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   - Get the data result from the OUT FIFO : using CRYP_DataOut() function.
 401:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 402:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** @endverbatim
 403:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @{
 404:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   */
 405:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 406:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** /**
 407:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @brief  Writes data in the Data Input register (DIN).
 408:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @note   After the DIN register has been read once or several times, 
 409:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *         the FIFO must be flushed (using CRYP_FIFOFlush() function).  
 410:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @param  Data: data to write in Data Input register
 411:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @retval None
 412:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   */
 413:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** void CRYP_DataIn(uint32_t Data)
 414:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** {
 576              		.loc 1 414 0
 577              		.cfi_startproc
 578              		@ args = 0, pretend = 0, frame = 8
 579              		@ frame_needed = 1, uses_anonymous_args = 0
 580              		@ link register save eliminated.
 581 0000 80B4     		push	{r7}
 582              	.LCFI25:
 583              		.cfi_def_cfa_offset 4
 584              		.cfi_offset 7, -4
 585 0002 83B0     		sub	sp, sp, #12
 586              	.LCFI26:
 587              		.cfi_def_cfa_offset 16
 588 0004 00AF     		add	r7, sp, #0
 589              	.LCFI27:
 590              		.cfi_def_cfa_register 7
 591 0006 7860     		str	r0, [r7, #4]
 415:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   CRYP->DR = Data;
 592              		.loc 1 415 0
 593 0008 4FF00003 		mov	r3, #0
 594 000c C5F20603 		movt	r3, 20486
 595 0010 7A68     		ldr	r2, [r7, #4]
 596 0012 9A60     		str	r2, [r3, #8]
 416:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** }
 597              		.loc 1 416 0
 598 0014 07F10C07 		add	r7, r7, #12
 599 0018 BD46     		mov	sp, r7
 600 001a 80BC     		pop	{r7}
 601 001c 7047     		bx	lr
 602              		.cfi_endproc
 603              	.LFE119:
 605 001e 00BF     		.section	.text.CRYP_DataOut,"ax",%progbits
 606              		.align	2
 607              		.global	CRYP_DataOut
 608              		.thumb
 609              		.thumb_func
 611              	CRYP_DataOut:
 612              	.LFB120:
 417:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 418:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** /**
 419:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @brief  Returns the last data entered into the output FIFO.
 420:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @param  None
 421:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @retval Last data entered into the output FIFO.
 422:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   */
 423:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** uint32_t CRYP_DataOut(void)
 424:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** {
 613              		.loc 1 424 0
 614              		.cfi_startproc
 615              		@ args = 0, pretend = 0, frame = 0
 616              		@ frame_needed = 1, uses_anonymous_args = 0
 617              		@ link register save eliminated.
 618 0000 80B4     		push	{r7}
 619              	.LCFI28:
 620              		.cfi_def_cfa_offset 4
 621              		.cfi_offset 7, -4
 622 0002 00AF     		add	r7, sp, #0
 623              	.LCFI29:
 624              		.cfi_def_cfa_register 7
 425:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   return CRYP->DOUT;
 625              		.loc 1 425 0
 626 0004 4FF00003 		mov	r3, #0
 627 0008 C5F20603 		movt	r3, 20486
 628 000c DB68     		ldr	r3, [r3, #12]
 426:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** }
 629              		.loc 1 426 0
 630 000e 1846     		mov	r0, r3
 631 0010 BD46     		mov	sp, r7
 632 0012 80BC     		pop	{r7}
 633 0014 7047     		bx	lr
 634              		.cfi_endproc
 635              	.LFE120:
 637 0016 00BF     		.section	.text.CRYP_SaveContext,"ax",%progbits
 638              		.align	2
 639              		.global	CRYP_SaveContext
 640              		.thumb
 641              		.thumb_func
 643              	CRYP_SaveContext:
 644              	.LFB121:
 427:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** /**
 428:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @}
 429:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   */
 430:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   
 431:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** /** @defgroup CRYP_Group3 Context swapping functions
 432:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****  *  @brief   Context swapping functions
 433:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****  *
 434:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** @verbatim   
 435:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****  ===============================================================================
 436:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****                              Context swapping functions
 437:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****  ===============================================================================  
 438:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 439:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   This section provides functions allowing to save and store CRYP Context
 440:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 441:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   It is possible to interrupt an encryption/ decryption/ key generation process 
 442:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   to perform another processing with a higher priority, and to complete the 
 443:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   interrupted process later on, when the higher-priority task is complete. To do 
 444:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   so, the context of the interrupted task must be saved from the CRYP registers 
 445:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   to memory, and then be restored from memory to the CRYP registers.
 446:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****    
 447:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   1. To save the current context, use CRYP_SaveContext() function
 448:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   2. To restore the saved context, use CRYP_RestoreContext() function 
 449:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 450:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 451:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** @endverbatim
 452:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @{
 453:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   */
 454:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   
 455:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** /**
 456:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @brief  Saves the CRYP peripheral Context. 
 457:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @note   This function stops DMA transfer before to save the context. After 
 458:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *         restoring the context, you have to enable the DMA again (if the DMA
 459:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *         was previously used).
 460:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @param  CRYP_ContextSave: pointer to a CRYP_Context structure that contains
 461:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *         the repository for current context.
 462:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @param  CRYP_KeyInitStruct: pointer to a CRYP_KeyInitTypeDef structure that 
 463:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *         contains the configuration information for the CRYP Keys.  
 464:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @retval None
 465:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   */
 466:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** ErrorStatus CRYP_SaveContext(CRYP_Context* CRYP_ContextSave,
 467:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****                              CRYP_KeyInitTypeDef* CRYP_KeyInitStruct)
 468:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** {
 645              		.loc 1 468 0
 646              		.cfi_startproc
 647              		@ args = 0, pretend = 0, frame = 24
 648              		@ frame_needed = 1, uses_anonymous_args = 0
 649              		@ link register save eliminated.
 650 0000 80B4     		push	{r7}
 651              	.LCFI30:
 652              		.cfi_def_cfa_offset 4
 653              		.cfi_offset 7, -4
 654 0002 87B0     		sub	sp, sp, #28
 655              	.LCFI31:
 656              		.cfi_def_cfa_offset 32
 657 0004 00AF     		add	r7, sp, #0
 658              	.LCFI32:
 659              		.cfi_def_cfa_register 7
 660 0006 7860     		str	r0, [r7, #4]
 661 0008 3960     		str	r1, [r7, #0]
 469:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   __IO uint32_t timeout = 0;
 662              		.loc 1 469 0
 663 000a 4FF00003 		mov	r3, #0
 664 000e BB60     		str	r3, [r7, #8]
 470:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   uint32_t ckeckmask = 0, bitstatus;    
 665              		.loc 1 470 0
 666 0010 4FF00003 		mov	r3, #0
 667 0014 7B61     		str	r3, [r7, #20]
 471:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   ErrorStatus status = ERROR;
 668              		.loc 1 471 0
 669 0016 4FF00003 		mov	r3, #0
 670 001a FB74     		strb	r3, [r7, #19]
 472:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 473:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   /* Stop DMA transfers on the IN FIFO by clearing the DIEN bit in the CRYP_DMACR */
 474:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   CRYP->DMACR &= ~(uint32_t)CRYP_DMACR_DIEN;
 671              		.loc 1 474 0
 672 001c 4FF00003 		mov	r3, #0
 673 0020 C5F20603 		movt	r3, 20486
 674 0024 4FF00002 		mov	r2, #0
 675 0028 C5F20602 		movt	r2, 20486
 676 002c 1269     		ldr	r2, [r2, #16]
 677 002e 22F00102 		bic	r2, r2, #1
 678 0032 1A61     		str	r2, [r3, #16]
 475:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****     
 476:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   /* Wait until both the IN and OUT FIFOs are empty  
 477:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****     (IFEM=1 and OFNE=0 in the CRYP_SR register) and the 
 478:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****      BUSY bit is cleared. */
 479:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 480:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   if ((CRYP->CR & (uint32_t)(CRYP_CR_ALGOMODE_TDES_ECB | CRYP_CR_ALGOMODE_TDES_CBC)) != (uint32_t)0
 679              		.loc 1 480 0
 680 0034 4FF00003 		mov	r3, #0
 681 0038 C5F20603 		movt	r3, 20486
 682 003c 1B68     		ldr	r3, [r3, #0]
 683 003e 03F00803 		and	r3, r3, #8
 684 0042 002B     		cmp	r3, #0
 685 0044 03D0     		beq	.L17
 481:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   { 
 482:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****     ckeckmask =  CRYP_SR_IFEM | CRYP_SR_BUSY ;
 686              		.loc 1 482 0
 687 0046 4FF01103 		mov	r3, #17
 688 004a 7B61     		str	r3, [r7, #20]
 689 004c 02E0     		b	.L18
 690              	.L17:
 483:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   }
 484:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   else /* AES or DES */
 485:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   {
 486:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****     ckeckmask =  CRYP_SR_IFEM | CRYP_SR_BUSY | CRYP_SR_OFNE;
 691              		.loc 1 486 0
 692 004e 4FF01503 		mov	r3, #21
 693 0052 7B61     		str	r3, [r7, #20]
 694              	.L18:
 487:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   }           
 488:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****    
 489:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   do 
 490:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   {
 491:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****     bitstatus = CRYP->SR & ckeckmask;
 695              		.loc 1 491 0 discriminator 1
 696 0054 4FF00003 		mov	r3, #0
 697 0058 C5F20603 		movt	r3, 20486
 698 005c 5A68     		ldr	r2, [r3, #4]
 699 005e 7B69     		ldr	r3, [r7, #20]
 700 0060 1340     		ands	r3, r3, r2
 701 0062 FB60     		str	r3, [r7, #12]
 492:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****     timeout++;
 702              		.loc 1 492 0 discriminator 1
 703 0064 BB68     		ldr	r3, [r7, #8]
 704 0066 03F10103 		add	r3, r3, #1
 705 006a BB60     		str	r3, [r7, #8]
 493:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   }
 494:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   while ((timeout != MAX_TIMEOUT) && (bitstatus != CRYP_SR_IFEM));
 706              		.loc 1 494 0 discriminator 1
 707 006c BA68     		ldr	r2, [r7, #8]
 708 006e 4FF6FF73 		movw	r3, #65535
 709 0072 9A42     		cmp	r2, r3
 710 0074 02D0     		beq	.L19
 711 0076 FB68     		ldr	r3, [r7, #12]
 712 0078 012B     		cmp	r3, #1
 713 007a EBD1     		bne	.L18
 714              	.L19:
 495:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****      
 496:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   if ((CRYP->SR & ckeckmask) != CRYP_SR_IFEM)
 715              		.loc 1 496 0
 716 007c 4FF00003 		mov	r3, #0
 717 0080 C5F20603 		movt	r3, 20486
 718 0084 5A68     		ldr	r2, [r3, #4]
 719 0086 7B69     		ldr	r3, [r7, #20]
 720 0088 1340     		ands	r3, r3, r2
 721 008a 012B     		cmp	r3, #1
 722 008c 03D0     		beq	.L20
 497:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   {
 498:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****     status = ERROR;
 723              		.loc 1 498 0
 724 008e 4FF00003 		mov	r3, #0
 725 0092 FB74     		strb	r3, [r7, #19]
 726 0094 5FE0     		b	.L21
 727              	.L20:
 499:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   }
 500:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   else
 501:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   {      
 502:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****     /* Stop DMA transfers on the OUT FIFO by 
 503:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****        - writing the DOEN bit to 0 in the CRYP_DMACR register 
 504:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****        - and clear the CRYPEN bit. */
 505:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 506:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****     CRYP->DMACR &= ~(uint32_t)CRYP_DMACR_DOEN;
 728              		.loc 1 506 0
 729 0096 4FF00003 		mov	r3, #0
 730 009a C5F20603 		movt	r3, 20486
 731 009e 4FF00002 		mov	r2, #0
 732 00a2 C5F20602 		movt	r2, 20486
 733 00a6 1269     		ldr	r2, [r2, #16]
 734 00a8 22F00202 		bic	r2, r2, #2
 735 00ac 1A61     		str	r2, [r3, #16]
 507:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****     CRYP->CR &= ~(uint32_t)CRYP_CR_CRYPEN;
 736              		.loc 1 507 0
 737 00ae 4FF00003 		mov	r3, #0
 738 00b2 C5F20603 		movt	r3, 20486
 739 00b6 4FF00002 		mov	r2, #0
 740 00ba C5F20602 		movt	r2, 20486
 741 00be 1268     		ldr	r2, [r2, #0]
 742 00c0 22F40042 		bic	r2, r2, #32768
 743 00c4 1A60     		str	r2, [r3, #0]
 508:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 509:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****     /* Save the current configuration (bits [9:2] in the CRYP_CR register) */
 510:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****     CRYP_ContextSave->CR_bits9to2  = CRYP->CR & (CRYP_CR_KEYSIZE  | 
 744              		.loc 1 510 0
 745 00c6 4FF00003 		mov	r3, #0
 746 00ca C5F20603 		movt	r3, 20486
 747 00ce 1B68     		ldr	r3, [r3, #0]
 748 00d0 03F47F72 		and	r2, r3, #1020
 749 00d4 7B68     		ldr	r3, [r7, #4]
 750 00d6 1A60     		str	r2, [r3, #0]
 511:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****                                                  CRYP_CR_DATATYPE | 
 512:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****                                                  CRYP_CR_ALGOMODE |
 513:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****                                                  CRYP_CR_ALGODIR); 
 514:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 515:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****     /* and, if not in ECB mode, the initialization vectors. */
 516:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****     CRYP_ContextSave->CRYP_IV0LR = CRYP->IV0LR;
 751              		.loc 1 516 0
 752 00d8 4FF00003 		mov	r3, #0
 753 00dc C5F20603 		movt	r3, 20486
 754 00e0 1A6C     		ldr	r2, [r3, #64]
 755 00e2 7B68     		ldr	r3, [r7, #4]
 756 00e4 5A60     		str	r2, [r3, #4]
 517:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****     CRYP_ContextSave->CRYP_IV0RR = CRYP->IV0RR;
 757              		.loc 1 517 0
 758 00e6 4FF00003 		mov	r3, #0
 759 00ea C5F20603 		movt	r3, 20486
 760 00ee 5A6C     		ldr	r2, [r3, #68]
 761 00f0 7B68     		ldr	r3, [r7, #4]
 762 00f2 9A60     		str	r2, [r3, #8]
 518:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****     CRYP_ContextSave->CRYP_IV1LR = CRYP->IV1LR;
 763              		.loc 1 518 0
 764 00f4 4FF00003 		mov	r3, #0
 765 00f8 C5F20603 		movt	r3, 20486
 766 00fc 9A6C     		ldr	r2, [r3, #72]
 767 00fe 7B68     		ldr	r3, [r7, #4]
 768 0100 DA60     		str	r2, [r3, #12]
 519:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****     CRYP_ContextSave->CRYP_IV1RR = CRYP->IV1RR;
 769              		.loc 1 519 0
 770 0102 4FF00003 		mov	r3, #0
 771 0106 C5F20603 		movt	r3, 20486
 772 010a DA6C     		ldr	r2, [r3, #76]
 773 010c 7B68     		ldr	r3, [r7, #4]
 774 010e 1A61     		str	r2, [r3, #16]
 520:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 521:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****     /* save The key value */
 522:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****     CRYP_ContextSave->CRYP_K0LR = CRYP_KeyInitStruct->CRYP_Key0Left; 
 775              		.loc 1 522 0
 776 0110 3B68     		ldr	r3, [r7, #0]
 777 0112 1A68     		ldr	r2, [r3, #0]
 778 0114 7B68     		ldr	r3, [r7, #4]
 779 0116 5A61     		str	r2, [r3, #20]
 523:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****     CRYP_ContextSave->CRYP_K0RR = CRYP_KeyInitStruct->CRYP_Key0Right; 
 780              		.loc 1 523 0
 781 0118 3B68     		ldr	r3, [r7, #0]
 782 011a 5A68     		ldr	r2, [r3, #4]
 783 011c 7B68     		ldr	r3, [r7, #4]
 784 011e 9A61     		str	r2, [r3, #24]
 524:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****     CRYP_ContextSave->CRYP_K1LR = CRYP_KeyInitStruct->CRYP_Key1Left; 
 785              		.loc 1 524 0
 786 0120 3B68     		ldr	r3, [r7, #0]
 787 0122 9A68     		ldr	r2, [r3, #8]
 788 0124 7B68     		ldr	r3, [r7, #4]
 789 0126 DA61     		str	r2, [r3, #28]
 525:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****     CRYP_ContextSave->CRYP_K1RR = CRYP_KeyInitStruct->CRYP_Key1Right; 
 790              		.loc 1 525 0
 791 0128 3B68     		ldr	r3, [r7, #0]
 792 012a DA68     		ldr	r2, [r3, #12]
 793 012c 7B68     		ldr	r3, [r7, #4]
 794 012e 1A62     		str	r2, [r3, #32]
 526:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****     CRYP_ContextSave->CRYP_K2LR = CRYP_KeyInitStruct->CRYP_Key2Left; 
 795              		.loc 1 526 0
 796 0130 3B68     		ldr	r3, [r7, #0]
 797 0132 1A69     		ldr	r2, [r3, #16]
 798 0134 7B68     		ldr	r3, [r7, #4]
 799 0136 5A62     		str	r2, [r3, #36]
 527:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****     CRYP_ContextSave->CRYP_K2RR = CRYP_KeyInitStruct->CRYP_Key2Right; 
 800              		.loc 1 527 0
 801 0138 3B68     		ldr	r3, [r7, #0]
 802 013a 5A69     		ldr	r2, [r3, #20]
 803 013c 7B68     		ldr	r3, [r7, #4]
 804 013e 9A62     		str	r2, [r3, #40]
 528:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****     CRYP_ContextSave->CRYP_K3LR = CRYP_KeyInitStruct->CRYP_Key3Left; 
 805              		.loc 1 528 0
 806 0140 3B68     		ldr	r3, [r7, #0]
 807 0142 9A69     		ldr	r2, [r3, #24]
 808 0144 7B68     		ldr	r3, [r7, #4]
 809 0146 DA62     		str	r2, [r3, #44]
 529:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****     CRYP_ContextSave->CRYP_K3RR = CRYP_KeyInitStruct->CRYP_Key3Right; 
 810              		.loc 1 529 0
 811 0148 3B68     		ldr	r3, [r7, #0]
 812 014a DA69     		ldr	r2, [r3, #28]
 813 014c 7B68     		ldr	r3, [r7, #4]
 814 014e 1A63     		str	r2, [r3, #48]
 530:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 531:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****    /* When needed, save the DMA status (pointers for IN and OUT messages, 
 532:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****       number of remaining bytes, etc.) */
 533:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****      
 534:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****     status = SUCCESS;
 815              		.loc 1 534 0
 816 0150 4FF00103 		mov	r3, #1
 817 0154 FB74     		strb	r3, [r7, #19]
 818              	.L21:
 535:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   }
 536:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 537:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****    return status;
 819              		.loc 1 537 0
 820 0156 FB7C     		ldrb	r3, [r7, #19]	@ zero_extendqisi2
 538:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** }
 821              		.loc 1 538 0
 822 0158 1846     		mov	r0, r3
 823 015a 07F11C07 		add	r7, r7, #28
 824 015e BD46     		mov	sp, r7
 825 0160 80BC     		pop	{r7}
 826 0162 7047     		bx	lr
 827              		.cfi_endproc
 828              	.LFE121:
 830              		.section	.text.CRYP_RestoreContext,"ax",%progbits
 831              		.align	2
 832              		.global	CRYP_RestoreContext
 833              		.thumb
 834              		.thumb_func
 836              	CRYP_RestoreContext:
 837              	.LFB122:
 539:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 540:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** /**
 541:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @brief  Restores the CRYP peripheral Context.
 542:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @note   Since teh DMA transfer is stopped in CRYP_SaveContext() function,
 543:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *         after restoring the context, you have to enable the DMA again (if the
 544:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *         DMA was previously used).  
 545:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @param  CRYP_ContextRestore: pointer to a CRYP_Context structure that contains
 546:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *         the repository for saved context.
 547:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @note   The data that were saved during context saving must be rewrited into
 548:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *         the IN FIFO.
 549:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @retval None
 550:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   */
 551:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** void CRYP_RestoreContext(CRYP_Context* CRYP_ContextRestore)  
 552:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** {
 838              		.loc 1 552 0
 839              		.cfi_startproc
 840              		@ args = 0, pretend = 0, frame = 8
 841              		@ frame_needed = 1, uses_anonymous_args = 0
 842              		@ link register save eliminated.
 843 0000 80B4     		push	{r7}
 844              	.LCFI33:
 845              		.cfi_def_cfa_offset 4
 846              		.cfi_offset 7, -4
 847 0002 83B0     		sub	sp, sp, #12
 848              	.LCFI34:
 849              		.cfi_def_cfa_offset 16
 850 0004 00AF     		add	r7, sp, #0
 851              	.LCFI35:
 852              		.cfi_def_cfa_register 7
 853 0006 7860     		str	r0, [r7, #4]
 553:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 554:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   /* Configure the processor with the saved configuration */
 555:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   CRYP->CR = CRYP_ContextRestore->CR_bits9to2;
 854              		.loc 1 555 0
 855 0008 4FF00003 		mov	r3, #0
 856 000c C5F20603 		movt	r3, 20486
 857 0010 7A68     		ldr	r2, [r7, #4]
 858 0012 1268     		ldr	r2, [r2, #0]
 859 0014 1A60     		str	r2, [r3, #0]
 556:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 557:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   /* restore The key value */
 558:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   CRYP->K0LR = CRYP_ContextRestore->CRYP_K0LR; 
 860              		.loc 1 558 0
 861 0016 4FF00003 		mov	r3, #0
 862 001a C5F20603 		movt	r3, 20486
 863 001e 7A68     		ldr	r2, [r7, #4]
 864 0020 5269     		ldr	r2, [r2, #20]
 865 0022 1A62     		str	r2, [r3, #32]
 559:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   CRYP->K0RR = CRYP_ContextRestore->CRYP_K0RR;
 866              		.loc 1 559 0
 867 0024 4FF00003 		mov	r3, #0
 868 0028 C5F20603 		movt	r3, 20486
 869 002c 7A68     		ldr	r2, [r7, #4]
 870 002e 9269     		ldr	r2, [r2, #24]
 871 0030 5A62     		str	r2, [r3, #36]
 560:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   CRYP->K1LR = CRYP_ContextRestore->CRYP_K1LR;
 872              		.loc 1 560 0
 873 0032 4FF00003 		mov	r3, #0
 874 0036 C5F20603 		movt	r3, 20486
 875 003a 7A68     		ldr	r2, [r7, #4]
 876 003c D269     		ldr	r2, [r2, #28]
 877 003e 9A62     		str	r2, [r3, #40]
 561:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   CRYP->K1RR = CRYP_ContextRestore->CRYP_K1RR;
 878              		.loc 1 561 0
 879 0040 4FF00003 		mov	r3, #0
 880 0044 C5F20603 		movt	r3, 20486
 881 0048 7A68     		ldr	r2, [r7, #4]
 882 004a 126A     		ldr	r2, [r2, #32]
 883 004c DA62     		str	r2, [r3, #44]
 562:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   CRYP->K2LR = CRYP_ContextRestore->CRYP_K2LR;
 884              		.loc 1 562 0
 885 004e 4FF00003 		mov	r3, #0
 886 0052 C5F20603 		movt	r3, 20486
 887 0056 7A68     		ldr	r2, [r7, #4]
 888 0058 526A     		ldr	r2, [r2, #36]
 889 005a 1A63     		str	r2, [r3, #48]
 563:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   CRYP->K2RR = CRYP_ContextRestore->CRYP_K2RR;
 890              		.loc 1 563 0
 891 005c 4FF00003 		mov	r3, #0
 892 0060 C5F20603 		movt	r3, 20486
 893 0064 7A68     		ldr	r2, [r7, #4]
 894 0066 926A     		ldr	r2, [r2, #40]
 895 0068 5A63     		str	r2, [r3, #52]
 564:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   CRYP->K3LR = CRYP_ContextRestore->CRYP_K3LR;
 896              		.loc 1 564 0
 897 006a 4FF00003 		mov	r3, #0
 898 006e C5F20603 		movt	r3, 20486
 899 0072 7A68     		ldr	r2, [r7, #4]
 900 0074 D26A     		ldr	r2, [r2, #44]
 901 0076 9A63     		str	r2, [r3, #56]
 565:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   CRYP->K3RR = CRYP_ContextRestore->CRYP_K3RR;
 902              		.loc 1 565 0
 903 0078 4FF00003 		mov	r3, #0
 904 007c C5F20603 		movt	r3, 20486
 905 0080 7A68     		ldr	r2, [r7, #4]
 906 0082 126B     		ldr	r2, [r2, #48]
 907 0084 DA63     		str	r2, [r3, #60]
 566:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 567:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   /* and the initialization vectors. */
 568:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   CRYP->IV0LR = CRYP_ContextRestore->CRYP_IV0LR;
 908              		.loc 1 568 0
 909 0086 4FF00003 		mov	r3, #0
 910 008a C5F20603 		movt	r3, 20486
 911 008e 7A68     		ldr	r2, [r7, #4]
 912 0090 5268     		ldr	r2, [r2, #4]
 913 0092 1A64     		str	r2, [r3, #64]
 569:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   CRYP->IV0RR = CRYP_ContextRestore->CRYP_IV0RR;
 914              		.loc 1 569 0
 915 0094 4FF00003 		mov	r3, #0
 916 0098 C5F20603 		movt	r3, 20486
 917 009c 7A68     		ldr	r2, [r7, #4]
 918 009e 9268     		ldr	r2, [r2, #8]
 919 00a0 5A64     		str	r2, [r3, #68]
 570:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   CRYP->IV1LR = CRYP_ContextRestore->CRYP_IV1LR;
 920              		.loc 1 570 0
 921 00a2 4FF00003 		mov	r3, #0
 922 00a6 C5F20603 		movt	r3, 20486
 923 00aa 7A68     		ldr	r2, [r7, #4]
 924 00ac D268     		ldr	r2, [r2, #12]
 925 00ae 9A64     		str	r2, [r3, #72]
 571:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   CRYP->IV1RR = CRYP_ContextRestore->CRYP_IV1RR;
 926              		.loc 1 571 0
 927 00b0 4FF00003 		mov	r3, #0
 928 00b4 C5F20603 		movt	r3, 20486
 929 00b8 7A68     		ldr	r2, [r7, #4]
 930 00ba 1269     		ldr	r2, [r2, #16]
 931 00bc DA64     		str	r2, [r3, #76]
 572:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 573:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   /* Enable the cryptographic processor */
 574:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   CRYP->CR |= CRYP_CR_CRYPEN;
 932              		.loc 1 574 0
 933 00be 4FF00003 		mov	r3, #0
 934 00c2 C5F20603 		movt	r3, 20486
 935 00c6 4FF00002 		mov	r2, #0
 936 00ca C5F20602 		movt	r2, 20486
 937 00ce 1268     		ldr	r2, [r2, #0]
 938 00d0 42F40042 		orr	r2, r2, #32768
 939 00d4 1A60     		str	r2, [r3, #0]
 575:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** }
 940              		.loc 1 575 0
 941 00d6 07F10C07 		add	r7, r7, #12
 942 00da BD46     		mov	sp, r7
 943 00dc 80BC     		pop	{r7}
 944 00de 7047     		bx	lr
 945              		.cfi_endproc
 946              	.LFE122:
 948              		.section	.text.CRYP_DMACmd,"ax",%progbits
 949              		.align	2
 950              		.global	CRYP_DMACmd
 951              		.thumb
 952              		.thumb_func
 954              	CRYP_DMACmd:
 955              	.LFB123:
 576:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** /**
 577:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @}
 578:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   */
 579:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 580:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** /** @defgroup CRYP_Group4 CRYP's DMA interface Configuration function
 581:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****  *  @brief   CRYP's DMA interface Configuration function 
 582:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****  *
 583:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** @verbatim   
 584:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****  ===============================================================================
 585:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****                    CRYP's DMA interface Configuration function
 586:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****  ===============================================================================  
 587:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 588:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   This section provides functions allowing to configure the DMA interface for 
 589:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   CRYP data input and output transfer.
 590:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****    
 591:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   When the DMA mode is enabled (using the CRYP_DMACmd() function), data can be 
 592:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   transferred:
 593:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   - From memory to the CRYP IN FIFO using the DMA peripheral by enabling 
 594:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****     the CRYP_DMAReq_DataIN request.
 595:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   - From the CRYP OUT FIFO to the memory using the DMA peripheral by enabling 
 596:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****     the CRYP_DMAReq_DataOUT request.
 597:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 598:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** @endverbatim
 599:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @{
 600:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   */
 601:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 602:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** /**
 603:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @brief  Enables or disables the CRYP DMA interface.
 604:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @param  CRYP_DMAReq: specifies the CRYP DMA transfer request to be enabled or disabled.
 605:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *           This parameter can be any combination of the following values:
 606:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *            @arg CRYP_DMAReq_DataOUT: DMA for outgoing(Tx) data transfer
 607:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *            @arg CRYP_DMAReq_DataIN: DMA for incoming(Rx) data transfer
 608:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @param  NewState: new state of the selected CRYP DMA transfer request.
 609:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *          This parameter can be: ENABLE or DISABLE.
 610:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @retval None
 611:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   */
 612:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** void CRYP_DMACmd(uint8_t CRYP_DMAReq, FunctionalState NewState)
 613:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** {
 956              		.loc 1 613 0
 957              		.cfi_startproc
 958              		@ args = 0, pretend = 0, frame = 8
 959              		@ frame_needed = 1, uses_anonymous_args = 0
 960              		@ link register save eliminated.
 961 0000 80B4     		push	{r7}
 962              	.LCFI36:
 963              		.cfi_def_cfa_offset 4
 964              		.cfi_offset 7, -4
 965 0002 83B0     		sub	sp, sp, #12
 966              	.LCFI37:
 967              		.cfi_def_cfa_offset 16
 968 0004 00AF     		add	r7, sp, #0
 969              	.LCFI38:
 970              		.cfi_def_cfa_register 7
 971 0006 0246     		mov	r2, r0
 972 0008 0B46     		mov	r3, r1
 973 000a FA71     		strb	r2, [r7, #7]
 974 000c BB71     		strb	r3, [r7, #6]
 614:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   /* Check the parameters */
 615:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   assert_param(IS_CRYP_DMAREQ(CRYP_DMAReq));
 616:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 617:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 618:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   if (NewState != DISABLE)
 975              		.loc 1 618 0
 976 000e BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 977 0010 002B     		cmp	r3, #0
 978 0012 0CD0     		beq	.L24
 619:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   {
 620:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****     /* Enable the selected CRYP DMA request */
 621:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****     CRYP->DMACR |= CRYP_DMAReq;
 979              		.loc 1 621 0
 980 0014 4FF00003 		mov	r3, #0
 981 0018 C5F20603 		movt	r3, 20486
 982 001c 4FF00002 		mov	r2, #0
 983 0020 C5F20602 		movt	r2, 20486
 984 0024 1169     		ldr	r1, [r2, #16]
 985 0026 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 986 0028 0A43     		orrs	r2, r2, r1
 987 002a 1A61     		str	r2, [r3, #16]
 988 002c 0EE0     		b	.L23
 989              	.L24:
 622:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   }
 623:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   else
 624:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   {
 625:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****     /* Disable the selected CRYP DMA request */
 626:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****     CRYP->DMACR &= (uint8_t)~CRYP_DMAReq;
 990              		.loc 1 626 0
 991 002e 4FF00003 		mov	r3, #0
 992 0032 C5F20603 		movt	r3, 20486
 993 0036 4FF00002 		mov	r2, #0
 994 003a C5F20602 		movt	r2, 20486
 995 003e 1169     		ldr	r1, [r2, #16]
 996 0040 FA79     		ldrb	r2, [r7, #7]
 997 0042 6FEA0202 		mvn	r2, r2
 998 0046 D2B2     		uxtb	r2, r2
 999 0048 0A40     		ands	r2, r2, r1
 1000 004a 1A61     		str	r2, [r3, #16]
 1001              	.L23:
 627:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   }
 628:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** }
 1002              		.loc 1 628 0
 1003 004c 07F10C07 		add	r7, r7, #12
 1004 0050 BD46     		mov	sp, r7
 1005 0052 80BC     		pop	{r7}
 1006 0054 7047     		bx	lr
 1007              		.cfi_endproc
 1008              	.LFE123:
 1010 0056 00BF     		.section	.text.CRYP_ITConfig,"ax",%progbits
 1011              		.align	2
 1012              		.global	CRYP_ITConfig
 1013              		.thumb
 1014              		.thumb_func
 1016              	CRYP_ITConfig:
 1017              	.LFB124:
 629:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** /**
 630:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @}
 631:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   */
 632:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 633:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** /** @defgroup CRYP_Group5 Interrupts and flags management functions
 634:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****  *  @brief   Interrupts and flags management functions
 635:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****  *
 636:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** @verbatim   
 637:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****  ===============================================================================
 638:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****                    Interrupts and flags management functions
 639:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****  ===============================================================================  
 640:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 641:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   This section provides functions allowing to configure the CRYP Interrupts and 
 642:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   to get the status and Interrupts pending bits.
 643:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 644:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   The CRYP provides 2 Interrupts sources and 7 Flags:
 645:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 646:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   Flags :
 647:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   ------- 
 648:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****                           
 649:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****      1. CRYP_FLAG_IFEM :  Set when Input FIFO is empty.
 650:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****                           This Flag is cleared only by hardware.
 651:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****       
 652:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****      2. CRYP_FLAG_IFNF :  Set when Input FIFO is not full.
 653:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****                           This Flag is cleared only by hardware.
 654:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 655:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 656:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****      3. CRYP_FLAG_INRIS  : Set when Input FIFO Raw interrupt is pending 
 657:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****                            it gives the raw interrupt state prior to masking 
 658:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****                            of the input FIFO service interrupt.
 659:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****                            This Flag is cleared only by hardware.
 660:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****      
 661:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****      4. CRYP_FLAG_OFNE   : Set when Output FIFO not empty.
 662:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****                            This Flag is cleared only by hardware.
 663:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****         
 664:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****      5. CRYP_FLAG_OFFU   : Set when Output FIFO is full.
 665:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****                            This Flag is cleared only by hardware.
 666:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****                            
 667:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****      6. CRYP_FLAG_OUTRIS : Set when Output FIFO Raw interrupt is pending 
 668:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****                            it gives the raw interrupt state prior to masking 
 669:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****                            of the output FIFO service interrupt.
 670:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****                            This Flag is cleared only by hardware.
 671:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****                                
 672:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****      7. CRYP_FLAG_BUSY   : Set when the CRYP core is currently processing a 
 673:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****                            block of data or a key preparation (for AES 
 674:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****                            decryption).
 675:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****                            This Flag is cleared only by hardware.
 676:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****                            To clear it, the CRYP core must be disabled and the 
 677:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****                            last processing has completed. 
 678:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 679:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   Interrupts :
 680:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   ------------
 681:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 682:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****    1. CRYP_IT_INI   : The input FIFO service interrupt is asserted when there 
 683:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****                       are less than 4 words in the input FIFO.
 684:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****                       This interrupt is associated to CRYP_FLAG_INRIS flag.
 685:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 686:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****                 @note This interrupt is cleared by performing write operations 
 687:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****                       to the input FIFO until it holds 4 or more words. The 
 688:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****                       input FIFO service interrupt INMIS is enabled with the 
 689:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****                       CRYP enable bit. Consequently, when CRYP is disabled, the 
 690:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****                       INMIS signal is low even if the input FIFO is empty.
 691:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 692:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 693:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 694:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****    2. CRYP_IT_OUTI  : The output FIFO service interrupt is asserted when there 
 695:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****                       is one or more (32-bit word) data items in the output FIFO.
 696:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****                       This interrupt is associated to CRYP_FLAG_OUTRIS flag.
 697:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 698:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****                 @note This interrupt is cleared by reading data from the output 
 699:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****                       FIFO until there is no valid (32-bit) word left (that is, 
 700:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****                       the interrupt follows the state of the OFNE (output FIFO 
 701:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****                       not empty) flag).
 702:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 703:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 704:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   Managing the CRYP controller events :
 705:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   ------------------------------------ 
 706:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   The user should identify which mode will be used in his application to manage 
 707:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   the CRYP controller events: Polling mode or Interrupt mode.
 708:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 709:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   1.  In the Polling Mode it is advised to use the following functions:
 710:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****       - CRYP_GetFlagStatus() : to check if flags events occur. 
 711:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 712:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   @note  The CRYPT flags do not need to be cleared since they are cleared as 
 713:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****          soon as the associated event are reset.   
 714:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 715:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 716:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   2.  In the Interrupt Mode it is advised to use the following functions:
 717:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****       - CRYP_ITConfig()       : to enable or disable the interrupt source.
 718:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****       - CRYP_GetITStatus()    : to check if Interrupt occurs.
 719:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 720:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   @note  The CRYPT interrupts have no pending bits, the interrupt is cleared as 
 721:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****          soon as the associated event is reset. 
 722:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 723:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** @endverbatim
 724:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @{
 725:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   */ 
 726:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 727:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** /**
 728:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @brief  Enables or disables the specified CRYP interrupts.
 729:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @param  CRYP_IT: specifies the CRYP interrupt source to be enabled or disabled.
 730:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *          This parameter can be any combination of the following values:
 731:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *            @arg CRYP_IT_INI: Input FIFO interrupt
 732:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *            @arg CRYP_IT_OUTI: Output FIFO interrupt
 733:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @param  NewState: new state of the specified CRYP interrupt.
 734:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *           This parameter can be: ENABLE or DISABLE.
 735:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @retval None
 736:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   */
 737:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** void CRYP_ITConfig(uint8_t CRYP_IT, FunctionalState NewState)
 738:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** {
 1018              		.loc 1 738 0
 1019              		.cfi_startproc
 1020              		@ args = 0, pretend = 0, frame = 8
 1021              		@ frame_needed = 1, uses_anonymous_args = 0
 1022              		@ link register save eliminated.
 1023 0000 80B4     		push	{r7}
 1024              	.LCFI39:
 1025              		.cfi_def_cfa_offset 4
 1026              		.cfi_offset 7, -4
 1027 0002 83B0     		sub	sp, sp, #12
 1028              	.LCFI40:
 1029              		.cfi_def_cfa_offset 16
 1030 0004 00AF     		add	r7, sp, #0
 1031              	.LCFI41:
 1032              		.cfi_def_cfa_register 7
 1033 0006 0246     		mov	r2, r0
 1034 0008 0B46     		mov	r3, r1
 1035 000a FA71     		strb	r2, [r7, #7]
 1036 000c BB71     		strb	r3, [r7, #6]
 739:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   /* Check the parameters */
 740:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   assert_param(IS_CRYP_CONFIG_IT(CRYP_IT));
 741:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 742:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 743:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   if (NewState != DISABLE)
 1037              		.loc 1 743 0
 1038 000e BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 1039 0010 002B     		cmp	r3, #0
 1040 0012 0CD0     		beq	.L27
 744:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   {
 745:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****     /* Enable the selected CRYP interrupt */
 746:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****     CRYP->IMSCR |= CRYP_IT;
 1041              		.loc 1 746 0
 1042 0014 4FF00003 		mov	r3, #0
 1043 0018 C5F20603 		movt	r3, 20486
 1044 001c 4FF00002 		mov	r2, #0
 1045 0020 C5F20602 		movt	r2, 20486
 1046 0024 5169     		ldr	r1, [r2, #20]
 1047 0026 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 1048 0028 0A43     		orrs	r2, r2, r1
 1049 002a 5A61     		str	r2, [r3, #20]
 1050 002c 0EE0     		b	.L26
 1051              	.L27:
 747:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   }
 748:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   else
 749:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   {
 750:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****     /* Disable the selected CRYP interrupt */
 751:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****     CRYP->IMSCR &= (uint8_t)~CRYP_IT;
 1052              		.loc 1 751 0
 1053 002e 4FF00003 		mov	r3, #0
 1054 0032 C5F20603 		movt	r3, 20486
 1055 0036 4FF00002 		mov	r2, #0
 1056 003a C5F20602 		movt	r2, 20486
 1057 003e 5169     		ldr	r1, [r2, #20]
 1058 0040 FA79     		ldrb	r2, [r7, #7]
 1059 0042 6FEA0202 		mvn	r2, r2
 1060 0046 D2B2     		uxtb	r2, r2
 1061 0048 0A40     		ands	r2, r2, r1
 1062 004a 5A61     		str	r2, [r3, #20]
 1063              	.L26:
 752:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   }
 753:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** }
 1064              		.loc 1 753 0
 1065 004c 07F10C07 		add	r7, r7, #12
 1066 0050 BD46     		mov	sp, r7
 1067 0052 80BC     		pop	{r7}
 1068 0054 7047     		bx	lr
 1069              		.cfi_endproc
 1070              	.LFE124:
 1072 0056 00BF     		.section	.text.CRYP_GetITStatus,"ax",%progbits
 1073              		.align	2
 1074              		.global	CRYP_GetITStatus
 1075              		.thumb
 1076              		.thumb_func
 1078              	CRYP_GetITStatus:
 1079              	.LFB125:
 754:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 755:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** /**
 756:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @brief  Checks whether the specified CRYP interrupt has occurred or not.
 757:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @note   This function checks the status of the masked interrupt (i.e the 
 758:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *         interrupt should be previously enabled).     
 759:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @param  CRYP_IT: specifies the CRYP (masked) interrupt source to check.
 760:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *           This parameter can be one of the following values:
 761:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *            @arg CRYP_IT_INI: Input FIFO interrupt
 762:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *            @arg CRYP_IT_OUTI: Output FIFO interrupt
 763:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @retval The new state of CRYP_IT (SET or RESET).
 764:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   */
 765:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** ITStatus CRYP_GetITStatus(uint8_t CRYP_IT)
 766:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** {
 1080              		.loc 1 766 0
 1081              		.cfi_startproc
 1082              		@ args = 0, pretend = 0, frame = 16
 1083              		@ frame_needed = 1, uses_anonymous_args = 0
 1084              		@ link register save eliminated.
 1085 0000 80B4     		push	{r7}
 1086              	.LCFI42:
 1087              		.cfi_def_cfa_offset 4
 1088              		.cfi_offset 7, -4
 1089 0002 85B0     		sub	sp, sp, #20
 1090              	.LCFI43:
 1091              		.cfi_def_cfa_offset 24
 1092 0004 00AF     		add	r7, sp, #0
 1093              	.LCFI44:
 1094              		.cfi_def_cfa_register 7
 1095 0006 0346     		mov	r3, r0
 1096 0008 FB71     		strb	r3, [r7, #7]
 767:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   ITStatus bitstatus = RESET;
 1097              		.loc 1 767 0
 1098 000a 4FF00003 		mov	r3, #0
 1099 000e FB73     		strb	r3, [r7, #15]
 768:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   /* Check the parameters */
 769:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   assert_param(IS_CRYP_GET_IT(CRYP_IT));
 770:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 771:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   /* Check the status of the specified CRYP interrupt */
 772:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   if ((CRYP->MISR &  CRYP_IT) != (uint8_t)RESET)
 1100              		.loc 1 772 0
 1101 0010 4FF00003 		mov	r3, #0
 1102 0014 C5F20603 		movt	r3, 20486
 1103 0018 DA69     		ldr	r2, [r3, #28]
 1104 001a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1105 001c 1340     		ands	r3, r3, r2
 1106 001e 002B     		cmp	r3, #0
 1107 0020 03D0     		beq	.L30
 773:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   {
 774:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****     /* CRYP_IT is set */
 775:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****     bitstatus = SET;
 1108              		.loc 1 775 0
 1109 0022 4FF00103 		mov	r3, #1
 1110 0026 FB73     		strb	r3, [r7, #15]
 1111 0028 02E0     		b	.L31
 1112              	.L30:
 776:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   }
 777:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   else
 778:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   {
 779:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****     /* CRYP_IT is reset */
 780:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****     bitstatus = RESET;
 1113              		.loc 1 780 0
 1114 002a 4FF00003 		mov	r3, #0
 1115 002e FB73     		strb	r3, [r7, #15]
 1116              	.L31:
 781:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   }
 782:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   /* Return the CRYP_IT status */
 783:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   return bitstatus;
 1117              		.loc 1 783 0
 1118 0030 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 784:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** }
 1119              		.loc 1 784 0
 1120 0032 1846     		mov	r0, r3
 1121 0034 07F11407 		add	r7, r7, #20
 1122 0038 BD46     		mov	sp, r7
 1123 003a 80BC     		pop	{r7}
 1124 003c 7047     		bx	lr
 1125              		.cfi_endproc
 1126              	.LFE125:
 1128 003e 00BF     		.section	.text.CRYP_GetFlagStatus,"ax",%progbits
 1129              		.align	2
 1130              		.global	CRYP_GetFlagStatus
 1131              		.thumb
 1132              		.thumb_func
 1134              	CRYP_GetFlagStatus:
 1135              	.LFB126:
 785:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 786:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** /**
 787:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @brief  Checks whether the specified CRYP flag is set or not.
 788:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @param  CRYP_FLAG: specifies the CRYP flag to check.
 789:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *          This parameter can be one of the following values:
 790:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *            @arg CRYP_FLAG_IFEM: Input FIFO Empty flag.
 791:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *            @arg CRYP_FLAG_IFNF: Input FIFO Not Full flag.
 792:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *            @arg CRYP_FLAG_OFNE: Output FIFO Not Empty flag.
 793:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *            @arg CRYP_FLAG_OFFU: Output FIFO Full flag.
 794:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *            @arg CRYP_FLAG_BUSY: Busy flag.
 795:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *            @arg CRYP_FLAG_OUTRIS: Output FIFO raw interrupt flag.
 796:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *            @arg CRYP_FLAG_INRIS: Input FIFO raw interrupt flag.
 797:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @retval The new state of CRYP_FLAG (SET or RESET).
 798:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   */
 799:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** FlagStatus CRYP_GetFlagStatus(uint8_t CRYP_FLAG)
 800:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** {
 1136              		.loc 1 800 0
 1137              		.cfi_startproc
 1138              		@ args = 0, pretend = 0, frame = 16
 1139              		@ frame_needed = 1, uses_anonymous_args = 0
 1140              		@ link register save eliminated.
 1141 0000 80B4     		push	{r7}
 1142              	.LCFI45:
 1143              		.cfi_def_cfa_offset 4
 1144              		.cfi_offset 7, -4
 1145 0002 85B0     		sub	sp, sp, #20
 1146              	.LCFI46:
 1147              		.cfi_def_cfa_offset 24
 1148 0004 00AF     		add	r7, sp, #0
 1149              	.LCFI47:
 1150              		.cfi_def_cfa_register 7
 1151 0006 0346     		mov	r3, r0
 1152 0008 FB71     		strb	r3, [r7, #7]
 801:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   FlagStatus bitstatus = RESET;
 1153              		.loc 1 801 0
 1154 000a 4FF00003 		mov	r3, #0
 1155 000e FB73     		strb	r3, [r7, #15]
 802:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   uint32_t tempreg = 0;
 1156              		.loc 1 802 0
 1157 0010 4FF00003 		mov	r3, #0
 1158 0014 BB60     		str	r3, [r7, #8]
 803:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 804:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   /* Check the parameters */
 805:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   assert_param(IS_CRYP_GET_FLAG(CRYP_FLAG));
 806:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 807:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   /* check if the FLAG is in RISR register */
 808:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   if ((CRYP_FLAG & FLAG_MASK) != 0x00) 
 1159              		.loc 1 808 0
 1160 0016 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1161 0018 03F02003 		and	r3, r3, #32
 1162 001c 002B     		cmp	r3, #0
 1163 001e 06D0     		beq	.L33
 809:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   {
 810:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****     tempreg = CRYP->RISR;
 1164              		.loc 1 810 0
 1165 0020 4FF00003 		mov	r3, #0
 1166 0024 C5F20603 		movt	r3, 20486
 1167 0028 9B69     		ldr	r3, [r3, #24]
 1168 002a BB60     		str	r3, [r7, #8]
 1169 002c 05E0     		b	.L34
 1170              	.L33:
 811:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   }
 812:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   else  /* The FLAG is in SR register */
 813:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   {
 814:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****     tempreg = CRYP->SR;
 1171              		.loc 1 814 0
 1172 002e 4FF00003 		mov	r3, #0
 1173 0032 C5F20603 		movt	r3, 20486
 1174 0036 5B68     		ldr	r3, [r3, #4]
 1175 0038 BB60     		str	r3, [r7, #8]
 1176              	.L34:
 815:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   }
 816:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 817:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 818:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   /* Check the status of the specified CRYP flag */
 819:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   if ((tempreg & CRYP_FLAG ) != (uint8_t)RESET)
 1177              		.loc 1 819 0
 1178 003a FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 1179 003c BB68     		ldr	r3, [r7, #8]
 1180 003e 1340     		ands	r3, r3, r2
 1181 0040 002B     		cmp	r3, #0
 1182 0042 03D0     		beq	.L35
 820:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   {
 821:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****     /* CRYP_FLAG is set */
 822:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****     bitstatus = SET;
 1183              		.loc 1 822 0
 1184 0044 4FF00103 		mov	r3, #1
 1185 0048 FB73     		strb	r3, [r7, #15]
 1186 004a 02E0     		b	.L36
 1187              	.L35:
 823:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   }
 824:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   else
 825:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   {
 826:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****     /* CRYP_FLAG is reset */
 827:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****     bitstatus = RESET;
 1188              		.loc 1 827 0
 1189 004c 4FF00003 		mov	r3, #0
 1190 0050 FB73     		strb	r3, [r7, #15]
 1191              	.L36:
 828:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   }
 829:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 830:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   /* Return the CRYP_FLAG status */
 831:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   return  bitstatus;
 1192              		.loc 1 831 0
 1193 0052 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 832:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** }
 1194              		.loc 1 832 0
 1195 0054 1846     		mov	r0, r3
 1196 0056 07F11407 		add	r7, r7, #20
 1197 005a BD46     		mov	sp, r7
 1198 005c 80BC     		pop	{r7}
 1199 005e 7047     		bx	lr
 1200              		.cfi_endproc
 1201              	.LFE126:
 1203              		.text
 1204              	.Letext0:
 1205              		.file 2 "c:\\program files (x86)\\codesourcery\\sourcery_codebench_lite_for_arm_eabi\\bin\\../lib/
 1206              		.file 3 "C:\\Users\\Anthony.Paterson@opus.co\\Documents\\git\\blink\\blink\\Device\\STM32F4xx\\Inc
 1207              		.file 4 "C:\\Users\\Anthony.Paterson@opus.co\\Documents\\git\\blink\\blink\\Libraries\\STM32F4xx_S
 1208              		.file 5 "C:\\Users\\Anthony.Paterson@opus.co\\Documents\\git\\blink\\blink\\Libraries\\CMSIS\\Incl
DEFINED SYMBOLS
                            *ABS*:00000000 stm32f4xx_cryp.c
C:\Users\ANTHON~1.CO\AppData\Local\Temp\ccQiPQKU.s:19     .text.CRYP_DeInit:00000000 $t
C:\Users\ANTHON~1.CO\AppData\Local\Temp\ccQiPQKU.s:24     .text.CRYP_DeInit:00000000 CRYP_DeInit
C:\Users\ANTHON~1.CO\AppData\Local\Temp\ccQiPQKU.s:53     .text.CRYP_Init:00000000 $t
C:\Users\ANTHON~1.CO\AppData\Local\Temp\ccQiPQKU.s:58     .text.CRYP_Init:00000000 CRYP_Init
C:\Users\ANTHON~1.CO\AppData\Local\Temp\ccQiPQKU.s:182    .text.CRYP_StructInit:00000000 $t
C:\Users\ANTHON~1.CO\AppData\Local\Temp\ccQiPQKU.s:187    .text.CRYP_StructInit:00000000 CRYP_StructInit
C:\Users\ANTHON~1.CO\AppData\Local\Temp\ccQiPQKU.s:230    .text.CRYP_KeyInit:00000000 $t
C:\Users\ANTHON~1.CO\AppData\Local\Temp\ccQiPQKU.s:235    .text.CRYP_KeyInit:00000000 CRYP_KeyInit
C:\Users\ANTHON~1.CO\AppData\Local\Temp\ccQiPQKU.s:310    .text.CRYP_KeyStructInit:00000000 $t
C:\Users\ANTHON~1.CO\AppData\Local\Temp\ccQiPQKU.s:315    .text.CRYP_KeyStructInit:00000000 CRYP_KeyStructInit
C:\Users\ANTHON~1.CO\AppData\Local\Temp\ccQiPQKU.s:374    .text.CRYP_IVInit:00000000 $t
C:\Users\ANTHON~1.CO\AppData\Local\Temp\ccQiPQKU.s:379    .text.CRYP_IVInit:00000000 CRYP_IVInit
C:\Users\ANTHON~1.CO\AppData\Local\Temp\ccQiPQKU.s:430    .text.CRYP_IVStructInit:00000000 $t
C:\Users\ANTHON~1.CO\AppData\Local\Temp\ccQiPQKU.s:435    .text.CRYP_IVStructInit:00000000 CRYP_IVStructInit
C:\Users\ANTHON~1.CO\AppData\Local\Temp\ccQiPQKU.s:478    .text.CRYP_FIFOFlush:00000000 $t
C:\Users\ANTHON~1.CO\AppData\Local\Temp\ccQiPQKU.s:483    .text.CRYP_FIFOFlush:00000000 CRYP_FIFOFlush
C:\Users\ANTHON~1.CO\AppData\Local\Temp\ccQiPQKU.s:513    .text.CRYP_Cmd:00000000 $t
C:\Users\ANTHON~1.CO\AppData\Local\Temp\ccQiPQKU.s:518    .text.CRYP_Cmd:00000000 CRYP_Cmd
C:\Users\ANTHON~1.CO\AppData\Local\Temp\ccQiPQKU.s:569    .text.CRYP_DataIn:00000000 $t
C:\Users\ANTHON~1.CO\AppData\Local\Temp\ccQiPQKU.s:574    .text.CRYP_DataIn:00000000 CRYP_DataIn
C:\Users\ANTHON~1.CO\AppData\Local\Temp\ccQiPQKU.s:606    .text.CRYP_DataOut:00000000 $t
C:\Users\ANTHON~1.CO\AppData\Local\Temp\ccQiPQKU.s:611    .text.CRYP_DataOut:00000000 CRYP_DataOut
C:\Users\ANTHON~1.CO\AppData\Local\Temp\ccQiPQKU.s:638    .text.CRYP_SaveContext:00000000 $t
C:\Users\ANTHON~1.CO\AppData\Local\Temp\ccQiPQKU.s:643    .text.CRYP_SaveContext:00000000 CRYP_SaveContext
C:\Users\ANTHON~1.CO\AppData\Local\Temp\ccQiPQKU.s:831    .text.CRYP_RestoreContext:00000000 $t
C:\Users\ANTHON~1.CO\AppData\Local\Temp\ccQiPQKU.s:836    .text.CRYP_RestoreContext:00000000 CRYP_RestoreContext
C:\Users\ANTHON~1.CO\AppData\Local\Temp\ccQiPQKU.s:949    .text.CRYP_DMACmd:00000000 $t
C:\Users\ANTHON~1.CO\AppData\Local\Temp\ccQiPQKU.s:954    .text.CRYP_DMACmd:00000000 CRYP_DMACmd
C:\Users\ANTHON~1.CO\AppData\Local\Temp\ccQiPQKU.s:1011   .text.CRYP_ITConfig:00000000 $t
C:\Users\ANTHON~1.CO\AppData\Local\Temp\ccQiPQKU.s:1016   .text.CRYP_ITConfig:00000000 CRYP_ITConfig
C:\Users\ANTHON~1.CO\AppData\Local\Temp\ccQiPQKU.s:1073   .text.CRYP_GetITStatus:00000000 $t
C:\Users\ANTHON~1.CO\AppData\Local\Temp\ccQiPQKU.s:1078   .text.CRYP_GetITStatus:00000000 CRYP_GetITStatus
C:\Users\ANTHON~1.CO\AppData\Local\Temp\ccQiPQKU.s:1129   .text.CRYP_GetFlagStatus:00000000 $t
C:\Users\ANTHON~1.CO\AppData\Local\Temp\ccQiPQKU.s:1134   .text.CRYP_GetFlagStatus:00000000 CRYP_GetFlagStatus
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
RCC_AHB2PeriphResetCmd
