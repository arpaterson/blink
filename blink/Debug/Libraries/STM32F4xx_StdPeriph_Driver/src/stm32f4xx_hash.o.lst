   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"stm32f4xx_hash.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.section	.text.HASH_DeInit,"ax",%progbits
  19              		.align	2
  20              		.global	HASH_DeInit
  21              		.thumb
  22              		.thumb_func
  24              	HASH_DeInit:
  25              	.LFB110:
  26              		.file 1 "../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c"
   1:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** /**
   2:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   ******************************************************************************
   3:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   * @file    stm32f4xx_hash.c
   4:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   * @author  MCD Application Team
   5:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   * @version V1.0.0
   6:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   * @date    30-September-2011
   7:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   * @brief   This file provides firmware functions to manage the following 
   8:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *          functionalities of the HASH / HMAC Processor (HASH) peripheral:           
   9:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *           - Initialization and Configuration functions
  10:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *           - Message Digest generation functions
  11:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *           - context swapping functions   
  12:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *           - DMA interface function       
  13:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *           - Interrupts and flags management       
  14:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *         
  15:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *  @verbatim
  16:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *                               
  17:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *          ===================================================================      
  18:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *                                   How to use this driver
  19:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *          ===================================================================
  20:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *          HASH operation : 
  21:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *          ----------------                   
  22:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *         1. Enable the HASH controller clock using 
  23:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *            RCC_AHB2PeriphClockCmd(RCC_AHB2Periph_HASH, ENABLE) function.
  24:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *           
  25:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *         2. Initialise the HASH using HASH_Init() function. 
  26:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *               
  27:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *         3 . Reset the HASH processor core, so that the HASH will be ready 
  28:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *             to compute he message digest of a new message by using 
  29:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *             HASH_Reset() function.
  30:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *
  31:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *         4. Enable the HASH controller using the HASH_Cmd() function. 
  32:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *                
  33:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *         5. if using DMA for Data input transfer, Activate the DMA Request 
  34:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *            using HASH_DMACmd() function 
  35:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *                    
  36:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *         6. if DMA is not used for data transfer, use HASH_DataIn() function 
  37:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *            to enter data to IN FIFO.
  38:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *             
  39:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *          
  40:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *         7. Configure the Number of valid bits in last word of the message 
  41:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *            using HASH_SetLastWordValidBitsNbr() function.
  42:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *             
  43:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *         8. if the message length is not an exact multiple of 512 bits, 
  44:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *            then the function HASH_StartDigest() must be called to 
  45:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *            launch the computation of the final digest.     
  46:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *             
  47:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *         9. Once computed, the digest can be read using HASH_GetDigest() 
  48:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *            function.         
  49:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *                   
  50:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *        10. To control HASH events you can use one of the following 
  51:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *              two methods:
  52:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *               a- Check on HASH flags using the HASH_GetFlagStatus() function.  
  53:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *               b- Use HASH interrupts through the function HASH_ITConfig() at 
  54:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *                  initialization phase and HASH_GetITStatus() function into 
  55:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *                  interrupt routines in hashing phase.
  56:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *          After checking on a flag you should clear it using HASH_ClearFlag()
  57:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *          function. And after checking on an interrupt event you should 
  58:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *          clear it using HASH_ClearITPendingBit() function.     
  59:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *                     
  60:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *        11. Save and restore hash processor context using 
  61:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *            HASH_SaveContext() and HASH_RestoreContext() functions.     
  62:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *              
  63:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *
  64:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *            
  65:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *          HMAC operation : 
  66:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *          ----------------  
  67:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *          The HMAC algorithm is used for message authentication, by 
  68:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *          irreversibly binding the message being processed to a key chosen 
  69:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *          by the user. 
  70:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *          For HMAC specifications, refer to "HMAC: keyed-hashing for message 
  71:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *          authentication, H. Krawczyk, M. Bellare, R. Canetti, February 1997"
  72:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *          
  73:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *          Basically, the HMAC algorithm consists of two nested hash operations:
  74:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *          HMAC(message) = Hash[((key | pad) XOR 0x5C) | Hash(((key | pad) XOR 0x36) | message)]
  75:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *          where:
  76:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *          - "pad" is a sequence of zeroes needed to extend the key to the 
  77:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *                  length of the underlying hash function data block (that is 
  78:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *                  512 bits for both the SHA-1 and MD5 hash algorithms)
  79:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *          - "|"   represents the concatenation operator 
  80:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *          
  81:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *         
  82:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *         To compute the HMAC, four different phases are required:
  83:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *                    
  84:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *         1.  Initialise the HASH using HASH_Init() function to do HMAC 
  85:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *             operation. 
  86:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *                
  87:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *         2.  The key (to be used for the inner hash function) is then given 
  88:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *             to the core. This operation follows the same mechanism as the 
  89:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *             one used to send the message in the hash operation (that is, 
  90:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *             by HASH_DataIn() function and, finally, 
  91:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *             HASH_StartDigest() function.
  92:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *          
  93:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *         3.  Once the last word has been entered and computation has started, 
  94:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *             the hash processor elaborates the key. It is then ready to 
  95:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *             accept the message text using the same mechanism as the one 
  96:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *             used to send the message in the hash operation.
  97:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *       
  98:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *         4.  After the first hash round, the hash processor returns "ready" 
  99:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *             to indicate that it is ready to receive the key to be used for 
 100:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *             the outer hash function (normally, this key is the same as the 
 101:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *             one used for the inner hash function). When the last word of 
 102:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *             the key is entered and computation starts, the HMAC result is 
 103:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *             made available using HASH_GetDigest() function.
 104:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *               
 105:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *              
 106:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *  @endverbatim
 107:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *         
 108:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   ******************************************************************************
 109:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   * @attention
 110:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *
 111:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   * THE PRESENT FIRMWARE WHICH IS FOR GUIDANCE ONLY AIMS AT PROVIDING CUSTOMERS
 112:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   * WITH CODING INFORMATION REGARDING THEIR PRODUCTS IN ORDER FOR THEM TO SAVE
 113:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   * TIME. AS A RESULT, STMICROELECTRONICS SHALL NOT BE HELD LIABLE FOR ANY
 114:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   * DIRECT, INDIRECT OR CONSEQUENTIAL DAMAGES WITH RESPECT TO ANY CLAIMS ARISING
 115:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   * FROM THE CONTENT OF SUCH FIRMWARE AND/OR THE USE MADE BY CUSTOMERS OF THE
 116:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   * CODING INFORMATION CONTAINED HEREIN IN CONNECTION WITH THEIR PRODUCTS.
 117:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *
 118:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   * <h2><center>&copy; COPYRIGHT 2011 STMicroelectronics</center></h2>
 119:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   ******************************************************************************  
 120:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   */
 121:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** 
 122:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** /* Includes ------------------------------------------------------------------*/
 123:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** #include "stm32f4xx_hash.h"
 124:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** #include "stm32f4xx_rcc.h"
 125:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** 
 126:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** /** @addtogroup STM32F4xx_StdPeriph_Driver
 127:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   * @{
 128:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   */
 129:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** 
 130:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** /** @defgroup HASH 
 131:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   * @brief HASH driver modules
 132:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   * @{
 133:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   */ 
 134:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** 
 135:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** /* Private typedef -----------------------------------------------------------*/
 136:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** /* Private define ------------------------------------------------------------*/
 137:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** /* Private macro -------------------------------------------------------------*/
 138:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** /* Private variables ---------------------------------------------------------*/
 139:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** /* Private function prototypes -----------------------------------------------*/
 140:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** /* Private functions ---------------------------------------------------------*/ 
 141:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** 
 142:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** /** @defgroup HASH_Private_Functions
 143:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   * @{
 144:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   */ 
 145:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** 
 146:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** /** @defgroup HASH_Group1 Initialization and Configuration functions
 147:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****  *  @brief    Initialization and Configuration functions 
 148:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****  *
 149:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** @verbatim    
 150:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****  ===============================================================================
 151:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****                       Initialization and Configuration functions
 152:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****  ===============================================================================  
 153:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   This section provides functions allowing to 
 154:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****    - Initialize the HASH peripheral
 155:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****    - Configure the HASH Processor 
 156:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****       - MD5/SHA1, 
 157:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****       - HASH/HMAC, 
 158:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****       - datatype 
 159:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****       - HMAC Key (if mode = HMAC)
 160:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****    - Reset the HASH Processor 
 161:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****    
 162:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** @endverbatim
 163:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   * @{
 164:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   */
 165:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   
 166:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** /**
 167:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   * @brief  Deinitializes the HASH peripheral registers to their default reset values
 168:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   * @param  None
 169:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   * @retval None
 170:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   */
 171:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** void HASH_DeInit(void)
 172:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** {
  27              		.loc 1 172 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 1, uses_anonymous_args = 0
  31 0000 80B5     		push	{r7, lr}
  32              	.LCFI0:
  33              		.cfi_def_cfa_offset 8
  34              		.cfi_offset 14, -4
  35              		.cfi_offset 7, -8
  36 0002 00AF     		add	r7, sp, #0
  37              	.LCFI1:
  38              		.cfi_def_cfa_register 7
 173:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   /* Enable HASH reset state */
 174:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   RCC_AHB2PeriphResetCmd(RCC_AHB2Periph_HASH, ENABLE);
  39              		.loc 1 174 0
  40 0004 4FF02000 		mov	r0, #32
  41 0008 4FF00101 		mov	r1, #1
  42 000c FFF7FEFF 		bl	RCC_AHB2PeriphResetCmd
 175:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   /* Release HASH from reset state */
 176:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   RCC_AHB2PeriphResetCmd(RCC_AHB2Periph_HASH, DISABLE);
  43              		.loc 1 176 0
  44 0010 4FF02000 		mov	r0, #32
  45 0014 4FF00001 		mov	r1, #0
  46 0018 FFF7FEFF 		bl	RCC_AHB2PeriphResetCmd
 177:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** }
  47              		.loc 1 177 0
  48 001c 80BD     		pop	{r7, pc}
  49              		.cfi_endproc
  50              	.LFE110:
  52 001e 00BF     		.section	.text.HASH_Init,"ax",%progbits
  53              		.align	2
  54              		.global	HASH_Init
  55              		.thumb
  56              		.thumb_func
  58              	HASH_Init:
  59              	.LFB111:
 178:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** 
 179:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** /**
 180:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   * @brief  Initializes the HASH peripheral according to the specified parameters
 181:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *         in the HASH_InitStruct structure.
 182:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   * @note   the hash processor is reset when calling this function so that the
 183:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *         HASH will be ready to compute the message digest of a new message.
 184:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *         There is no need to call HASH_Reset() function.           
 185:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   * @param  HASH_InitStruct: pointer to a HASH_InitTypeDef structure that contains
 186:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *         the configuration information for the HASH peripheral.
 187:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   * @note   The field HASH_HMACKeyType in HASH_InitTypeDef must be filled only 
 188:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *          if the algorithm mode is HMAC.       
 189:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   * @retval None
 190:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   */
 191:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** void HASH_Init(HASH_InitTypeDef* HASH_InitStruct)
 192:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** {
  60              		.loc 1 192 0
  61              		.cfi_startproc
  62              		@ args = 0, pretend = 0, frame = 8
  63              		@ frame_needed = 1, uses_anonymous_args = 0
  64              		@ link register save eliminated.
  65 0000 80B4     		push	{r7}
  66              	.LCFI2:
  67              		.cfi_def_cfa_offset 4
  68              		.cfi_offset 7, -4
  69 0002 83B0     		sub	sp, sp, #12
  70              	.LCFI3:
  71              		.cfi_def_cfa_offset 16
  72 0004 00AF     		add	r7, sp, #0
  73              	.LCFI4:
  74              		.cfi_def_cfa_register 7
  75 0006 7860     		str	r0, [r7, #4]
 193:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   /* Check the parameters */
 194:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   assert_param(IS_HASH_ALGOSELECTION(HASH_InitStruct->HASH_AlgoSelection));
 195:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   assert_param(IS_HASH_DATATYPE(HASH_InitStruct->HASH_DataType));
 196:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   assert_param(IS_HASH_ALGOMODE(HASH_InitStruct->HASH_AlgoMode));
 197:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   
 198:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   /* Configure the Algorithm used, algorithm mode and the datatype */
 199:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   HASH->CR &= ~ (HASH_CR_ALGO | HASH_CR_DATATYPE | HASH_CR_MODE);
  76              		.loc 1 199 0
  77 0008 4FF48063 		mov	r3, #1024
  78 000c C5F20603 		movt	r3, 20486
  79 0010 4FF48062 		mov	r2, #1024
  80 0014 C5F20602 		movt	r2, 20486
  81 0018 1268     		ldr	r2, [r2, #0]
  82 001a 22F0F002 		bic	r2, r2, #240
  83 001e 1A60     		str	r2, [r3, #0]
 200:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   HASH->CR |= (HASH_InitStruct->HASH_AlgoSelection | \
  84              		.loc 1 200 0
  85 0020 4FF48063 		mov	r3, #1024
  86 0024 C5F20603 		movt	r3, 20486
  87 0028 4FF48062 		mov	r2, #1024
  88 002c C5F20602 		movt	r2, 20486
  89 0030 1168     		ldr	r1, [r2, #0]
  90 0032 7A68     		ldr	r2, [r7, #4]
  91 0034 1068     		ldr	r0, [r2, #0]
 201:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****                HASH_InitStruct->HASH_DataType | \
  92              		.loc 1 201 0
  93 0036 7A68     		ldr	r2, [r7, #4]
  94 0038 9268     		ldr	r2, [r2, #8]
 200:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   HASH->CR |= (HASH_InitStruct->HASH_AlgoSelection | \
  95              		.loc 1 200 0
  96 003a 1043     		orrs	r0, r0, r2
 202:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****                HASH_InitStruct->HASH_AlgoMode);
  97              		.loc 1 202 0
  98 003c 7A68     		ldr	r2, [r7, #4]
  99 003e 5268     		ldr	r2, [r2, #4]
 201:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****                HASH_InitStruct->HASH_DataType | \
 100              		.loc 1 201 0
 101 0040 0243     		orrs	r2, r2, r0
 200:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   HASH->CR |= (HASH_InitStruct->HASH_AlgoSelection | \
 102              		.loc 1 200 0
 103 0042 0A43     		orrs	r2, r2, r1
 104 0044 1A60     		str	r2, [r3, #0]
 203:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   
 204:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   /* if algorithm mode is HMAC, set the Key */  
 205:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   if(HASH_InitStruct->HASH_AlgoMode == HASH_AlgoMode_HMAC) 
 105              		.loc 1 205 0
 106 0046 7B68     		ldr	r3, [r7, #4]
 107 0048 5B68     		ldr	r3, [r3, #4]
 108 004a 402B     		cmp	r3, #64
 109 004c 18D1     		bne	.L3
 206:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   {
 207:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****     assert_param(IS_HASH_HMAC_KEYTYPE(HASH_InitStruct->HASH_HMACKeyType));
 208:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****     HASH->CR &= ~HASH_CR_LKEY;
 110              		.loc 1 208 0
 111 004e 4FF48063 		mov	r3, #1024
 112 0052 C5F20603 		movt	r3, 20486
 113 0056 4FF48062 		mov	r2, #1024
 114 005a C5F20602 		movt	r2, 20486
 115 005e 1268     		ldr	r2, [r2, #0]
 116 0060 22F48032 		bic	r2, r2, #65536
 117 0064 1A60     		str	r2, [r3, #0]
 209:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****     HASH->CR |= HASH_InitStruct->HASH_HMACKeyType;
 118              		.loc 1 209 0
 119 0066 4FF48063 		mov	r3, #1024
 120 006a C5F20603 		movt	r3, 20486
 121 006e 4FF48062 		mov	r2, #1024
 122 0072 C5F20602 		movt	r2, 20486
 123 0076 1168     		ldr	r1, [r2, #0]
 124 0078 7A68     		ldr	r2, [r7, #4]
 125 007a D268     		ldr	r2, [r2, #12]
 126 007c 0A43     		orrs	r2, r2, r1
 127 007e 1A60     		str	r2, [r3, #0]
 128              	.L3:
 210:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   }
 211:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** 
 212:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   /* Reset the HASH processor core, so that the HASH will be ready to compute 
 213:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****      the message digest of a new message */
 214:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   HASH->CR |= HASH_CR_INIT;  
 129              		.loc 1 214 0
 130 0080 4FF48063 		mov	r3, #1024
 131 0084 C5F20603 		movt	r3, 20486
 132 0088 4FF48062 		mov	r2, #1024
 133 008c C5F20602 		movt	r2, 20486
 134 0090 1268     		ldr	r2, [r2, #0]
 135 0092 42F00402 		orr	r2, r2, #4
 136 0096 1A60     		str	r2, [r3, #0]
 215:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** }
 137              		.loc 1 215 0
 138 0098 07F10C07 		add	r7, r7, #12
 139 009c BD46     		mov	sp, r7
 140 009e 80BC     		pop	{r7}
 141 00a0 7047     		bx	lr
 142              		.cfi_endproc
 143              	.LFE111:
 145 00a2 00BF     		.section	.text.HASH_StructInit,"ax",%progbits
 146              		.align	2
 147              		.global	HASH_StructInit
 148              		.thumb
 149              		.thumb_func
 151              	HASH_StructInit:
 152              	.LFB112:
 216:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** 
 217:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** /**
 218:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   * @brief  Fills each HASH_InitStruct member with its default value.
 219:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   * @param  HASH_InitStruct : pointer to a HASH_InitTypeDef structure which will
 220:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *          be initialized.  
 221:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *  @note  The default values set are : Processor mode is HASH, Algorithm selected is SHA1,
 222:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *          Data type selected is 32b and HMAC Key Type is short key.  
 223:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   * @retval None
 224:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   */
 225:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** void HASH_StructInit(HASH_InitTypeDef* HASH_InitStruct)
 226:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** {
 153              		.loc 1 226 0
 154              		.cfi_startproc
 155              		@ args = 0, pretend = 0, frame = 8
 156              		@ frame_needed = 1, uses_anonymous_args = 0
 157              		@ link register save eliminated.
 158 0000 80B4     		push	{r7}
 159              	.LCFI5:
 160              		.cfi_def_cfa_offset 4
 161              		.cfi_offset 7, -4
 162 0002 83B0     		sub	sp, sp, #12
 163              	.LCFI6:
 164              		.cfi_def_cfa_offset 16
 165 0004 00AF     		add	r7, sp, #0
 166              	.LCFI7:
 167              		.cfi_def_cfa_register 7
 168 0006 7860     		str	r0, [r7, #4]
 227:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   /* Initialize the HASH_AlgoSelection member */
 228:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   HASH_InitStruct->HASH_AlgoSelection = HASH_AlgoSelection_SHA1;
 169              		.loc 1 228 0
 170 0008 7B68     		ldr	r3, [r7, #4]
 171 000a 4FF00002 		mov	r2, #0
 172 000e 1A60     		str	r2, [r3, #0]
 229:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** 
 230:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   /* Initialize the HASH_AlgoMode member */
 231:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   HASH_InitStruct->HASH_AlgoMode = HASH_AlgoMode_HASH;
 173              		.loc 1 231 0
 174 0010 7B68     		ldr	r3, [r7, #4]
 175 0012 4FF00002 		mov	r2, #0
 176 0016 5A60     		str	r2, [r3, #4]
 232:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** 
 233:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   /* Initialize the HASH_DataType member */
 234:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   HASH_InitStruct->HASH_DataType = HASH_DataType_32b;
 177              		.loc 1 234 0
 178 0018 7B68     		ldr	r3, [r7, #4]
 179 001a 4FF00002 		mov	r2, #0
 180 001e 9A60     		str	r2, [r3, #8]
 235:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** 
 236:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   /* Initialize the HASH_HMACKeyType member */
 237:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   HASH_InitStruct->HASH_HMACKeyType = HASH_HMACKeyType_ShortKey;
 181              		.loc 1 237 0
 182 0020 7B68     		ldr	r3, [r7, #4]
 183 0022 4FF00002 		mov	r2, #0
 184 0026 DA60     		str	r2, [r3, #12]
 238:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** }
 185              		.loc 1 238 0
 186 0028 07F10C07 		add	r7, r7, #12
 187 002c BD46     		mov	sp, r7
 188 002e 80BC     		pop	{r7}
 189 0030 7047     		bx	lr
 190              		.cfi_endproc
 191              	.LFE112:
 193 0032 00BF     		.section	.text.HASH_Reset,"ax",%progbits
 194              		.align	2
 195              		.global	HASH_Reset
 196              		.thumb
 197              		.thumb_func
 199              	HASH_Reset:
 200              	.LFB113:
 239:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** 
 240:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** /**
 241:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   * @brief  Resets the HASH processor core, so that the HASH will be ready
 242:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *         to compute the message digest of a new message.
 243:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   * @note   Calling this function will clear the HASH_SR_DCIS (Digest calculation 
 244:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *         completion interrupt status) bit corresponding to HASH_IT_DCI 
 245:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *         interrupt and HASH_FLAG_DCIS flag. 
 246:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   * @param  None
 247:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   * @retval None
 248:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   */
 249:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** void HASH_Reset(void)
 250:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** {
 201              		.loc 1 250 0
 202              		.cfi_startproc
 203              		@ args = 0, pretend = 0, frame = 0
 204              		@ frame_needed = 1, uses_anonymous_args = 0
 205              		@ link register save eliminated.
 206 0000 80B4     		push	{r7}
 207              	.LCFI8:
 208              		.cfi_def_cfa_offset 4
 209              		.cfi_offset 7, -4
 210 0002 00AF     		add	r7, sp, #0
 211              	.LCFI9:
 212              		.cfi_def_cfa_register 7
 251:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   /* Reset the HASH processor core */
 252:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   HASH->CR |= HASH_CR_INIT;
 213              		.loc 1 252 0
 214 0004 4FF48063 		mov	r3, #1024
 215 0008 C5F20603 		movt	r3, 20486
 216 000c 4FF48062 		mov	r2, #1024
 217 0010 C5F20602 		movt	r2, 20486
 218 0014 1268     		ldr	r2, [r2, #0]
 219 0016 42F00402 		orr	r2, r2, #4
 220 001a 1A60     		str	r2, [r3, #0]
 253:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** }
 221              		.loc 1 253 0
 222 001c BD46     		mov	sp, r7
 223 001e 80BC     		pop	{r7}
 224 0020 7047     		bx	lr
 225              		.cfi_endproc
 226              	.LFE113:
 228 0022 00BF     		.section	.text.HASH_SetLastWordValidBitsNbr,"ax",%progbits
 229              		.align	2
 230              		.global	HASH_SetLastWordValidBitsNbr
 231              		.thumb
 232              		.thumb_func
 234              	HASH_SetLastWordValidBitsNbr:
 235              	.LFB114:
 254:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** /**
 255:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   * @}
 256:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   */
 257:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****  
 258:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** /** @defgroup HASH_Group2 Message Digest generation functions
 259:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****  *  @brief    Message Digest generation functions
 260:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****  *
 261:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** @verbatim    
 262:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****  ===============================================================================
 263:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****                       Message Digest generation functions
 264:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****  ===============================================================================  
 265:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   This section provides functions allowing the generation of message digest: 
 266:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   - Push data in the IN FIFO : using HASH_DataIn()
 267:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   - Get the number of words set in IN FIFO, use HASH_GetInFIFOWordsNbr()  
 268:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   - set the last word valid bits number using HASH_SetLastWordValidBitsNbr() 
 269:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   - start digest calculation : using HASH_StartDigest()
 270:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   - Get the Digest message : using HASH_GetDigest()
 271:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****  
 272:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** @endverbatim
 273:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   * @{
 274:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   */
 275:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** 
 276:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** 
 277:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** /**
 278:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   * @brief  Configure the Number of valid bits in last word of the message
 279:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   * @param  ValidNumber: Number of valid bits in last word of the message.
 280:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *           This parameter must be a number between 0 and 0x1F.
 281:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *             - 0x00: All 32 bits of the last data written are valid
 282:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *             - 0x01: Only bit [0] of the last data written is valid
 283:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *             - 0x02: Only bits[1:0] of the last data written are valid
 284:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *             - 0x03: Only bits[2:0] of the last data written are valid
 285:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *             - ...
 286:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *             - 0x1F: Only bits[30:0] of the last data written are valid    
 287:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   * @note   The Number of valid bits must be set before to start the message 
 288:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *         digest competition (in Hash and HMAC) and key treatment(in HMAC).    
 289:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   * @retval None
 290:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   */
 291:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** void HASH_SetLastWordValidBitsNbr(uint16_t ValidNumber)
 292:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** {
 236              		.loc 1 292 0
 237              		.cfi_startproc
 238              		@ args = 0, pretend = 0, frame = 8
 239              		@ frame_needed = 1, uses_anonymous_args = 0
 240              		@ link register save eliminated.
 241 0000 80B4     		push	{r7}
 242              	.LCFI10:
 243              		.cfi_def_cfa_offset 4
 244              		.cfi_offset 7, -4
 245 0002 83B0     		sub	sp, sp, #12
 246              	.LCFI11:
 247              		.cfi_def_cfa_offset 16
 248 0004 00AF     		add	r7, sp, #0
 249              	.LCFI12:
 250              		.cfi_def_cfa_register 7
 251 0006 0346     		mov	r3, r0
 252 0008 FB80     		strh	r3, [r7, #6]	@ movhi
 293:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   /* Check the parameters */
 294:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   assert_param(IS_HASH_VALIDBITSNUMBER(ValidNumber));
 295:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   
 296:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   /* Configure the Number of valid bits in last word of the message */
 297:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   HASH->STR &= ~(HASH_STR_NBW);
 253              		.loc 1 297 0
 254 000a 4FF48063 		mov	r3, #1024
 255 000e C5F20603 		movt	r3, 20486
 256 0012 4FF48062 		mov	r2, #1024
 257 0016 C5F20602 		movt	r2, 20486
 258 001a 9268     		ldr	r2, [r2, #8]
 259 001c 22F01F02 		bic	r2, r2, #31
 260 0020 9A60     		str	r2, [r3, #8]
 298:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   HASH->STR |= ValidNumber;
 261              		.loc 1 298 0
 262 0022 4FF48063 		mov	r3, #1024
 263 0026 C5F20603 		movt	r3, 20486
 264 002a 4FF48062 		mov	r2, #1024
 265 002e C5F20602 		movt	r2, 20486
 266 0032 9168     		ldr	r1, [r2, #8]
 267 0034 FA88     		ldrh	r2, [r7, #6]
 268 0036 0A43     		orrs	r2, r2, r1
 269 0038 9A60     		str	r2, [r3, #8]
 299:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** }
 270              		.loc 1 299 0
 271 003a 07F10C07 		add	r7, r7, #12
 272 003e BD46     		mov	sp, r7
 273 0040 80BC     		pop	{r7}
 274 0042 7047     		bx	lr
 275              		.cfi_endproc
 276              	.LFE114:
 278              		.section	.text.HASH_DataIn,"ax",%progbits
 279              		.align	2
 280              		.global	HASH_DataIn
 281              		.thumb
 282              		.thumb_func
 284              	HASH_DataIn:
 285              	.LFB115:
 300:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** 
 301:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** /**
 302:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   * @brief  Writes data in the Data Input FIFO
 303:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   * @param  Data: new data of the message to be processed.
 304:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   * @retval None
 305:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   */
 306:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** void HASH_DataIn(uint32_t Data)
 307:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** {
 286              		.loc 1 307 0
 287              		.cfi_startproc
 288              		@ args = 0, pretend = 0, frame = 8
 289              		@ frame_needed = 1, uses_anonymous_args = 0
 290              		@ link register save eliminated.
 291 0000 80B4     		push	{r7}
 292              	.LCFI13:
 293              		.cfi_def_cfa_offset 4
 294              		.cfi_offset 7, -4
 295 0002 83B0     		sub	sp, sp, #12
 296              	.LCFI14:
 297              		.cfi_def_cfa_offset 16
 298 0004 00AF     		add	r7, sp, #0
 299              	.LCFI15:
 300              		.cfi_def_cfa_register 7
 301 0006 7860     		str	r0, [r7, #4]
 308:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   /* Write in the DIN register a new data */
 309:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   HASH->DIN = Data;
 302              		.loc 1 309 0
 303 0008 4FF48063 		mov	r3, #1024
 304 000c C5F20603 		movt	r3, 20486
 305 0010 7A68     		ldr	r2, [r7, #4]
 306 0012 5A60     		str	r2, [r3, #4]
 310:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** }
 307              		.loc 1 310 0
 308 0014 07F10C07 		add	r7, r7, #12
 309 0018 BD46     		mov	sp, r7
 310 001a 80BC     		pop	{r7}
 311 001c 7047     		bx	lr
 312              		.cfi_endproc
 313              	.LFE115:
 315 001e 00BF     		.section	.text.HASH_GetInFIFOWordsNbr,"ax",%progbits
 316              		.align	2
 317              		.global	HASH_GetInFIFOWordsNbr
 318              		.thumb
 319              		.thumb_func
 321              	HASH_GetInFIFOWordsNbr:
 322              	.LFB116:
 311:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** 
 312:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** /**
 313:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   * @brief  Returns the number of words already pushed into the IN FIFO.
 314:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   * @param  None
 315:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   * @retval The value of words already pushed into the IN FIFO.
 316:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   */
 317:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** uint8_t HASH_GetInFIFOWordsNbr(void)
 318:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** {
 323              		.loc 1 318 0
 324              		.cfi_startproc
 325              		@ args = 0, pretend = 0, frame = 0
 326              		@ frame_needed = 1, uses_anonymous_args = 0
 327              		@ link register save eliminated.
 328 0000 80B4     		push	{r7}
 329              	.LCFI16:
 330              		.cfi_def_cfa_offset 4
 331              		.cfi_offset 7, -4
 332 0002 00AF     		add	r7, sp, #0
 333              	.LCFI17:
 334              		.cfi_def_cfa_register 7
 319:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   /* Return the value of NBW bits */
 320:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   return ((HASH->CR & HASH_CR_NBW) >> 8);
 335              		.loc 1 320 0
 336 0004 4FF48063 		mov	r3, #1024
 337 0008 C5F20603 		movt	r3, 20486
 338 000c 1B68     		ldr	r3, [r3, #0]
 339 000e 03F47063 		and	r3, r3, #3840
 340 0012 4FEA1323 		lsr	r3, r3, #8
 341 0016 DBB2     		uxtb	r3, r3
 321:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** }
 342              		.loc 1 321 0
 343 0018 1846     		mov	r0, r3
 344 001a BD46     		mov	sp, r7
 345 001c 80BC     		pop	{r7}
 346 001e 7047     		bx	lr
 347              		.cfi_endproc
 348              	.LFE116:
 350              		.section	.text.HASH_GetDigest,"ax",%progbits
 351              		.align	2
 352              		.global	HASH_GetDigest
 353              		.thumb
 354              		.thumb_func
 356              	HASH_GetDigest:
 357              	.LFB117:
 322:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** 
 323:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** /**
 324:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   * @brief  Provides the message digest result.
 325:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   * @note   In MD5 mode, Data[4] filed of HASH_MsgDigest structure is not used
 326:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *         and is read as zero.  
 327:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   * @param  HASH_MessageDigest: pointer to a HASH_MsgDigest structure which will 
 328:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *         hold the message digest result 
 329:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   * @retval None
 330:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   */
 331:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** void HASH_GetDigest(HASH_MsgDigest* HASH_MessageDigest)
 332:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** {
 358              		.loc 1 332 0
 359              		.cfi_startproc
 360              		@ args = 0, pretend = 0, frame = 8
 361              		@ frame_needed = 1, uses_anonymous_args = 0
 362              		@ link register save eliminated.
 363 0000 80B4     		push	{r7}
 364              	.LCFI18:
 365              		.cfi_def_cfa_offset 4
 366              		.cfi_offset 7, -4
 367 0002 83B0     		sub	sp, sp, #12
 368              	.LCFI19:
 369              		.cfi_def_cfa_offset 16
 370 0004 00AF     		add	r7, sp, #0
 371              	.LCFI20:
 372              		.cfi_def_cfa_register 7
 373 0006 7860     		str	r0, [r7, #4]
 333:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   /* Get the data field */
 334:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   HASH_MessageDigest->Data[0] = HASH->HR[0];
 374              		.loc 1 334 0
 375 0008 4FF48063 		mov	r3, #1024
 376 000c C5F20603 		movt	r3, 20486
 377 0010 DA68     		ldr	r2, [r3, #12]
 378 0012 7B68     		ldr	r3, [r7, #4]
 379 0014 1A60     		str	r2, [r3, #0]
 335:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   HASH_MessageDigest->Data[1] = HASH->HR[1];
 380              		.loc 1 335 0
 381 0016 4FF48063 		mov	r3, #1024
 382 001a C5F20603 		movt	r3, 20486
 383 001e 1A69     		ldr	r2, [r3, #16]
 384 0020 7B68     		ldr	r3, [r7, #4]
 385 0022 5A60     		str	r2, [r3, #4]
 336:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   HASH_MessageDigest->Data[2] = HASH->HR[2];
 386              		.loc 1 336 0
 387 0024 4FF48063 		mov	r3, #1024
 388 0028 C5F20603 		movt	r3, 20486
 389 002c 5A69     		ldr	r2, [r3, #20]
 390 002e 7B68     		ldr	r3, [r7, #4]
 391 0030 9A60     		str	r2, [r3, #8]
 337:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   HASH_MessageDigest->Data[3] = HASH->HR[3];
 392              		.loc 1 337 0
 393 0032 4FF48063 		mov	r3, #1024
 394 0036 C5F20603 		movt	r3, 20486
 395 003a 9A69     		ldr	r2, [r3, #24]
 396 003c 7B68     		ldr	r3, [r7, #4]
 397 003e DA60     		str	r2, [r3, #12]
 338:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   HASH_MessageDigest->Data[4] = HASH->HR[4];
 398              		.loc 1 338 0
 399 0040 4FF48063 		mov	r3, #1024
 400 0044 C5F20603 		movt	r3, 20486
 401 0048 DA69     		ldr	r2, [r3, #28]
 402 004a 7B68     		ldr	r3, [r7, #4]
 403 004c 1A61     		str	r2, [r3, #16]
 339:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** }
 404              		.loc 1 339 0
 405 004e 07F10C07 		add	r7, r7, #12
 406 0052 BD46     		mov	sp, r7
 407 0054 80BC     		pop	{r7}
 408 0056 7047     		bx	lr
 409              		.cfi_endproc
 410              	.LFE117:
 412              		.section	.text.HASH_StartDigest,"ax",%progbits
 413              		.align	2
 414              		.global	HASH_StartDigest
 415              		.thumb
 416              		.thumb_func
 418              	HASH_StartDigest:
 419              	.LFB118:
 340:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** 
 341:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** /**
 342:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   * @brief  Starts the message padding and calculation of the final message     
 343:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   * @param  None
 344:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   * @retval None
 345:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   */
 346:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** void HASH_StartDigest(void)
 347:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** {
 420              		.loc 1 347 0
 421              		.cfi_startproc
 422              		@ args = 0, pretend = 0, frame = 0
 423              		@ frame_needed = 1, uses_anonymous_args = 0
 424              		@ link register save eliminated.
 425 0000 80B4     		push	{r7}
 426              	.LCFI21:
 427              		.cfi_def_cfa_offset 4
 428              		.cfi_offset 7, -4
 429 0002 00AF     		add	r7, sp, #0
 430              	.LCFI22:
 431              		.cfi_def_cfa_register 7
 348:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   /* Start the Digest calculation */
 349:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   HASH->STR |= HASH_STR_DCAL;
 432              		.loc 1 349 0
 433 0004 4FF48063 		mov	r3, #1024
 434 0008 C5F20603 		movt	r3, 20486
 435 000c 4FF48062 		mov	r2, #1024
 436 0010 C5F20602 		movt	r2, 20486
 437 0014 9268     		ldr	r2, [r2, #8]
 438 0016 42F48072 		orr	r2, r2, #256
 439 001a 9A60     		str	r2, [r3, #8]
 350:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** }
 440              		.loc 1 350 0
 441 001c BD46     		mov	sp, r7
 442 001e 80BC     		pop	{r7}
 443 0020 7047     		bx	lr
 444              		.cfi_endproc
 445              	.LFE118:
 447 0022 00BF     		.section	.text.HASH_SaveContext,"ax",%progbits
 448              		.align	2
 449              		.global	HASH_SaveContext
 450              		.thumb
 451              		.thumb_func
 453              	HASH_SaveContext:
 454              	.LFB119:
 351:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** /**
 352:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   * @}
 353:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   */
 354:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** 
 355:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** /** @defgroup HASH_Group3 Context swapping functions
 356:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****  *  @brief   Context swapping functions
 357:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****  *
 358:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** @verbatim   
 359:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****  ===============================================================================
 360:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****                              Context swapping functions
 361:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****  ===============================================================================  
 362:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** 
 363:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   This section provides functions allowing to save and store HASH Context
 364:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   
 365:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   It is possible to interrupt a HASH/HMAC process to perform another processing 
 366:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   with a higher priority, and to complete the interrupted process later on, when 
 367:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   the higher priority task is complete. To do so, the context of the interrupted 
 368:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   task must be saved from the HASH registers to memory, and then be restored 
 369:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   from memory to the HASH registers.
 370:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   
 371:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   1. To save the current context, use HASH_SaveContext() function
 372:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   2. To restore the saved context, use HASH_RestoreContext() function 
 373:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   
 374:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** 
 375:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** @endverbatim
 376:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   * @{
 377:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   */
 378:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   
 379:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** /**
 380:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   * @brief  Save the Hash peripheral Context. 
 381:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   * @note   The context can be saved only when no block is currently being 
 382:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *         processed. So user must wait for DINIS = 1 (the last block has been 
 383:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *         processed and the input FIFO is empty) or NBW != 0 (the FIFO is not 
 384:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *         full and no processing is ongoing).   
 385:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   * @param  HASH_ContextSave: pointer to a HASH_Context structure that contains
 386:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *         the repository for current context.
 387:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   * @retval None
 388:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   */
 389:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** void HASH_SaveContext(HASH_Context* HASH_ContextSave)
 390:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** {
 455              		.loc 1 390 0
 456              		.cfi_startproc
 457              		@ args = 0, pretend = 0, frame = 16
 458              		@ frame_needed = 1, uses_anonymous_args = 0
 459              		@ link register save eliminated.
 460 0000 80B4     		push	{r7}
 461              	.LCFI23:
 462              		.cfi_def_cfa_offset 4
 463              		.cfi_offset 7, -4
 464 0002 85B0     		sub	sp, sp, #20
 465              	.LCFI24:
 466              		.cfi_def_cfa_offset 24
 467 0004 00AF     		add	r7, sp, #0
 468              	.LCFI25:
 469              		.cfi_def_cfa_register 7
 470 0006 7860     		str	r0, [r7, #4]
 391:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   uint8_t i = 0;
 471              		.loc 1 391 0
 472 0008 4FF00003 		mov	r3, #0
 473 000c FB73     		strb	r3, [r7, #15]
 392:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   
 393:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   /* save context registers */
 394:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   HASH_ContextSave->HASH_IMR = HASH->IMR;  
 474              		.loc 1 394 0
 475 000e 4FF48063 		mov	r3, #1024
 476 0012 C5F20603 		movt	r3, 20486
 477 0016 1A6A     		ldr	r2, [r3, #32]
 478 0018 7B68     		ldr	r3, [r7, #4]
 479 001a 1A60     		str	r2, [r3, #0]
 395:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   HASH_ContextSave->HASH_STR = HASH->STR;      
 480              		.loc 1 395 0
 481 001c 4FF48063 		mov	r3, #1024
 482 0020 C5F20603 		movt	r3, 20486
 483 0024 9A68     		ldr	r2, [r3, #8]
 484 0026 7B68     		ldr	r3, [r7, #4]
 485 0028 5A60     		str	r2, [r3, #4]
 396:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   HASH_ContextSave->HASH_CR  = HASH->CR;     
 486              		.loc 1 396 0
 487 002a 4FF48063 		mov	r3, #1024
 488 002e C5F20603 		movt	r3, 20486
 489 0032 1A68     		ldr	r2, [r3, #0]
 490 0034 7B68     		ldr	r3, [r7, #4]
 491 0036 9A60     		str	r2, [r3, #8]
 397:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   for(i=0; i<=50;i++)
 492              		.loc 1 397 0
 493 0038 4FF00003 		mov	r3, #0
 494 003c FB73     		strb	r3, [r7, #15]
 495 003e 14E0     		b	.L12
 496              	.L13:
 398:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   {
 399:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****      HASH_ContextSave->HASH_CSR[i] = HASH->CSR[i];
 497              		.loc 1 399 0 discriminator 2
 498 0040 F87B     		ldrb	r0, [r7, #15]	@ zero_extendqisi2
 499 0042 4FF48063 		mov	r3, #1024
 500 0046 C5F20603 		movt	r3, 20486
 501 004a FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 502 004c 02F13E02 		add	r2, r2, #62
 503 0050 53F82220 		ldr	r2, [r3, r2, lsl #2]
 504 0054 7968     		ldr	r1, [r7, #4]
 505 0056 00F10203 		add	r3, r0, #2
 506 005a 4FEA8303 		lsl	r3, r3, #2
 507 005e CB18     		adds	r3, r1, r3
 508 0060 5A60     		str	r2, [r3, #4]
 397:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   for(i=0; i<=50;i++)
 509              		.loc 1 397 0 discriminator 2
 510 0062 FB7B     		ldrb	r3, [r7, #15]
 511 0064 03F10103 		add	r3, r3, #1
 512 0068 FB73     		strb	r3, [r7, #15]
 513              	.L12:
 397:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   for(i=0; i<=50;i++)
 514              		.loc 1 397 0 is_stmt 0 discriminator 1
 515 006a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 516 006c 322B     		cmp	r3, #50
 517 006e E7D9     		bls	.L13
 400:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   }   
 401:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** }
 518              		.loc 1 401 0 is_stmt 1
 519 0070 07F11407 		add	r7, r7, #20
 520 0074 BD46     		mov	sp, r7
 521 0076 80BC     		pop	{r7}
 522 0078 7047     		bx	lr
 523              		.cfi_endproc
 524              	.LFE119:
 526 007a 00BF     		.section	.text.HASH_RestoreContext,"ax",%progbits
 527              		.align	2
 528              		.global	HASH_RestoreContext
 529              		.thumb
 530              		.thumb_func
 532              	HASH_RestoreContext:
 533              	.LFB120:
 402:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** 
 403:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** /**
 404:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   * @brief  Restore the Hash peripheral Context.  
 405:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   * @note   After calling this function, user can restart the processing from the
 406:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *         point where it has been interrupted.  
 407:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   * @param  HASH_ContextRestore: pointer to a HASH_Context structure that contains
 408:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *         the repository for saved context.
 409:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   * @retval None
 410:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   */
 411:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** void HASH_RestoreContext(HASH_Context* HASH_ContextRestore)  
 412:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** {
 534              		.loc 1 412 0
 535              		.cfi_startproc
 536              		@ args = 0, pretend = 0, frame = 16
 537              		@ frame_needed = 1, uses_anonymous_args = 0
 538              		@ link register save eliminated.
 539 0000 80B4     		push	{r7}
 540              	.LCFI26:
 541              		.cfi_def_cfa_offset 4
 542              		.cfi_offset 7, -4
 543 0002 85B0     		sub	sp, sp, #20
 544              	.LCFI27:
 545              		.cfi_def_cfa_offset 24
 546 0004 00AF     		add	r7, sp, #0
 547              	.LCFI28:
 548              		.cfi_def_cfa_register 7
 549 0006 7860     		str	r0, [r7, #4]
 413:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   uint8_t i = 0;
 550              		.loc 1 413 0
 551 0008 4FF00003 		mov	r3, #0
 552 000c FB73     		strb	r3, [r7, #15]
 414:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   
 415:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   /* restore context registers */
 416:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   HASH->IMR = HASH_ContextRestore->HASH_IMR;   
 553              		.loc 1 416 0
 554 000e 4FF48063 		mov	r3, #1024
 555 0012 C5F20603 		movt	r3, 20486
 556 0016 7A68     		ldr	r2, [r7, #4]
 557 0018 1268     		ldr	r2, [r2, #0]
 558 001a 1A62     		str	r2, [r3, #32]
 417:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   HASH->STR = HASH_ContextRestore->HASH_STR;     
 559              		.loc 1 417 0
 560 001c 4FF48063 		mov	r3, #1024
 561 0020 C5F20603 		movt	r3, 20486
 562 0024 7A68     		ldr	r2, [r7, #4]
 563 0026 5268     		ldr	r2, [r2, #4]
 564 0028 9A60     		str	r2, [r3, #8]
 418:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   HASH->CR = HASH_ContextRestore->HASH_CR;
 565              		.loc 1 418 0
 566 002a 4FF48063 		mov	r3, #1024
 567 002e C5F20603 		movt	r3, 20486
 568 0032 7A68     		ldr	r2, [r7, #4]
 569 0034 9268     		ldr	r2, [r2, #8]
 570 0036 1A60     		str	r2, [r3, #0]
 419:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   
 420:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   /* Initialize the hash processor */
 421:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   HASH->CR |= HASH_CR_INIT; 
 571              		.loc 1 421 0
 572 0038 4FF48063 		mov	r3, #1024
 573 003c C5F20603 		movt	r3, 20486
 574 0040 4FF48062 		mov	r2, #1024
 575 0044 C5F20602 		movt	r2, 20486
 576 0048 1268     		ldr	r2, [r2, #0]
 577 004a 42F00402 		orr	r2, r2, #4
 578 004e 1A60     		str	r2, [r3, #0]
 422:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   
 423:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****    /* continue restoring context registers */     
 424:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   for(i=0; i<=50;i++)
 579              		.loc 1 424 0
 580 0050 4FF00003 		mov	r3, #0
 581 0054 FB73     		strb	r3, [r7, #15]
 582 0056 14E0     		b	.L15
 583              	.L16:
 425:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   {
 426:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****      HASH->CSR[i] = HASH_ContextRestore->HASH_CSR[i];
 584              		.loc 1 426 0 discriminator 2
 585 0058 4FF48063 		mov	r3, #1024
 586 005c C5F20603 		movt	r3, 20486
 587 0060 F87B     		ldrb	r0, [r7, #15]	@ zero_extendqisi2
 588 0062 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 589 0064 7968     		ldr	r1, [r7, #4]
 590 0066 02F10202 		add	r2, r2, #2
 591 006a 4FEA8202 		lsl	r2, r2, #2
 592 006e 8A18     		adds	r2, r1, r2
 593 0070 5168     		ldr	r1, [r2, #4]
 594 0072 00F13E02 		add	r2, r0, #62
 595 0076 43F82210 		str	r1, [r3, r2, lsl #2]
 424:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   for(i=0; i<=50;i++)
 596              		.loc 1 424 0 discriminator 2
 597 007a FB7B     		ldrb	r3, [r7, #15]
 598 007c 03F10103 		add	r3, r3, #1
 599 0080 FB73     		strb	r3, [r7, #15]
 600              	.L15:
 424:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   for(i=0; i<=50;i++)
 601              		.loc 1 424 0 is_stmt 0 discriminator 1
 602 0082 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 603 0084 322B     		cmp	r3, #50
 604 0086 E7D9     		bls	.L16
 427:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   }   
 428:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** }
 605              		.loc 1 428 0 is_stmt 1
 606 0088 07F11407 		add	r7, r7, #20
 607 008c BD46     		mov	sp, r7
 608 008e 80BC     		pop	{r7}
 609 0090 7047     		bx	lr
 610              		.cfi_endproc
 611              	.LFE120:
 613 0092 00BF     		.section	.text.HASH_DMACmd,"ax",%progbits
 614              		.align	2
 615              		.global	HASH_DMACmd
 616              		.thumb
 617              		.thumb_func
 619              	HASH_DMACmd:
 620              	.LFB121:
 429:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** /**
 430:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   * @}
 431:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   */
 432:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** 
 433:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** /** @defgroup HASH_Group4 HASH's DMA interface Configuration function
 434:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****  *  @brief   HASH's DMA interface Configuration function 
 435:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****  *
 436:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** @verbatim   
 437:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****  ===============================================================================
 438:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****                    HASH's DMA interface Configuration function
 439:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****  ===============================================================================  
 440:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** 
 441:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   This section provides functions allowing to configure the DMA interface for 
 442:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   HASH/ HMAC data input transfer.
 443:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****    
 444:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   When the DMA mode is enabled (using the HASH_DMACmd() function), data can be 
 445:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   sent to the IN FIFO using the DMA peripheral.
 446:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** 
 447:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** 
 448:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** 
 449:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** @endverbatim
 450:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   * @{
 451:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   */
 452:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   
 453:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** /**
 454:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   * @brief  Enables or disables the HASH DMA interface.
 455:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   * @note   The DMA is disabled by hardware after the end of transfer.
 456:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   * @param  NewState: new state of the selected HASH DMA transfer request.
 457:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *          This parameter can be: ENABLE or DISABLE.
 458:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   * @retval None
 459:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   */
 460:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** void HASH_DMACmd(FunctionalState NewState)
 461:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** {
 621              		.loc 1 461 0
 622              		.cfi_startproc
 623              		@ args = 0, pretend = 0, frame = 8
 624              		@ frame_needed = 1, uses_anonymous_args = 0
 625              		@ link register save eliminated.
 626 0000 80B4     		push	{r7}
 627              	.LCFI29:
 628              		.cfi_def_cfa_offset 4
 629              		.cfi_offset 7, -4
 630 0002 83B0     		sub	sp, sp, #12
 631              	.LCFI30:
 632              		.cfi_def_cfa_offset 16
 633 0004 00AF     		add	r7, sp, #0
 634              	.LCFI31:
 635              		.cfi_def_cfa_register 7
 636 0006 0346     		mov	r3, r0
 637 0008 FB71     		strb	r3, [r7, #7]
 462:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   /* Check the parameters */
 463:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 464:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** 
 465:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   if (NewState != DISABLE)
 638              		.loc 1 465 0
 639 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 640 000c 002B     		cmp	r3, #0
 641 000e 0CD0     		beq	.L18
 466:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   {
 467:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****     /* Enable the HASH DMA request */
 468:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****     HASH->CR |= HASH_CR_DMAE;
 642              		.loc 1 468 0
 643 0010 4FF48063 		mov	r3, #1024
 644 0014 C5F20603 		movt	r3, 20486
 645 0018 4FF48062 		mov	r2, #1024
 646 001c C5F20602 		movt	r2, 20486
 647 0020 1268     		ldr	r2, [r2, #0]
 648 0022 42F00802 		orr	r2, r2, #8
 649 0026 1A60     		str	r2, [r3, #0]
 650 0028 0BE0     		b	.L17
 651              	.L18:
 469:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   }
 470:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   else
 471:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   {
 472:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****     /* Disable the HASH DMA request */
 473:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****     HASH->CR &= ~HASH_CR_DMAE;
 652              		.loc 1 473 0
 653 002a 4FF48063 		mov	r3, #1024
 654 002e C5F20603 		movt	r3, 20486
 655 0032 4FF48062 		mov	r2, #1024
 656 0036 C5F20602 		movt	r2, 20486
 657 003a 1268     		ldr	r2, [r2, #0]
 658 003c 22F00802 		bic	r2, r2, #8
 659 0040 1A60     		str	r2, [r3, #0]
 660              	.L17:
 474:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   }
 475:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** }
 661              		.loc 1 475 0
 662 0042 07F10C07 		add	r7, r7, #12
 663 0046 BD46     		mov	sp, r7
 664 0048 80BC     		pop	{r7}
 665 004a 7047     		bx	lr
 666              		.cfi_endproc
 667              	.LFE121:
 669              		.section	.text.HASH_ITConfig,"ax",%progbits
 670              		.align	2
 671              		.global	HASH_ITConfig
 672              		.thumb
 673              		.thumb_func
 675              	HASH_ITConfig:
 676              	.LFB122:
 476:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** /**
 477:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   * @}
 478:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   */
 479:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** 
 480:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** /** @defgroup HASH_Group5 Interrupts and flags management functions
 481:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****  *  @brief   Interrupts and flags management functions
 482:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****  *
 483:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** @verbatim   
 484:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****  ===============================================================================
 485:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****                    Interrupts and flags management functions
 486:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****  ===============================================================================  
 487:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** 
 488:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   This section provides functions allowing to configure the HASH Interrupts and 
 489:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   to get the status and clear flags and Interrupts pending bits.
 490:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   
 491:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   The HASH provides 2 Interrupts sources and 5 Flags:
 492:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   
 493:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   Flags :
 494:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   ---------- 
 495:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****      1. HASH_FLAG_DINIS : set when 16 locations are free in the Data IN FIFO 
 496:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****                           which means that a  new block (512 bit) can be entered 
 497:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****                           into the input buffer.
 498:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****                           
 499:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****      2. HASH_FLAG_DCIS :  set when Digest calculation is complete
 500:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****       
 501:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****      3. HASH_FLAG_DMAS :  set when HASH's DMA interface is enabled (DMAE=1) or 
 502:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****                           a transfer is ongoing.
 503:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****                           This Flag is cleared only by hardware.
 504:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****                            
 505:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****      4. HASH_FLAG_BUSY :  set when The hash core is processing a block of data
 506:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****                           This Flag is cleared only by hardware. 
 507:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****                            
 508:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****      5. HASH_FLAG_DINNE : set when Data IN FIFO is not empty which means that 
 509:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****                           the Data IN FIFO contains at least one word of data.
 510:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****                           This Flag is cleared only by hardware.
 511:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****      
 512:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   Interrupts :
 513:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   ------------
 514:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****     
 515:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****    1. HASH_IT_DINI  : if enabled, this interrupt source is pending when 16 
 516:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****                       locations are free in the Data IN FIFO  which means that 
 517:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****                       a new block (512 bit) can be entered into the input buffer.
 518:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****                       This interrupt source is cleared using 
 519:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****                       HASH_ClearITPendingBit(HASH_IT_DINI) function.
 520:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****    
 521:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****    2. HASH_IT_DCI   : if enabled, this interrupt source is pending when Digest 
 522:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****                       calculation is complete.
 523:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****                       This interrupt source is cleared using 
 524:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****                       HASH_ClearITPendingBit(HASH_IT_DCI) function.
 525:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** 
 526:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   Managing the HASH controller events :
 527:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   ------------------------------------ 
 528:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   The user should identify which mode will be used in his application to manage 
 529:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   the HASH controller events: Polling mode or Interrupt mode.
 530:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   
 531:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   1.  In the Polling Mode it is advised to use the following functions:
 532:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****       - HASH_GetFlagStatus() : to check if flags events occur. 
 533:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****       - HASH_ClearFlag()     : to clear the flags events.
 534:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****     
 535:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   2.  In the Interrupt Mode it is advised to use the following functions:
 536:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****       - HASH_ITConfig()       : to enable or disable the interrupt source.
 537:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****       - HASH_GetITStatus()    : to check if Interrupt occurs.
 538:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****       - HASH_ClearITPendingBit() : to clear the Interrupt pending Bit 
 539:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****                                 (corresponding Flag). 
 540:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** 
 541:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** @endverbatim
 542:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   * @{
 543:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   */ 
 544:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   
 545:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** /**
 546:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   * @brief  Enables or disables the specified HASH interrupts.
 547:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   * @param  HASH_IT: specifies the HASH interrupt source to be enabled or disabled.
 548:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *          This parameter can be any combination of the following values:
 549:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *            @arg HASH_IT_DINI: Data Input interrupt
 550:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *            @arg HASH_IT_DCI: Digest Calculation Completion Interrupt
 551:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   * @param  NewState: new state of the specified HASH interrupt.
 552:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *           This parameter can be: ENABLE or DISABLE.
 553:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   * @retval None
 554:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   */
 555:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** void HASH_ITConfig(uint8_t HASH_IT, FunctionalState NewState)
 556:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** {
 677              		.loc 1 556 0
 678              		.cfi_startproc
 679              		@ args = 0, pretend = 0, frame = 8
 680              		@ frame_needed = 1, uses_anonymous_args = 0
 681              		@ link register save eliminated.
 682 0000 80B4     		push	{r7}
 683              	.LCFI32:
 684              		.cfi_def_cfa_offset 4
 685              		.cfi_offset 7, -4
 686 0002 83B0     		sub	sp, sp, #12
 687              	.LCFI33:
 688              		.cfi_def_cfa_offset 16
 689 0004 00AF     		add	r7, sp, #0
 690              	.LCFI34:
 691              		.cfi_def_cfa_register 7
 692 0006 0246     		mov	r2, r0
 693 0008 0B46     		mov	r3, r1
 694 000a FA71     		strb	r2, [r7, #7]
 695 000c BB71     		strb	r3, [r7, #6]
 557:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   /* Check the parameters */
 558:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   assert_param(IS_HASH_IT(HASH_IT));
 559:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 560:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** 
 561:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   if (NewState != DISABLE)
 696              		.loc 1 561 0
 697 000e BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 698 0010 002B     		cmp	r3, #0
 699 0012 0CD0     		beq	.L21
 562:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   {
 563:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****     /* Enable the selected HASH interrupt */
 564:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****     HASH->IMR |= HASH_IT;
 700              		.loc 1 564 0
 701 0014 4FF48063 		mov	r3, #1024
 702 0018 C5F20603 		movt	r3, 20486
 703 001c 4FF48062 		mov	r2, #1024
 704 0020 C5F20602 		movt	r2, 20486
 705 0024 116A     		ldr	r1, [r2, #32]
 706 0026 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 707 0028 0A43     		orrs	r2, r2, r1
 708 002a 1A62     		str	r2, [r3, #32]
 709 002c 0EE0     		b	.L20
 710              	.L21:
 565:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   }
 566:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   else
 567:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   {
 568:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****     /* Disable the selected HASH interrupt */
 569:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****     HASH->IMR &= (uint8_t) ~HASH_IT;
 711              		.loc 1 569 0
 712 002e 4FF48063 		mov	r3, #1024
 713 0032 C5F20603 		movt	r3, 20486
 714 0036 4FF48062 		mov	r2, #1024
 715 003a C5F20602 		movt	r2, 20486
 716 003e 116A     		ldr	r1, [r2, #32]
 717 0040 FA79     		ldrb	r2, [r7, #7]
 718 0042 6FEA0202 		mvn	r2, r2
 719 0046 D2B2     		uxtb	r2, r2
 720 0048 0A40     		ands	r2, r2, r1
 721 004a 1A62     		str	r2, [r3, #32]
 722              	.L20:
 570:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   }
 571:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** }
 723              		.loc 1 571 0
 724 004c 07F10C07 		add	r7, r7, #12
 725 0050 BD46     		mov	sp, r7
 726 0052 80BC     		pop	{r7}
 727 0054 7047     		bx	lr
 728              		.cfi_endproc
 729              	.LFE122:
 731 0056 00BF     		.section	.text.HASH_GetFlagStatus,"ax",%progbits
 732              		.align	2
 733              		.global	HASH_GetFlagStatus
 734              		.thumb
 735              		.thumb_func
 737              	HASH_GetFlagStatus:
 738              	.LFB123:
 572:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** 
 573:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** /**
 574:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   * @brief  Checks whether the specified HASH flag is set or not.
 575:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   * @param  HASH_FLAG: specifies the HASH flag to check.
 576:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *          This parameter can be one of the following values:
 577:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *            @arg HASH_FLAG_DINIS: Data input interrupt status flag
 578:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *            @arg HASH_FLAG_DCIS: Digest calculation completion interrupt status flag
 579:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *            @arg HASH_FLAG_BUSY: Busy flag
 580:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *            @arg HASH_FLAG_DMAS: DMAS Status flag
 581:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *            @arg HASH_FLAG_DINNE: Data Input register (DIN) not empty status flag
 582:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   * @retval The new state of HASH_FLAG (SET or RESET)
 583:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   */
 584:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** FlagStatus HASH_GetFlagStatus(uint16_t HASH_FLAG)
 585:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** {
 739              		.loc 1 585 0
 740              		.cfi_startproc
 741              		@ args = 0, pretend = 0, frame = 16
 742              		@ frame_needed = 1, uses_anonymous_args = 0
 743              		@ link register save eliminated.
 744 0000 80B4     		push	{r7}
 745              	.LCFI35:
 746              		.cfi_def_cfa_offset 4
 747              		.cfi_offset 7, -4
 748 0002 85B0     		sub	sp, sp, #20
 749              	.LCFI36:
 750              		.cfi_def_cfa_offset 24
 751 0004 00AF     		add	r7, sp, #0
 752              	.LCFI37:
 753              		.cfi_def_cfa_register 7
 754 0006 0346     		mov	r3, r0
 755 0008 FB80     		strh	r3, [r7, #6]	@ movhi
 586:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   FlagStatus bitstatus = RESET;
 756              		.loc 1 586 0
 757 000a 4FF00003 		mov	r3, #0
 758 000e FB73     		strb	r3, [r7, #15]
 587:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   uint32_t tempreg = 0;
 759              		.loc 1 587 0
 760 0010 4FF00003 		mov	r3, #0
 761 0014 BB60     		str	r3, [r7, #8]
 588:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** 
 589:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   /* Check the parameters */
 590:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   assert_param(IS_HASH_GET_FLAG(HASH_FLAG));
 591:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** 
 592:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   /* check if the FLAG is in CR register */
 593:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   if ((HASH_FLAG & HASH_FLAG_DINNE) != (uint16_t)RESET ) 
 762              		.loc 1 593 0
 763 0016 FB88     		ldrh	r3, [r7, #6]
 764 0018 03F48053 		and	r3, r3, #4096
 765 001c 002B     		cmp	r3, #0
 766 001e 06D0     		beq	.L24
 594:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   {
 595:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****     tempreg = HASH->CR;
 767              		.loc 1 595 0
 768 0020 4FF48063 		mov	r3, #1024
 769 0024 C5F20603 		movt	r3, 20486
 770 0028 1B68     		ldr	r3, [r3, #0]
 771 002a BB60     		str	r3, [r7, #8]
 772 002c 05E0     		b	.L25
 773              	.L24:
 596:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   }
 597:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   else /* The FLAG is in SR register */
 598:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   {
 599:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****     tempreg = HASH->SR;
 774              		.loc 1 599 0
 775 002e 4FF48063 		mov	r3, #1024
 776 0032 C5F20603 		movt	r3, 20486
 777 0036 5B6A     		ldr	r3, [r3, #36]
 778 0038 BB60     		str	r3, [r7, #8]
 779              	.L25:
 600:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   }
 601:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** 
 602:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   /* Check the status of the specified HASH flag */
 603:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   if ((tempreg & HASH_FLAG) != (uint16_t)RESET)
 780              		.loc 1 603 0
 781 003a FA88     		ldrh	r2, [r7, #6]
 782 003c BB68     		ldr	r3, [r7, #8]
 783 003e 1340     		ands	r3, r3, r2
 784 0040 002B     		cmp	r3, #0
 785 0042 03D0     		beq	.L26
 604:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   {
 605:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****     /* HASH is set */
 606:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****     bitstatus = SET;
 786              		.loc 1 606 0
 787 0044 4FF00103 		mov	r3, #1
 788 0048 FB73     		strb	r3, [r7, #15]
 789 004a 02E0     		b	.L27
 790              	.L26:
 607:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   }
 608:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   else
 609:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   {
 610:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****     /* HASH_FLAG is reset */
 611:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****     bitstatus = RESET;
 791              		.loc 1 611 0
 792 004c 4FF00003 		mov	r3, #0
 793 0050 FB73     		strb	r3, [r7, #15]
 794              	.L27:
 612:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   }
 613:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** 
 614:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   /* Return the HASH_FLAG status */
 615:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   return  bitstatus;
 795              		.loc 1 615 0
 796 0052 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 616:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** }
 797              		.loc 1 616 0
 798 0054 1846     		mov	r0, r3
 799 0056 07F11407 		add	r7, r7, #20
 800 005a BD46     		mov	sp, r7
 801 005c 80BC     		pop	{r7}
 802 005e 7047     		bx	lr
 803              		.cfi_endproc
 804              	.LFE123:
 806              		.section	.text.HASH_ClearFlag,"ax",%progbits
 807              		.align	2
 808              		.global	HASH_ClearFlag
 809              		.thumb
 810              		.thumb_func
 812              	HASH_ClearFlag:
 813              	.LFB124:
 617:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** /**
 618:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   * @brief  Clears the HASH flags.
 619:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   * @param  HASH_FLAG: specifies the flag to clear. 
 620:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *          This parameter can be any combination of the following values:
 621:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *            @arg HASH_FLAG_DINIS: Data Input Flag
 622:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *            @arg HASH_FLAG_DCIS: Digest Calculation Completion Flag                       
 623:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   * @retval None
 624:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   */
 625:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** void HASH_ClearFlag(uint16_t HASH_FLAG)
 626:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** {
 814              		.loc 1 626 0
 815              		.cfi_startproc
 816              		@ args = 0, pretend = 0, frame = 8
 817              		@ frame_needed = 1, uses_anonymous_args = 0
 818              		@ link register save eliminated.
 819 0000 80B4     		push	{r7}
 820              	.LCFI38:
 821              		.cfi_def_cfa_offset 4
 822              		.cfi_offset 7, -4
 823 0002 83B0     		sub	sp, sp, #12
 824              	.LCFI39:
 825              		.cfi_def_cfa_offset 16
 826 0004 00AF     		add	r7, sp, #0
 827              	.LCFI40:
 828              		.cfi_def_cfa_register 7
 829 0006 0346     		mov	r3, r0
 830 0008 FB80     		strh	r3, [r7, #6]	@ movhi
 627:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   /* Check the parameters */
 628:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   assert_param(IS_HASH_CLEAR_FLAG(HASH_FLAG));
 629:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   
 630:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   /* Clear the selected HASH flags */
 631:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   HASH->SR = ~(uint32_t)HASH_FLAG;
 831              		.loc 1 631 0
 832 000a 4FF48063 		mov	r3, #1024
 833 000e C5F20603 		movt	r3, 20486
 834 0012 FA88     		ldrh	r2, [r7, #6]
 835 0014 6FEA0202 		mvn	r2, r2
 836 0018 5A62     		str	r2, [r3, #36]
 632:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** }
 837              		.loc 1 632 0
 838 001a 07F10C07 		add	r7, r7, #12
 839 001e BD46     		mov	sp, r7
 840 0020 80BC     		pop	{r7}
 841 0022 7047     		bx	lr
 842              		.cfi_endproc
 843              	.LFE124:
 845              		.section	.text.HASH_GetITStatus,"ax",%progbits
 846              		.align	2
 847              		.global	HASH_GetITStatus
 848              		.thumb
 849              		.thumb_func
 851              	HASH_GetITStatus:
 852              	.LFB125:
 633:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** /**
 634:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   * @brief  Checks whether the specified HASH interrupt has occurred or not.
 635:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   * @param  HASH_IT: specifies the HASH interrupt source to check.
 636:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *          This parameter can be one of the following values:
 637:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *            @arg HASH_IT_DINI: Data Input interrupt
 638:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *            @arg HASH_IT_DCI: Digest Calculation Completion Interrupt
 639:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   * @retval The new state of HASH_IT (SET or RESET).
 640:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   */
 641:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** ITStatus HASH_GetITStatus(uint8_t HASH_IT)
 642:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** {
 853              		.loc 1 642 0
 854              		.cfi_startproc
 855              		@ args = 0, pretend = 0, frame = 16
 856              		@ frame_needed = 1, uses_anonymous_args = 0
 857              		@ link register save eliminated.
 858 0000 80B4     		push	{r7}
 859              	.LCFI41:
 860              		.cfi_def_cfa_offset 4
 861              		.cfi_offset 7, -4
 862 0002 85B0     		sub	sp, sp, #20
 863              	.LCFI42:
 864              		.cfi_def_cfa_offset 24
 865 0004 00AF     		add	r7, sp, #0
 866              	.LCFI43:
 867              		.cfi_def_cfa_register 7
 868 0006 0346     		mov	r3, r0
 869 0008 FB71     		strb	r3, [r7, #7]
 643:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   ITStatus bitstatus = RESET;
 870              		.loc 1 643 0
 871 000a 4FF00003 		mov	r3, #0
 872 000e FB73     		strb	r3, [r7, #15]
 644:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   uint32_t tmpreg = 0;
 873              		.loc 1 644 0
 874 0010 4FF00003 		mov	r3, #0
 875 0014 BB60     		str	r3, [r7, #8]
 645:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** 
 646:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   /* Check the parameters */
 647:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   assert_param(IS_HASH_GET_IT(HASH_IT));  
 648:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** 
 649:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** 
 650:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   /* Check the status of the specified HASH interrupt */
 651:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   tmpreg =  HASH->SR;
 876              		.loc 1 651 0
 877 0016 4FF48063 		mov	r3, #1024
 878 001a C5F20603 		movt	r3, 20486
 879 001e 5B6A     		ldr	r3, [r3, #36]
 880 0020 BB60     		str	r3, [r7, #8]
 652:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** 
 653:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   if (((HASH->IMR & tmpreg) & HASH_IT) != RESET)
 881              		.loc 1 653 0
 882 0022 4FF48063 		mov	r3, #1024
 883 0026 C5F20603 		movt	r3, 20486
 884 002a 1A6A     		ldr	r2, [r3, #32]
 885 002c BB68     		ldr	r3, [r7, #8]
 886 002e 1A40     		ands	r2, r2, r3
 887 0030 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 888 0032 1340     		ands	r3, r3, r2
 889 0034 002B     		cmp	r3, #0
 890 0036 03D0     		beq	.L30
 654:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   {
 655:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****     /* HASH_IT is set */
 656:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****     bitstatus = SET;
 891              		.loc 1 656 0
 892 0038 4FF00103 		mov	r3, #1
 893 003c FB73     		strb	r3, [r7, #15]
 894 003e 02E0     		b	.L31
 895              	.L30:
 657:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   }
 658:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   else
 659:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   {
 660:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****     /* HASH_IT is reset */
 661:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****     bitstatus = RESET;
 896              		.loc 1 661 0
 897 0040 4FF00003 		mov	r3, #0
 898 0044 FB73     		strb	r3, [r7, #15]
 899              	.L31:
 662:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   }
 663:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   /* Return the HASH_IT status */
 664:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   return bitstatus;
 900              		.loc 1 664 0
 901 0046 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 665:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** }
 902              		.loc 1 665 0
 903 0048 1846     		mov	r0, r3
 904 004a 07F11407 		add	r7, r7, #20
 905 004e BD46     		mov	sp, r7
 906 0050 80BC     		pop	{r7}
 907 0052 7047     		bx	lr
 908              		.cfi_endproc
 909              	.LFE125:
 911              		.section	.text.HASH_ClearITPendingBit,"ax",%progbits
 912              		.align	2
 913              		.global	HASH_ClearITPendingBit
 914              		.thumb
 915              		.thumb_func
 917              	HASH_ClearITPendingBit:
 918              	.LFB126:
 666:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** 
 667:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** /**
 668:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   * @brief  Clears the HASH interrupt pending bit(s).
 669:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   * @param  HASH_IT: specifies the HASH interrupt pending bit(s) to clear.
 670:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *          This parameter can be any combination of the following values:
 671:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *            @arg HASH_IT_DINI: Data Input interrupt
 672:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *            @arg HASH_IT_DCI: Digest Calculation Completion Interrupt
 673:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   * @retval None
 674:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   */
 675:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** void HASH_ClearITPendingBit(uint8_t HASH_IT)
 676:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** {
 919              		.loc 1 676 0
 920              		.cfi_startproc
 921              		@ args = 0, pretend = 0, frame = 8
 922              		@ frame_needed = 1, uses_anonymous_args = 0
 923              		@ link register save eliminated.
 924 0000 80B4     		push	{r7}
 925              	.LCFI44:
 926              		.cfi_def_cfa_offset 4
 927              		.cfi_offset 7, -4
 928 0002 83B0     		sub	sp, sp, #12
 929              	.LCFI45:
 930              		.cfi_def_cfa_offset 16
 931 0004 00AF     		add	r7, sp, #0
 932              	.LCFI46:
 933              		.cfi_def_cfa_register 7
 934 0006 0346     		mov	r3, r0
 935 0008 FB71     		strb	r3, [r7, #7]
 677:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   /* Check the parameters */
 678:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   assert_param(IS_HASH_IT(HASH_IT));
 679:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** 
 680:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   /* Clear the selected HASH interrupt pending bit */
 681:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   HASH->SR = (uint8_t)~HASH_IT;
 936              		.loc 1 681 0
 937 000a 4FF48063 		mov	r3, #1024
 938 000e C5F20603 		movt	r3, 20486
 939 0012 FA79     		ldrb	r2, [r7, #7]
 940 0014 6FEA0202 		mvn	r2, r2
 941 0018 D2B2     		uxtb	r2, r2
 942 001a 5A62     		str	r2, [r3, #36]
 682:../Libraries/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** }
 943              		.loc 1 682 0
 944 001c 07F10C07 		add	r7, r7, #12
 945 0020 BD46     		mov	sp, r7
 946 0022 80BC     		pop	{r7}
 947 0024 7047     		bx	lr
 948              		.cfi_endproc
 949              	.LFE126:
 951 0026 00BF     		.text
 952              	.Letext0:
 953              		.file 2 "c:\\program files (x86)\\codesourcery\\sourcery_codebench_lite_for_arm_eabi\\bin\\../lib/
 954              		.file 3 "C:\\Users\\Anthony.Paterson@opus.co\\Documents\\git\\blink\\blink\\Device\\STM32F4xx\\Inc
 955              		.file 4 "C:\\Users\\Anthony.Paterson@opus.co\\Documents\\git\\blink\\blink\\Libraries\\STM32F4xx_S
 956              		.file 5 "C:\\Users\\Anthony.Paterson@opus.co\\Documents\\git\\blink\\blink\\Libraries\\CMSIS\\Incl
DEFINED SYMBOLS
                            *ABS*:00000000 stm32f4xx_hash.c
C:\Users\ANTHON~1.CO\AppData\Local\Temp\cczWyBTv.s:19     .text.HASH_DeInit:00000000 $t
C:\Users\ANTHON~1.CO\AppData\Local\Temp\cczWyBTv.s:24     .text.HASH_DeInit:00000000 HASH_DeInit
C:\Users\ANTHON~1.CO\AppData\Local\Temp\cczWyBTv.s:53     .text.HASH_Init:00000000 $t
C:\Users\ANTHON~1.CO\AppData\Local\Temp\cczWyBTv.s:58     .text.HASH_Init:00000000 HASH_Init
C:\Users\ANTHON~1.CO\AppData\Local\Temp\cczWyBTv.s:146    .text.HASH_StructInit:00000000 $t
C:\Users\ANTHON~1.CO\AppData\Local\Temp\cczWyBTv.s:151    .text.HASH_StructInit:00000000 HASH_StructInit
C:\Users\ANTHON~1.CO\AppData\Local\Temp\cczWyBTv.s:194    .text.HASH_Reset:00000000 $t
C:\Users\ANTHON~1.CO\AppData\Local\Temp\cczWyBTv.s:199    .text.HASH_Reset:00000000 HASH_Reset
C:\Users\ANTHON~1.CO\AppData\Local\Temp\cczWyBTv.s:229    .text.HASH_SetLastWordValidBitsNbr:00000000 $t
C:\Users\ANTHON~1.CO\AppData\Local\Temp\cczWyBTv.s:234    .text.HASH_SetLastWordValidBitsNbr:00000000 HASH_SetLastWordValidBitsNbr
C:\Users\ANTHON~1.CO\AppData\Local\Temp\cczWyBTv.s:279    .text.HASH_DataIn:00000000 $t
C:\Users\ANTHON~1.CO\AppData\Local\Temp\cczWyBTv.s:284    .text.HASH_DataIn:00000000 HASH_DataIn
C:\Users\ANTHON~1.CO\AppData\Local\Temp\cczWyBTv.s:316    .text.HASH_GetInFIFOWordsNbr:00000000 $t
C:\Users\ANTHON~1.CO\AppData\Local\Temp\cczWyBTv.s:321    .text.HASH_GetInFIFOWordsNbr:00000000 HASH_GetInFIFOWordsNbr
C:\Users\ANTHON~1.CO\AppData\Local\Temp\cczWyBTv.s:351    .text.HASH_GetDigest:00000000 $t
C:\Users\ANTHON~1.CO\AppData\Local\Temp\cczWyBTv.s:356    .text.HASH_GetDigest:00000000 HASH_GetDigest
C:\Users\ANTHON~1.CO\AppData\Local\Temp\cczWyBTv.s:413    .text.HASH_StartDigest:00000000 $t
C:\Users\ANTHON~1.CO\AppData\Local\Temp\cczWyBTv.s:418    .text.HASH_StartDigest:00000000 HASH_StartDigest
C:\Users\ANTHON~1.CO\AppData\Local\Temp\cczWyBTv.s:448    .text.HASH_SaveContext:00000000 $t
C:\Users\ANTHON~1.CO\AppData\Local\Temp\cczWyBTv.s:453    .text.HASH_SaveContext:00000000 HASH_SaveContext
C:\Users\ANTHON~1.CO\AppData\Local\Temp\cczWyBTv.s:527    .text.HASH_RestoreContext:00000000 $t
C:\Users\ANTHON~1.CO\AppData\Local\Temp\cczWyBTv.s:532    .text.HASH_RestoreContext:00000000 HASH_RestoreContext
C:\Users\ANTHON~1.CO\AppData\Local\Temp\cczWyBTv.s:614    .text.HASH_DMACmd:00000000 $t
C:\Users\ANTHON~1.CO\AppData\Local\Temp\cczWyBTv.s:619    .text.HASH_DMACmd:00000000 HASH_DMACmd
C:\Users\ANTHON~1.CO\AppData\Local\Temp\cczWyBTv.s:670    .text.HASH_ITConfig:00000000 $t
C:\Users\ANTHON~1.CO\AppData\Local\Temp\cczWyBTv.s:675    .text.HASH_ITConfig:00000000 HASH_ITConfig
C:\Users\ANTHON~1.CO\AppData\Local\Temp\cczWyBTv.s:732    .text.HASH_GetFlagStatus:00000000 $t
C:\Users\ANTHON~1.CO\AppData\Local\Temp\cczWyBTv.s:737    .text.HASH_GetFlagStatus:00000000 HASH_GetFlagStatus
C:\Users\ANTHON~1.CO\AppData\Local\Temp\cczWyBTv.s:807    .text.HASH_ClearFlag:00000000 $t
C:\Users\ANTHON~1.CO\AppData\Local\Temp\cczWyBTv.s:812    .text.HASH_ClearFlag:00000000 HASH_ClearFlag
C:\Users\ANTHON~1.CO\AppData\Local\Temp\cczWyBTv.s:846    .text.HASH_GetITStatus:00000000 $t
C:\Users\ANTHON~1.CO\AppData\Local\Temp\cczWyBTv.s:851    .text.HASH_GetITStatus:00000000 HASH_GetITStatus
C:\Users\ANTHON~1.CO\AppData\Local\Temp\cczWyBTv.s:912    .text.HASH_ClearITPendingBit:00000000 $t
C:\Users\ANTHON~1.CO\AppData\Local\Temp\cczWyBTv.s:917    .text.HASH_ClearITPendingBit:00000000 HASH_ClearITPendingBit
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
RCC_AHB2PeriphResetCmd
