   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"usbd_desc.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.global	USR_desc
  19              		.section	.data.USR_desc,"aw",%progbits
  20              		.align	2
  23              	USR_desc:
  24 0000 00000000 		.word	USBD_USR_DeviceDescriptor
  25 0004 00000000 		.word	USBD_USR_LangIDStrDescriptor
  26 0008 00000000 		.word	USBD_USR_ManufacturerStrDescriptor
  27 000c 00000000 		.word	USBD_USR_ProductStrDescriptor
  28 0010 00000000 		.word	USBD_USR_SerialStrDescriptor
  29 0014 00000000 		.word	USBD_USR_ConfigStrDescriptor
  30 0018 00000000 		.word	USBD_USR_InterfaceStrDescriptor
  31              		.global	USBD_DeviceDesc
  32              		.section	.data.USBD_DeviceDesc,"aw",%progbits
  33              		.align	2
  36              	USBD_DeviceDesc:
  37 0000 12       		.byte	18
  38 0001 01       		.byte	1
  39 0002 00       		.byte	0
  40 0003 02       		.byte	2
  41 0004 00       		.byte	0
  42 0005 00       		.byte	0
  43 0006 00       		.byte	0
  44 0007 40       		.byte	64
  45 0008 83       		.byte	-125
  46 0009 04       		.byte	4
  47 000a 10       		.byte	16
  48 000b 57       		.byte	87
  49 000c 00       		.byte	0
  50 000d 02       		.byte	2
  51 000e 01       		.byte	1
  52 000f 02       		.byte	2
  53 0010 03       		.byte	3
  54 0011 01       		.byte	1
  55              		.global	USBD_DeviceQualifierDesc
  56 0012 0000     		.section	.data.USBD_DeviceQualifierDesc,"aw",%progbits
  57              		.align	2
  60              	USBD_DeviceQualifierDesc:
  61 0000 0A       		.byte	10
  62 0001 06       		.byte	6
  63 0002 00       		.byte	0
  64 0003 02       		.byte	2
  65 0004 00       		.byte	0
  66 0005 00       		.byte	0
  67 0006 00       		.byte	0
  68 0007 40       		.byte	64
  69 0008 01       		.byte	1
  70 0009 00       		.byte	0
  71              		.global	USBD_LangIDDesc
  72 000a 0000     		.section	.data.USBD_LangIDDesc,"aw",%progbits
  73              		.align	2
  76              	USBD_LangIDDesc:
  77 0000 04       		.byte	4
  78 0001 03       		.byte	3
  79 0002 09       		.byte	9
  80 0003 04       		.byte	4
  81              		.section	.text.USBD_USR_DeviceDescriptor,"ax",%progbits
  82              		.align	2
  83              		.global	USBD_USR_DeviceDescriptor
  84              		.thumb
  85              		.thumb_func
  87              	USBD_USR_DeviceDescriptor:
  88              	.LFB110:
  89              		.file 1 "../src/usbd_desc.c"
   1:../src/usbd_desc.c **** /**
   2:../src/usbd_desc.c ****   ******************************************************************************
   3:../src/usbd_desc.c ****   * @file    usbd_desc.c
   4:../src/usbd_desc.c ****   * @author  MCD Application Team
   5:../src/usbd_desc.c ****   * @version V1.0.0
   6:../src/usbd_desc.c ****   * @date    19-September-2011
   7:../src/usbd_desc.c ****   * @brief   This file provides the USBD descriptors and string formating method.
   8:../src/usbd_desc.c ****   ******************************************************************************
   9:../src/usbd_desc.c ****   * @attention
  10:../src/usbd_desc.c ****   *
  11:../src/usbd_desc.c ****   * THE PRESENT FIRMWARE WHICH IS FOR GUIDANCE ONLY AIMS AT PROVIDING CUSTOMERS
  12:../src/usbd_desc.c ****   * WITH CODING INFORMATION REGARDING THEIR PRODUCTS IN ORDER FOR THEM TO SAVE
  13:../src/usbd_desc.c ****   * TIME. AS A RESULT, STMICROELECTRONICS SHALL NOT BE HELD LIABLE FOR ANY
  14:../src/usbd_desc.c ****   * DIRECT, INDIRECT OR CONSEQUENTIAL DAMAGES WITH RESPECT TO ANY CLAIMS ARISING
  15:../src/usbd_desc.c ****   * FROM THE CONTENT OF SUCH FIRMWARE AND/OR THE USE MADE BY CUSTOMERS OF THE
  16:../src/usbd_desc.c ****   * CODING INFORMATION CONTAINED HEREIN IN CONNECTION WITH THEIR PRODUCTS.
  17:../src/usbd_desc.c ****   *
  18:../src/usbd_desc.c ****   * <h2><center>&copy; COPYRIGHT 2011 STMicroelectronics</center></h2>
  19:../src/usbd_desc.c ****   ******************************************************************************
  20:../src/usbd_desc.c ****   */ 
  21:../src/usbd_desc.c **** 
  22:../src/usbd_desc.c **** /* Includes ------------------------------------------------------------------*/
  23:../src/usbd_desc.c **** #include "usbd_core.h"
  24:../src/usbd_desc.c **** #include "usbd_desc.h"
  25:../src/usbd_desc.c **** #include "usbd_req.h"
  26:../src/usbd_desc.c **** #include "usbd_conf.h"
  27:../src/usbd_desc.c **** #include "usb_regs.h"
  28:../src/usbd_desc.c **** 
  29:../src/usbd_desc.c **** /** @addtogroup STM32_USB_OTG_DEVICE_LIBRARY
  30:../src/usbd_desc.c ****   * @{
  31:../src/usbd_desc.c ****   */
  32:../src/usbd_desc.c **** 
  33:../src/usbd_desc.c **** 
  34:../src/usbd_desc.c **** /** @defgroup USBD_DESC 
  35:../src/usbd_desc.c ****   * @brief USBD descriptors module
  36:../src/usbd_desc.c ****   * @{
  37:../src/usbd_desc.c ****   */ 
  38:../src/usbd_desc.c **** 
  39:../src/usbd_desc.c **** /** @defgroup USBD_DESC_Private_TypesDefinitions
  40:../src/usbd_desc.c ****   * @{
  41:../src/usbd_desc.c ****   */ 
  42:../src/usbd_desc.c **** /**
  43:../src/usbd_desc.c ****   * @}
  44:../src/usbd_desc.c ****   */ 
  45:../src/usbd_desc.c **** 
  46:../src/usbd_desc.c **** 
  47:../src/usbd_desc.c **** /** @defgroup USBD_DESC_Private_Defines
  48:../src/usbd_desc.c ****   * @{
  49:../src/usbd_desc.c ****   */ 
  50:../src/usbd_desc.c **** 
  51:../src/usbd_desc.c **** #define USBD_VID                     0x0483
  52:../src/usbd_desc.c **** #define USBD_PID                     0x5710
  53:../src/usbd_desc.c **** 
  54:../src/usbd_desc.c **** #define USBD_LANGID_STRING            0x409
  55:../src/usbd_desc.c **** #define USBD_MANUFACTURER_STRING      "STMicroelectronics"
  56:../src/usbd_desc.c **** 
  57:../src/usbd_desc.c **** #define USBD_PRODUCT_HS_STRING        "Joystick in HS mode"
  58:../src/usbd_desc.c **** #define USBD_SERIALNUMBER_HS_STRING   "00000000011B"
  59:../src/usbd_desc.c **** 
  60:../src/usbd_desc.c **** #define USBD_PRODUCT_FS_STRING        "Joystick in FS Mode"
  61:../src/usbd_desc.c **** #define USBD_SERIALNUMBER_FS_STRING   "00000000011C"
  62:../src/usbd_desc.c **** 
  63:../src/usbd_desc.c **** #define USBD_CONFIGURATION_HS_STRING  "HID Config"
  64:../src/usbd_desc.c **** #define USBD_INTERFACE_HS_STRING      "HID Interface"
  65:../src/usbd_desc.c **** 
  66:../src/usbd_desc.c **** #define USBD_CONFIGURATION_FS_STRING  "HID Config"
  67:../src/usbd_desc.c **** #define USBD_INTERFACE_FS_STRING      "HID Interface"
  68:../src/usbd_desc.c **** /**
  69:../src/usbd_desc.c ****   * @}
  70:../src/usbd_desc.c ****   */ 
  71:../src/usbd_desc.c **** 
  72:../src/usbd_desc.c **** 
  73:../src/usbd_desc.c **** /** @defgroup USBD_DESC_Private_Macros
  74:../src/usbd_desc.c ****   * @{
  75:../src/usbd_desc.c ****   */ 
  76:../src/usbd_desc.c **** /**
  77:../src/usbd_desc.c ****   * @}
  78:../src/usbd_desc.c ****   */ 
  79:../src/usbd_desc.c **** 
  80:../src/usbd_desc.c **** 
  81:../src/usbd_desc.c **** /** @defgroup USBD_DESC_Private_Variables
  82:../src/usbd_desc.c ****   * @{
  83:../src/usbd_desc.c ****   */ 
  84:../src/usbd_desc.c **** 
  85:../src/usbd_desc.c **** USBD_DEVICE USR_desc =
  86:../src/usbd_desc.c **** {
  87:../src/usbd_desc.c ****   USBD_USR_DeviceDescriptor,
  88:../src/usbd_desc.c ****   USBD_USR_LangIDStrDescriptor, 
  89:../src/usbd_desc.c ****   USBD_USR_ManufacturerStrDescriptor,
  90:../src/usbd_desc.c ****   USBD_USR_ProductStrDescriptor,
  91:../src/usbd_desc.c ****   USBD_USR_SerialStrDescriptor,
  92:../src/usbd_desc.c ****   USBD_USR_ConfigStrDescriptor,
  93:../src/usbd_desc.c ****   USBD_USR_InterfaceStrDescriptor,
  94:../src/usbd_desc.c ****   
  95:../src/usbd_desc.c **** };
  96:../src/usbd_desc.c **** 
  97:../src/usbd_desc.c **** #ifdef USB_OTG_HS_INTERNAL_DMA_ENABLED
  98:../src/usbd_desc.c ****   #if defined ( __ICCARM__ ) /*!< IAR Compiler */
  99:../src/usbd_desc.c ****     #pragma data_alignment=4   
 100:../src/usbd_desc.c ****   #endif
 101:../src/usbd_desc.c **** #endif /* USB_OTG_HS_INTERNAL_DMA_ENABLED */
 102:../src/usbd_desc.c **** /* USB Standard Device Descriptor */
 103:../src/usbd_desc.c **** __ALIGN_BEGIN uint8_t USBD_DeviceDesc[USB_SIZ_DEVICE_DESC] __ALIGN_END =
 104:../src/usbd_desc.c ****   {
 105:../src/usbd_desc.c ****     0x12,                       /*bLength */
 106:../src/usbd_desc.c ****     USB_DEVICE_DESCRIPTOR_TYPE, /*bDescriptorType*/
 107:../src/usbd_desc.c ****     0x00,                       /*bcdUSB */
 108:../src/usbd_desc.c ****     0x02,
 109:../src/usbd_desc.c ****     0x00,                       /*bDeviceClass*/
 110:../src/usbd_desc.c ****     0x00,                       /*bDeviceSubClass*/
 111:../src/usbd_desc.c ****     0x00,                       /*bDeviceProtocol*/
 112:../src/usbd_desc.c ****     USB_OTG_MAX_EP0_SIZE,      /*bMaxPacketSize*/
 113:../src/usbd_desc.c ****     LOBYTE(USBD_VID),           /*idVendor*/
 114:../src/usbd_desc.c ****     HIBYTE(USBD_VID),           /*idVendor*/
 115:../src/usbd_desc.c ****     LOBYTE(USBD_PID),           /*idVendor*/
 116:../src/usbd_desc.c ****     HIBYTE(USBD_PID),           /*idVendor*/
 117:../src/usbd_desc.c ****     0x00,                       /*bcdDevice rel. 2.00*/
 118:../src/usbd_desc.c ****     0x02,
 119:../src/usbd_desc.c ****     USBD_IDX_MFC_STR,           /*Index of manufacturer  string*/
 120:../src/usbd_desc.c ****     USBD_IDX_PRODUCT_STR,       /*Index of product string*/
 121:../src/usbd_desc.c ****     USBD_IDX_SERIAL_STR,        /*Index of serial number string*/
 122:../src/usbd_desc.c ****     USBD_CFG_MAX_NUM            /*bNumConfigurations*/
 123:../src/usbd_desc.c ****   } ; /* USB_DeviceDescriptor */
 124:../src/usbd_desc.c **** 
 125:../src/usbd_desc.c **** #ifdef USB_OTG_HS_INTERNAL_DMA_ENABLED
 126:../src/usbd_desc.c ****   #if defined ( __ICCARM__ ) /*!< IAR Compiler */
 127:../src/usbd_desc.c ****     #pragma data_alignment=4   
 128:../src/usbd_desc.c ****   #endif
 129:../src/usbd_desc.c **** #endif /* USB_OTG_HS_INTERNAL_DMA_ENABLED */
 130:../src/usbd_desc.c **** /* USB Standard Device Descriptor */
 131:../src/usbd_desc.c **** __ALIGN_BEGIN uint8_t USBD_DeviceQualifierDesc[USB_LEN_DEV_QUALIFIER_DESC] __ALIGN_END =
 132:../src/usbd_desc.c **** {
 133:../src/usbd_desc.c ****   USB_LEN_DEV_QUALIFIER_DESC,
 134:../src/usbd_desc.c ****   USB_DESC_TYPE_DEVICE_QUALIFIER,
 135:../src/usbd_desc.c ****   0x00,
 136:../src/usbd_desc.c ****   0x02,
 137:../src/usbd_desc.c ****   0x00,
 138:../src/usbd_desc.c ****   0x00,
 139:../src/usbd_desc.c ****   0x00,
 140:../src/usbd_desc.c ****   0x40,
 141:../src/usbd_desc.c ****   0x01,
 142:../src/usbd_desc.c ****   0x00,
 143:../src/usbd_desc.c **** };
 144:../src/usbd_desc.c **** 
 145:../src/usbd_desc.c **** #ifdef USB_OTG_HS_INTERNAL_DMA_ENABLED
 146:../src/usbd_desc.c ****   #if defined ( __ICCARM__ ) /*!< IAR Compiler */
 147:../src/usbd_desc.c ****     #pragma data_alignment=4   
 148:../src/usbd_desc.c ****   #endif
 149:../src/usbd_desc.c **** #endif /* USB_OTG_HS_INTERNAL_DMA_ENABLED */
 150:../src/usbd_desc.c **** /* USB Standard Device Descriptor */
 151:../src/usbd_desc.c **** __ALIGN_BEGIN uint8_t USBD_LangIDDesc[USB_SIZ_STRING_LANGID] __ALIGN_END =
 152:../src/usbd_desc.c **** {
 153:../src/usbd_desc.c ****      USB_SIZ_STRING_LANGID,         
 154:../src/usbd_desc.c ****      USB_DESC_TYPE_STRING,       
 155:../src/usbd_desc.c ****      LOBYTE(USBD_LANGID_STRING),
 156:../src/usbd_desc.c ****      HIBYTE(USBD_LANGID_STRING), 
 157:../src/usbd_desc.c **** };
 158:../src/usbd_desc.c **** /**
 159:../src/usbd_desc.c ****   * @}
 160:../src/usbd_desc.c ****   */ 
 161:../src/usbd_desc.c **** 
 162:../src/usbd_desc.c **** 
 163:../src/usbd_desc.c **** /** @defgroup USBD_DESC_Private_FunctionPrototypes
 164:../src/usbd_desc.c ****   * @{
 165:../src/usbd_desc.c ****   */ 
 166:../src/usbd_desc.c **** /**
 167:../src/usbd_desc.c ****   * @}
 168:../src/usbd_desc.c ****   */ 
 169:../src/usbd_desc.c **** 
 170:../src/usbd_desc.c **** 
 171:../src/usbd_desc.c **** /** @defgroup USBD_DESC_Private_Functions
 172:../src/usbd_desc.c ****   * @{
 173:../src/usbd_desc.c ****   */ 
 174:../src/usbd_desc.c **** 
 175:../src/usbd_desc.c **** /**
 176:../src/usbd_desc.c **** * @brief  USBD_USR_DeviceDescriptor 
 177:../src/usbd_desc.c **** *         return the device descriptor
 178:../src/usbd_desc.c **** * @param  speed : current device speed
 179:../src/usbd_desc.c **** * @param  length : pointer to data length variable
 180:../src/usbd_desc.c **** * @retval pointer to descriptor buffer
 181:../src/usbd_desc.c **** */
 182:../src/usbd_desc.c **** uint8_t *  USBD_USR_DeviceDescriptor( uint8_t speed , uint16_t *length)
 183:../src/usbd_desc.c **** {
  90              		.loc 1 183 0
  91              		.cfi_startproc
  92              		@ args = 0, pretend = 0, frame = 8
  93              		@ frame_needed = 1, uses_anonymous_args = 0
  94              		@ link register save eliminated.
  95 0000 80B4     		push	{r7}
  96              	.LCFI0:
  97              		.cfi_def_cfa_offset 4
  98              		.cfi_offset 7, -4
  99 0002 83B0     		sub	sp, sp, #12
 100              	.LCFI1:
 101              		.cfi_def_cfa_offset 16
 102 0004 00AF     		add	r7, sp, #0
 103              	.LCFI2:
 104              		.cfi_def_cfa_register 7
 105 0006 0346     		mov	r3, r0
 106 0008 3960     		str	r1, [r7, #0]
 107 000a FB71     		strb	r3, [r7, #7]
 184:../src/usbd_desc.c ****   *length = sizeof(USBD_DeviceDesc);
 108              		.loc 1 184 0
 109 000c 3B68     		ldr	r3, [r7, #0]
 110 000e 4FF01202 		mov	r2, #18
 111 0012 1A80     		strh	r2, [r3, #0]	@ movhi
 185:../src/usbd_desc.c ****   return USBD_DeviceDesc;
 112              		.loc 1 185 0
 113 0014 40F20003 		movw	r3, #:lower16:USBD_DeviceDesc
 114 0018 C0F20003 		movt	r3, #:upper16:USBD_DeviceDesc
 186:../src/usbd_desc.c **** }
 115              		.loc 1 186 0
 116 001c 1846     		mov	r0, r3
 117 001e 07F10C07 		add	r7, r7, #12
 118 0022 BD46     		mov	sp, r7
 119 0024 80BC     		pop	{r7}
 120 0026 7047     		bx	lr
 121              		.cfi_endproc
 122              	.LFE110:
 124              		.section	.text.USBD_USR_LangIDStrDescriptor,"ax",%progbits
 125              		.align	2
 126              		.global	USBD_USR_LangIDStrDescriptor
 127              		.thumb
 128              		.thumb_func
 130              	USBD_USR_LangIDStrDescriptor:
 131              	.LFB111:
 187:../src/usbd_desc.c **** 
 188:../src/usbd_desc.c **** /**
 189:../src/usbd_desc.c **** * @brief  USBD_USR_LangIDStrDescriptor 
 190:../src/usbd_desc.c **** *         return the LangID string descriptor
 191:../src/usbd_desc.c **** * @param  speed : current device speed
 192:../src/usbd_desc.c **** * @param  length : pointer to data length variable
 193:../src/usbd_desc.c **** * @retval pointer to descriptor buffer
 194:../src/usbd_desc.c **** */
 195:../src/usbd_desc.c **** uint8_t *  USBD_USR_LangIDStrDescriptor( uint8_t speed , uint16_t *length)
 196:../src/usbd_desc.c **** {
 132              		.loc 1 196 0
 133              		.cfi_startproc
 134              		@ args = 0, pretend = 0, frame = 8
 135              		@ frame_needed = 1, uses_anonymous_args = 0
 136              		@ link register save eliminated.
 137 0000 80B4     		push	{r7}
 138              	.LCFI3:
 139              		.cfi_def_cfa_offset 4
 140              		.cfi_offset 7, -4
 141 0002 83B0     		sub	sp, sp, #12
 142              	.LCFI4:
 143              		.cfi_def_cfa_offset 16
 144 0004 00AF     		add	r7, sp, #0
 145              	.LCFI5:
 146              		.cfi_def_cfa_register 7
 147 0006 0346     		mov	r3, r0
 148 0008 3960     		str	r1, [r7, #0]
 149 000a FB71     		strb	r3, [r7, #7]
 197:../src/usbd_desc.c ****   *length =  sizeof(USBD_LangIDDesc);  
 150              		.loc 1 197 0
 151 000c 3B68     		ldr	r3, [r7, #0]
 152 000e 4FF00402 		mov	r2, #4
 153 0012 1A80     		strh	r2, [r3, #0]	@ movhi
 198:../src/usbd_desc.c ****   return USBD_LangIDDesc;
 154              		.loc 1 198 0
 155 0014 40F20003 		movw	r3, #:lower16:USBD_LangIDDesc
 156 0018 C0F20003 		movt	r3, #:upper16:USBD_LangIDDesc
 199:../src/usbd_desc.c **** }
 157              		.loc 1 199 0
 158 001c 1846     		mov	r0, r3
 159 001e 07F10C07 		add	r7, r7, #12
 160 0022 BD46     		mov	sp, r7
 161 0024 80BC     		pop	{r7}
 162 0026 7047     		bx	lr
 163              		.cfi_endproc
 164              	.LFE111:
 166              		.section	.rodata
 167              		.align	2
 168              	.LC0:
 169 0000 4A6F7973 		.ascii	"Joystick in HS mode\000"
 169      7469636B 
 169      20696E20 
 169      4853206D 
 169      6F646500 
 170              		.align	2
 171              	.LC1:
 172 0014 4A6F7973 		.ascii	"Joystick in FS Mode\000"
 172      7469636B 
 172      20696E20 
 172      4653204D 
 172      6F646500 
 173              		.section	.text.USBD_USR_ProductStrDescriptor,"ax",%progbits
 174              		.align	2
 175              		.global	USBD_USR_ProductStrDescriptor
 176              		.thumb
 177              		.thumb_func
 179              	USBD_USR_ProductStrDescriptor:
 180              	.LFB112:
 200:../src/usbd_desc.c **** 
 201:../src/usbd_desc.c **** 
 202:../src/usbd_desc.c **** /**
 203:../src/usbd_desc.c **** * @brief  USBD_USR_ProductStrDescriptor 
 204:../src/usbd_desc.c **** *         return the product string descriptor
 205:../src/usbd_desc.c **** * @param  speed : current device speed
 206:../src/usbd_desc.c **** * @param  length : pointer to data length variable
 207:../src/usbd_desc.c **** * @retval pointer to descriptor buffer
 208:../src/usbd_desc.c **** */
 209:../src/usbd_desc.c **** uint8_t *  USBD_USR_ProductStrDescriptor( uint8_t speed , uint16_t *length)
 210:../src/usbd_desc.c **** {
 181              		.loc 1 210 0
 182              		.cfi_startproc
 183              		@ args = 0, pretend = 0, frame = 8
 184              		@ frame_needed = 1, uses_anonymous_args = 0
 185 0000 80B5     		push	{r7, lr}
 186              	.LCFI6:
 187              		.cfi_def_cfa_offset 8
 188              		.cfi_offset 14, -4
 189              		.cfi_offset 7, -8
 190 0002 82B0     		sub	sp, sp, #8
 191              	.LCFI7:
 192              		.cfi_def_cfa_offset 16
 193 0004 00AF     		add	r7, sp, #0
 194              	.LCFI8:
 195              		.cfi_def_cfa_register 7
 196 0006 0346     		mov	r3, r0
 197 0008 3960     		str	r1, [r7, #0]
 198 000a FB71     		strb	r3, [r7, #7]
 211:../src/usbd_desc.c ****  
 212:../src/usbd_desc.c ****   
 213:../src/usbd_desc.c ****   if(speed == 0)
 199              		.loc 1 213 0
 200 000c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 201 000e 002B     		cmp	r3, #0
 202 0010 0BD1     		bne	.L4
 214:../src/usbd_desc.c ****   {   
 215:../src/usbd_desc.c ****     USBD_GetString (USBD_PRODUCT_HS_STRING, USBD_StrDesc, length);
 203              		.loc 1 215 0
 204 0012 40F20000 		movw	r0, #:lower16:.LC0
 205 0016 C0F20000 		movt	r0, #:upper16:.LC0
 206 001a 40F20001 		movw	r1, #:lower16:USBD_StrDesc
 207 001e C0F20001 		movt	r1, #:upper16:USBD_StrDesc
 208 0022 3A68     		ldr	r2, [r7, #0]
 209 0024 FFF7FEFF 		bl	USBD_GetString
 210 0028 0AE0     		b	.L5
 211              	.L4:
 216:../src/usbd_desc.c ****   }
 217:../src/usbd_desc.c ****   else
 218:../src/usbd_desc.c ****   {
 219:../src/usbd_desc.c ****     USBD_GetString (USBD_PRODUCT_FS_STRING, USBD_StrDesc, length);    
 212              		.loc 1 219 0
 213 002a 40F20000 		movw	r0, #:lower16:.LC1
 214 002e C0F20000 		movt	r0, #:upper16:.LC1
 215 0032 40F20001 		movw	r1, #:lower16:USBD_StrDesc
 216 0036 C0F20001 		movt	r1, #:upper16:USBD_StrDesc
 217 003a 3A68     		ldr	r2, [r7, #0]
 218 003c FFF7FEFF 		bl	USBD_GetString
 219              	.L5:
 220:../src/usbd_desc.c ****   }
 221:../src/usbd_desc.c ****   return USBD_StrDesc;
 220              		.loc 1 221 0
 221 0040 40F20003 		movw	r3, #:lower16:USBD_StrDesc
 222 0044 C0F20003 		movt	r3, #:upper16:USBD_StrDesc
 222:../src/usbd_desc.c **** }
 223              		.loc 1 222 0
 224 0048 1846     		mov	r0, r3
 225 004a 07F10807 		add	r7, r7, #8
 226 004e BD46     		mov	sp, r7
 227 0050 80BD     		pop	{r7, pc}
 228              		.cfi_endproc
 229              	.LFE112:
 231 0052 00BF     		.section	.rodata
 232              		.align	2
 233              	.LC2:
 234 0028 53544D69 		.ascii	"STMicroelectronics\000"
 234      63726F65 
 234      6C656374 
 234      726F6E69 
 234      637300
 235              		.section	.text.USBD_USR_ManufacturerStrDescriptor,"ax",%progbits
 236              		.align	2
 237              		.global	USBD_USR_ManufacturerStrDescriptor
 238              		.thumb
 239              		.thumb_func
 241              	USBD_USR_ManufacturerStrDescriptor:
 242              	.LFB113:
 223:../src/usbd_desc.c **** 
 224:../src/usbd_desc.c **** /**
 225:../src/usbd_desc.c **** * @brief  USBD_USR_ManufacturerStrDescriptor 
 226:../src/usbd_desc.c **** *         return the manufacturer string descriptor
 227:../src/usbd_desc.c **** * @param  speed : current device speed
 228:../src/usbd_desc.c **** * @param  length : pointer to data length variable
 229:../src/usbd_desc.c **** * @retval pointer to descriptor buffer
 230:../src/usbd_desc.c **** */
 231:../src/usbd_desc.c **** uint8_t *  USBD_USR_ManufacturerStrDescriptor( uint8_t speed , uint16_t *length)
 232:../src/usbd_desc.c **** {
 243              		.loc 1 232 0
 244              		.cfi_startproc
 245              		@ args = 0, pretend = 0, frame = 8
 246              		@ frame_needed = 1, uses_anonymous_args = 0
 247 0000 80B5     		push	{r7, lr}
 248              	.LCFI9:
 249              		.cfi_def_cfa_offset 8
 250              		.cfi_offset 14, -4
 251              		.cfi_offset 7, -8
 252 0002 82B0     		sub	sp, sp, #8
 253              	.LCFI10:
 254              		.cfi_def_cfa_offset 16
 255 0004 00AF     		add	r7, sp, #0
 256              	.LCFI11:
 257              		.cfi_def_cfa_register 7
 258 0006 0346     		mov	r3, r0
 259 0008 3960     		str	r1, [r7, #0]
 260 000a FB71     		strb	r3, [r7, #7]
 233:../src/usbd_desc.c ****   USBD_GetString (USBD_MANUFACTURER_STRING, USBD_StrDesc, length);
 261              		.loc 1 233 0
 262 000c 40F20000 		movw	r0, #:lower16:.LC2
 263 0010 C0F20000 		movt	r0, #:upper16:.LC2
 264 0014 40F20001 		movw	r1, #:lower16:USBD_StrDesc
 265 0018 C0F20001 		movt	r1, #:upper16:USBD_StrDesc
 266 001c 3A68     		ldr	r2, [r7, #0]
 267 001e FFF7FEFF 		bl	USBD_GetString
 234:../src/usbd_desc.c ****   return USBD_StrDesc;
 268              		.loc 1 234 0
 269 0022 40F20003 		movw	r3, #:lower16:USBD_StrDesc
 270 0026 C0F20003 		movt	r3, #:upper16:USBD_StrDesc
 235:../src/usbd_desc.c **** }
 271              		.loc 1 235 0
 272 002a 1846     		mov	r0, r3
 273 002c 07F10807 		add	r7, r7, #8
 274 0030 BD46     		mov	sp, r7
 275 0032 80BD     		pop	{r7, pc}
 276              		.cfi_endproc
 277              	.LFE113:
 279              		.section	.rodata
 280 003b 00       		.align	2
 281              	.LC3:
 282 003c 30303030 		.ascii	"00000000011B\000"
 282      30303030 
 282      30313142 
 282      00
 283 0049 000000   		.align	2
 284              	.LC4:
 285 004c 30303030 		.ascii	"00000000011C\000"
 285      30303030 
 285      30313143 
 285      00
 286              		.section	.text.USBD_USR_SerialStrDescriptor,"ax",%progbits
 287              		.align	2
 288              		.global	USBD_USR_SerialStrDescriptor
 289              		.thumb
 290              		.thumb_func
 292              	USBD_USR_SerialStrDescriptor:
 293              	.LFB114:
 236:../src/usbd_desc.c **** 
 237:../src/usbd_desc.c **** /**
 238:../src/usbd_desc.c **** * @brief  USBD_USR_SerialStrDescriptor 
 239:../src/usbd_desc.c **** *         return the serial number string descriptor
 240:../src/usbd_desc.c **** * @param  speed : current device speed
 241:../src/usbd_desc.c **** * @param  length : pointer to data length variable
 242:../src/usbd_desc.c **** * @retval pointer to descriptor buffer
 243:../src/usbd_desc.c **** */
 244:../src/usbd_desc.c **** uint8_t *  USBD_USR_SerialStrDescriptor( uint8_t speed , uint16_t *length)
 245:../src/usbd_desc.c **** {
 294              		.loc 1 245 0
 295              		.cfi_startproc
 296              		@ args = 0, pretend = 0, frame = 8
 297              		@ frame_needed = 1, uses_anonymous_args = 0
 298 0000 80B5     		push	{r7, lr}
 299              	.LCFI12:
 300              		.cfi_def_cfa_offset 8
 301              		.cfi_offset 14, -4
 302              		.cfi_offset 7, -8
 303 0002 82B0     		sub	sp, sp, #8
 304              	.LCFI13:
 305              		.cfi_def_cfa_offset 16
 306 0004 00AF     		add	r7, sp, #0
 307              	.LCFI14:
 308              		.cfi_def_cfa_register 7
 309 0006 0346     		mov	r3, r0
 310 0008 3960     		str	r1, [r7, #0]
 311 000a FB71     		strb	r3, [r7, #7]
 246:../src/usbd_desc.c ****   if(speed  == USB_OTG_SPEED_HIGH)
 312              		.loc 1 246 0
 313 000c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 314 000e 002B     		cmp	r3, #0
 315 0010 0BD1     		bne	.L8
 247:../src/usbd_desc.c ****   {    
 248:../src/usbd_desc.c ****     USBD_GetString (USBD_SERIALNUMBER_HS_STRING, USBD_StrDesc, length);
 316              		.loc 1 248 0
 317 0012 40F20000 		movw	r0, #:lower16:.LC3
 318 0016 C0F20000 		movt	r0, #:upper16:.LC3
 319 001a 40F20001 		movw	r1, #:lower16:USBD_StrDesc
 320 001e C0F20001 		movt	r1, #:upper16:USBD_StrDesc
 321 0022 3A68     		ldr	r2, [r7, #0]
 322 0024 FFF7FEFF 		bl	USBD_GetString
 323 0028 0AE0     		b	.L9
 324              	.L8:
 249:../src/usbd_desc.c ****   }
 250:../src/usbd_desc.c ****   else
 251:../src/usbd_desc.c ****   {
 252:../src/usbd_desc.c ****     USBD_GetString (USBD_SERIALNUMBER_FS_STRING, USBD_StrDesc, length);    
 325              		.loc 1 252 0
 326 002a 40F20000 		movw	r0, #:lower16:.LC4
 327 002e C0F20000 		movt	r0, #:upper16:.LC4
 328 0032 40F20001 		movw	r1, #:lower16:USBD_StrDesc
 329 0036 C0F20001 		movt	r1, #:upper16:USBD_StrDesc
 330 003a 3A68     		ldr	r2, [r7, #0]
 331 003c FFF7FEFF 		bl	USBD_GetString
 332              	.L9:
 253:../src/usbd_desc.c ****   }
 254:../src/usbd_desc.c ****   return USBD_StrDesc;
 333              		.loc 1 254 0
 334 0040 40F20003 		movw	r3, #:lower16:USBD_StrDesc
 335 0044 C0F20003 		movt	r3, #:upper16:USBD_StrDesc
 255:../src/usbd_desc.c **** }
 336              		.loc 1 255 0
 337 0048 1846     		mov	r0, r3
 338 004a 07F10807 		add	r7, r7, #8
 339 004e BD46     		mov	sp, r7
 340 0050 80BD     		pop	{r7, pc}
 341              		.cfi_endproc
 342              	.LFE114:
 344 0052 00BF     		.section	.rodata
 345 0059 000000   		.align	2
 346              	.LC5:
 347 005c 48494420 		.ascii	"HID Config\000"
 347      436F6E66 
 347      696700
 348              		.section	.text.USBD_USR_ConfigStrDescriptor,"ax",%progbits
 349              		.align	2
 350              		.global	USBD_USR_ConfigStrDescriptor
 351              		.thumb
 352              		.thumb_func
 354              	USBD_USR_ConfigStrDescriptor:
 355              	.LFB115:
 256:../src/usbd_desc.c **** 
 257:../src/usbd_desc.c **** /**
 258:../src/usbd_desc.c **** * @brief  USBD_USR_ConfigStrDescriptor 
 259:../src/usbd_desc.c **** *         return the configuration string descriptor
 260:../src/usbd_desc.c **** * @param  speed : current device speed
 261:../src/usbd_desc.c **** * @param  length : pointer to data length variable
 262:../src/usbd_desc.c **** * @retval pointer to descriptor buffer
 263:../src/usbd_desc.c **** */
 264:../src/usbd_desc.c **** uint8_t *  USBD_USR_ConfigStrDescriptor( uint8_t speed , uint16_t *length)
 265:../src/usbd_desc.c **** {
 356              		.loc 1 265 0
 357              		.cfi_startproc
 358              		@ args = 0, pretend = 0, frame = 8
 359              		@ frame_needed = 1, uses_anonymous_args = 0
 360 0000 80B5     		push	{r7, lr}
 361              	.LCFI15:
 362              		.cfi_def_cfa_offset 8
 363              		.cfi_offset 14, -4
 364              		.cfi_offset 7, -8
 365 0002 82B0     		sub	sp, sp, #8
 366              	.LCFI16:
 367              		.cfi_def_cfa_offset 16
 368 0004 00AF     		add	r7, sp, #0
 369              	.LCFI17:
 370              		.cfi_def_cfa_register 7
 371 0006 0346     		mov	r3, r0
 372 0008 3960     		str	r1, [r7, #0]
 373 000a FB71     		strb	r3, [r7, #7]
 266:../src/usbd_desc.c ****   if(speed  == USB_OTG_SPEED_HIGH)
 374              		.loc 1 266 0
 375 000c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 376 000e 002B     		cmp	r3, #0
 377 0010 0BD1     		bne	.L11
 267:../src/usbd_desc.c ****   {  
 268:../src/usbd_desc.c ****     USBD_GetString (USBD_CONFIGURATION_HS_STRING, USBD_StrDesc, length);
 378              		.loc 1 268 0
 379 0012 40F20000 		movw	r0, #:lower16:.LC5
 380 0016 C0F20000 		movt	r0, #:upper16:.LC5
 381 001a 40F20001 		movw	r1, #:lower16:USBD_StrDesc
 382 001e C0F20001 		movt	r1, #:upper16:USBD_StrDesc
 383 0022 3A68     		ldr	r2, [r7, #0]
 384 0024 FFF7FEFF 		bl	USBD_GetString
 385 0028 0AE0     		b	.L12
 386              	.L11:
 269:../src/usbd_desc.c ****   }
 270:../src/usbd_desc.c ****   else
 271:../src/usbd_desc.c ****   {
 272:../src/usbd_desc.c ****     USBD_GetString (USBD_CONFIGURATION_FS_STRING, USBD_StrDesc, length); 
 387              		.loc 1 272 0
 388 002a 40F20000 		movw	r0, #:lower16:.LC5
 389 002e C0F20000 		movt	r0, #:upper16:.LC5
 390 0032 40F20001 		movw	r1, #:lower16:USBD_StrDesc
 391 0036 C0F20001 		movt	r1, #:upper16:USBD_StrDesc
 392 003a 3A68     		ldr	r2, [r7, #0]
 393 003c FFF7FEFF 		bl	USBD_GetString
 394              	.L12:
 273:../src/usbd_desc.c ****   }
 274:../src/usbd_desc.c ****   return USBD_StrDesc;  
 395              		.loc 1 274 0
 396 0040 40F20003 		movw	r3, #:lower16:USBD_StrDesc
 397 0044 C0F20003 		movt	r3, #:upper16:USBD_StrDesc
 275:../src/usbd_desc.c **** }
 398              		.loc 1 275 0
 399 0048 1846     		mov	r0, r3
 400 004a 07F10807 		add	r7, r7, #8
 401 004e BD46     		mov	sp, r7
 402 0050 80BD     		pop	{r7, pc}
 403              		.cfi_endproc
 404              	.LFE115:
 406 0052 00BF     		.section	.rodata
 407 0067 00       		.align	2
 408              	.LC6:
 409 0068 48494420 		.ascii	"HID Interface\000"
 409      496E7465 
 409      72666163 
 409      6500
 410 0076 0000     		.section	.text.USBD_USR_InterfaceStrDescriptor,"ax",%progbits
 411              		.align	2
 412              		.global	USBD_USR_InterfaceStrDescriptor
 413              		.thumb
 414              		.thumb_func
 416              	USBD_USR_InterfaceStrDescriptor:
 417              	.LFB116:
 276:../src/usbd_desc.c **** 
 277:../src/usbd_desc.c **** 
 278:../src/usbd_desc.c **** /**
 279:../src/usbd_desc.c **** * @brief  USBD_USR_InterfaceStrDescriptor 
 280:../src/usbd_desc.c **** *         return the interface string descriptor
 281:../src/usbd_desc.c **** * @param  speed : current device speed
 282:../src/usbd_desc.c **** * @param  length : pointer to data length variable
 283:../src/usbd_desc.c **** * @retval pointer to descriptor buffer
 284:../src/usbd_desc.c **** */
 285:../src/usbd_desc.c **** uint8_t *  USBD_USR_InterfaceStrDescriptor( uint8_t speed , uint16_t *length)
 286:../src/usbd_desc.c **** {
 418              		.loc 1 286 0
 419              		.cfi_startproc
 420              		@ args = 0, pretend = 0, frame = 8
 421              		@ frame_needed = 1, uses_anonymous_args = 0
 422 0000 80B5     		push	{r7, lr}
 423              	.LCFI18:
 424              		.cfi_def_cfa_offset 8
 425              		.cfi_offset 14, -4
 426              		.cfi_offset 7, -8
 427 0002 82B0     		sub	sp, sp, #8
 428              	.LCFI19:
 429              		.cfi_def_cfa_offset 16
 430 0004 00AF     		add	r7, sp, #0
 431              	.LCFI20:
 432              		.cfi_def_cfa_register 7
 433 0006 0346     		mov	r3, r0
 434 0008 3960     		str	r1, [r7, #0]
 435 000a FB71     		strb	r3, [r7, #7]
 287:../src/usbd_desc.c ****   if(speed == 0)
 436              		.loc 1 287 0
 437 000c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 438 000e 002B     		cmp	r3, #0
 439 0010 0BD1     		bne	.L14
 288:../src/usbd_desc.c ****   {
 289:../src/usbd_desc.c ****     USBD_GetString (USBD_INTERFACE_HS_STRING, USBD_StrDesc, length);
 440              		.loc 1 289 0
 441 0012 40F20000 		movw	r0, #:lower16:.LC6
 442 0016 C0F20000 		movt	r0, #:upper16:.LC6
 443 001a 40F20001 		movw	r1, #:lower16:USBD_StrDesc
 444 001e C0F20001 		movt	r1, #:upper16:USBD_StrDesc
 445 0022 3A68     		ldr	r2, [r7, #0]
 446 0024 FFF7FEFF 		bl	USBD_GetString
 447 0028 0AE0     		b	.L15
 448              	.L14:
 290:../src/usbd_desc.c ****   }
 291:../src/usbd_desc.c ****   else
 292:../src/usbd_desc.c ****   {
 293:../src/usbd_desc.c ****     USBD_GetString (USBD_INTERFACE_FS_STRING, USBD_StrDesc, length);
 449              		.loc 1 293 0
 450 002a 40F20000 		movw	r0, #:lower16:.LC6
 451 002e C0F20000 		movt	r0, #:upper16:.LC6
 452 0032 40F20001 		movw	r1, #:lower16:USBD_StrDesc
 453 0036 C0F20001 		movt	r1, #:upper16:USBD_StrDesc
 454 003a 3A68     		ldr	r2, [r7, #0]
 455 003c FFF7FEFF 		bl	USBD_GetString
 456              	.L15:
 294:../src/usbd_desc.c ****   }
 295:../src/usbd_desc.c ****   return USBD_StrDesc;  
 457              		.loc 1 295 0
 458 0040 40F20003 		movw	r3, #:lower16:USBD_StrDesc
 459 0044 C0F20003 		movt	r3, #:upper16:USBD_StrDesc
 296:../src/usbd_desc.c **** }
 460              		.loc 1 296 0
 461 0048 1846     		mov	r0, r3
 462 004a 07F10807 		add	r7, r7, #8
 463 004e BD46     		mov	sp, r7
 464 0050 80BD     		pop	{r7, pc}
 465              		.cfi_endproc
 466              	.LFE116:
 468 0052 00BF     		.text
 469              	.Letext0:
 470              		.file 2 "c:\\program files (x86)\\codesourcery\\sourcery_codebench_lite_for_arm_eabi\\bin\\../lib/
 471              		.file 3 "C:\\Users\\Anthony.Paterson@opus.co\\Documents\\git\\blink\\blink\\Libraries\\STM32_USB_O
 472              		.file 4 "C:\\Users\\Anthony.Paterson@opus.co\\Documents\\git\\blink\\blink\\Libraries\\CMSIS\\Incl
 473              		.file 5 "../src/usbd_desc.h"
DEFINED SYMBOLS
                            *ABS*:00000000 usbd_desc.c
C:\Users\ANTHON~1.CO\AppData\Local\Temp\ccUBnEN1.s:23     .data.USR_desc:00000000 USR_desc
C:\Users\ANTHON~1.CO\AppData\Local\Temp\ccUBnEN1.s:20     .data.USR_desc:00000000 $d
C:\Users\ANTHON~1.CO\AppData\Local\Temp\ccUBnEN1.s:87     .text.USBD_USR_DeviceDescriptor:00000000 USBD_USR_DeviceDescriptor
C:\Users\ANTHON~1.CO\AppData\Local\Temp\ccUBnEN1.s:130    .text.USBD_USR_LangIDStrDescriptor:00000000 USBD_USR_LangIDStrDescriptor
C:\Users\ANTHON~1.CO\AppData\Local\Temp\ccUBnEN1.s:241    .text.USBD_USR_ManufacturerStrDescriptor:00000000 USBD_USR_ManufacturerStrDescriptor
C:\Users\ANTHON~1.CO\AppData\Local\Temp\ccUBnEN1.s:179    .text.USBD_USR_ProductStrDescriptor:00000000 USBD_USR_ProductStrDescriptor
C:\Users\ANTHON~1.CO\AppData\Local\Temp\ccUBnEN1.s:292    .text.USBD_USR_SerialStrDescriptor:00000000 USBD_USR_SerialStrDescriptor
C:\Users\ANTHON~1.CO\AppData\Local\Temp\ccUBnEN1.s:354    .text.USBD_USR_ConfigStrDescriptor:00000000 USBD_USR_ConfigStrDescriptor
C:\Users\ANTHON~1.CO\AppData\Local\Temp\ccUBnEN1.s:416    .text.USBD_USR_InterfaceStrDescriptor:00000000 USBD_USR_InterfaceStrDescriptor
C:\Users\ANTHON~1.CO\AppData\Local\Temp\ccUBnEN1.s:36     .data.USBD_DeviceDesc:00000000 USBD_DeviceDesc
C:\Users\ANTHON~1.CO\AppData\Local\Temp\ccUBnEN1.s:33     .data.USBD_DeviceDesc:00000000 $d
C:\Users\ANTHON~1.CO\AppData\Local\Temp\ccUBnEN1.s:60     .data.USBD_DeviceQualifierDesc:00000000 USBD_DeviceQualifierDesc
C:\Users\ANTHON~1.CO\AppData\Local\Temp\ccUBnEN1.s:57     .data.USBD_DeviceQualifierDesc:00000000 $d
C:\Users\ANTHON~1.CO\AppData\Local\Temp\ccUBnEN1.s:76     .data.USBD_LangIDDesc:00000000 USBD_LangIDDesc
C:\Users\ANTHON~1.CO\AppData\Local\Temp\ccUBnEN1.s:73     .data.USBD_LangIDDesc:00000000 $d
C:\Users\ANTHON~1.CO\AppData\Local\Temp\ccUBnEN1.s:82     .text.USBD_USR_DeviceDescriptor:00000000 $t
C:\Users\ANTHON~1.CO\AppData\Local\Temp\ccUBnEN1.s:125    .text.USBD_USR_LangIDStrDescriptor:00000000 $t
C:\Users\ANTHON~1.CO\AppData\Local\Temp\ccUBnEN1.s:167    .rodata:00000000 $d
C:\Users\ANTHON~1.CO\AppData\Local\Temp\ccUBnEN1.s:168    .rodata:00000000 .LC0
C:\Users\ANTHON~1.CO\AppData\Local\Temp\ccUBnEN1.s:171    .rodata:00000014 .LC1
C:\Users\ANTHON~1.CO\AppData\Local\Temp\ccUBnEN1.s:174    .text.USBD_USR_ProductStrDescriptor:00000000 $t
C:\Users\ANTHON~1.CO\AppData\Local\Temp\ccUBnEN1.s:233    .rodata:00000028 .LC2
C:\Users\ANTHON~1.CO\AppData\Local\Temp\ccUBnEN1.s:236    .text.USBD_USR_ManufacturerStrDescriptor:00000000 $t
C:\Users\ANTHON~1.CO\AppData\Local\Temp\ccUBnEN1.s:281    .rodata:0000003c .LC3
C:\Users\ANTHON~1.CO\AppData\Local\Temp\ccUBnEN1.s:284    .rodata:0000004c .LC4
C:\Users\ANTHON~1.CO\AppData\Local\Temp\ccUBnEN1.s:287    .text.USBD_USR_SerialStrDescriptor:00000000 $t
C:\Users\ANTHON~1.CO\AppData\Local\Temp\ccUBnEN1.s:346    .rodata:0000005c .LC5
C:\Users\ANTHON~1.CO\AppData\Local\Temp\ccUBnEN1.s:349    .text.USBD_USR_ConfigStrDescriptor:00000000 $t
C:\Users\ANTHON~1.CO\AppData\Local\Temp\ccUBnEN1.s:408    .rodata:00000068 .LC6
C:\Users\ANTHON~1.CO\AppData\Local\Temp\ccUBnEN1.s:411    .text.USBD_USR_InterfaceStrDescriptor:00000000 $t
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
USBD_StrDesc
USBD_GetString
