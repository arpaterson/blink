   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"stm32f4xx_it.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.global	PauseResumeStatus
  19              		.section	.data.PauseResumeStatus,"aw",%progbits
  22              	PauseResumeStatus:
  23 0000 02       		.byte	2
  24              		.global	Count
  25              		.section	.bss.Count,"aw",%nobits
  28              	Count:
  29 0000 00       		.space	1
  30              		.global	LED_Toggle
  31              		.section	.bss.LED_Toggle,"aw",%nobits
  34              	LED_Toggle:
  35 0000 00       		.space	1
  36              		.global	capture
  37              		.section	.bss.capture,"aw",%nobits
  38              		.align	1
  41              	capture:
  42 0000 0000     		.space	2
  43              		.section	.text.NMI_Handler,"ax",%progbits
  44              		.align	2
  45              		.global	NMI_Handler
  46              		.thumb
  47              		.thumb_func
  49              	NMI_Handler:
  50              	.LFB110:
  51              		.file 1 "../src/stm32f4xx_it.c"
   1:../src/stm32f4xx_it.c **** /**
   2:../src/stm32f4xx_it.c ****   ******************************************************************************
   3:../src/stm32f4xx_it.c ****   * @file    Audio_playback_and_record/src/stm32f4xx_it.c 
   4:../src/stm32f4xx_it.c ****   * @author  MCD Application Team
   5:../src/stm32f4xx_it.c ****   * @version V1.0.0
   6:../src/stm32f4xx_it.c ****   * @date    28-October-2011
   7:../src/stm32f4xx_it.c ****   * @brief   Main Interrupt Service Routines.
   8:../src/stm32f4xx_it.c ****   *          This file provides template for all exceptions handler and 
   9:../src/stm32f4xx_it.c ****   *          peripherals interrupt service routine.
  10:../src/stm32f4xx_it.c ****   ******************************************************************************
  11:../src/stm32f4xx_it.c ****   * @attention
  12:../src/stm32f4xx_it.c ****   *
  13:../src/stm32f4xx_it.c ****   * THE PRESENT FIRMWARE WHICH IS FOR GUIDANCE ONLY AIMS AT PROVIDING CUSTOMERS
  14:../src/stm32f4xx_it.c ****   * WITH CODING INFORMATION REGARDING THEIR PRODUCTS IN ORDER FOR THEM TO SAVE
  15:../src/stm32f4xx_it.c ****   * TIME. AS A RESULT, STMICROELECTRONICS SHALL NOT BE HELD LIABLE FOR ANY
  16:../src/stm32f4xx_it.c ****   * DIRECT, INDIRECT OR CONSEQUENTIAL DAMAGES WITH RESPECT TO ANY CLAIMS ARISING
  17:../src/stm32f4xx_it.c ****   * FROM THE CONTENT OF SUCH FIRMWARE AND/OR THE USE MADE BY CUSTOMERS OF THE
  18:../src/stm32f4xx_it.c ****   * CODING INFORMATION CONTAINED HEREIN IN CONNECTION WITH THEIR PRODUCTS.
  19:../src/stm32f4xx_it.c ****   *
  20:../src/stm32f4xx_it.c ****   * <h2><center>&copy; COPYRIGHT 2011 STMicroelectronics</center></h2>
  21:../src/stm32f4xx_it.c ****   ******************************************************************************
  22:../src/stm32f4xx_it.c ****   */ 
  23:../src/stm32f4xx_it.c **** 
  24:../src/stm32f4xx_it.c **** /* Includes ------------------------------------------------------------------*/
  25:../src/stm32f4xx_it.c **** #include "main.h"
  26:../src/stm32f4xx_it.c **** 
  27:../src/stm32f4xx_it.c **** 
  28:../src/stm32f4xx_it.c **** /** @addtogroup STM32F4-Discovery_Audio_Player_Recorder
  29:../src/stm32f4xx_it.c ****   * @{
  30:../src/stm32f4xx_it.c ****   */
  31:../src/stm32f4xx_it.c **** 
  32:../src/stm32f4xx_it.c **** /* Private typedef -----------------------------------------------------------*/
  33:../src/stm32f4xx_it.c **** /* Private define ------------------------------------------------------------*/
  34:../src/stm32f4xx_it.c **** /* Private macro -------------------------------------------------------------*/
  35:../src/stm32f4xx_it.c **** /* Private variables ---------------------------------------------------------*/
  36:../src/stm32f4xx_it.c **** __IO uint8_t PauseResumeStatus = 2, Count = 0, LED_Toggle = 0;
  37:../src/stm32f4xx_it.c **** uint16_t capture = 0;
  38:../src/stm32f4xx_it.c **** extern __IO uint16_t CCR_Val;
  39:../src/stm32f4xx_it.c **** extern __IO uint8_t RepeatState, AudioPlayStart;
  40:../src/stm32f4xx_it.c **** extern uint8_t Buffer[];
  41:../src/stm32f4xx_it.c **** 
  42:../src/stm32f4xx_it.c **** #if defined MEDIA_USB_KEY
  43:../src/stm32f4xx_it.c **** __IO uint16_t Time_Rec_Base = 0;
  44:../src/stm32f4xx_it.c ****  extern USB_OTG_CORE_HANDLE          USB_OTG_Core;
  45:../src/stm32f4xx_it.c ****  extern USBH_HOST                    USB_Host;
  46:../src/stm32f4xx_it.c ****  extern FIL file;
  47:../src/stm32f4xx_it.c ****  extern __IO uint8_t Data_Status;
  48:../src/stm32f4xx_it.c ****  extern __IO uint32_t XferCplt ;
  49:../src/stm32f4xx_it.c ****  extern __IO uint8_t Command_index;
  50:../src/stm32f4xx_it.c **** #endif /* MEDIA_USB_KEY */
  51:../src/stm32f4xx_it.c **** 
  52:../src/stm32f4xx_it.c **** /* Private function prototypes -----------------------------------------------*/
  53:../src/stm32f4xx_it.c **** /* Private functions ---------------------------------------------------------*/
  54:../src/stm32f4xx_it.c **** 
  55:../src/stm32f4xx_it.c **** /******************************************************************************/
  56:../src/stm32f4xx_it.c **** /*            Cortex-M4 Processor Exceptions Handlers                         */
  57:../src/stm32f4xx_it.c **** /******************************************************************************/
  58:../src/stm32f4xx_it.c **** 
  59:../src/stm32f4xx_it.c **** /**
  60:../src/stm32f4xx_it.c ****   * @brief   This function handles NMI exception.
  61:../src/stm32f4xx_it.c ****   * @param  None
  62:../src/stm32f4xx_it.c ****   * @retval None
  63:../src/stm32f4xx_it.c ****   */
  64:../src/stm32f4xx_it.c **** void NMI_Handler(void)
  65:../src/stm32f4xx_it.c **** {
  52              		.loc 1 65 0
  53              		.cfi_startproc
  54              		@ args = 0, pretend = 0, frame = 0
  55              		@ frame_needed = 1, uses_anonymous_args = 0
  56              		@ link register save eliminated.
  57 0000 80B4     		push	{r7}
  58              	.LCFI0:
  59              		.cfi_def_cfa_offset 4
  60              		.cfi_offset 7, -4
  61 0002 00AF     		add	r7, sp, #0
  62              	.LCFI1:
  63              		.cfi_def_cfa_register 7
  66:../src/stm32f4xx_it.c **** }
  64              		.loc 1 66 0
  65 0004 BD46     		mov	sp, r7
  66 0006 80BC     		pop	{r7}
  67 0008 7047     		bx	lr
  68              		.cfi_endproc
  69              	.LFE110:
  71 000a 00BF     		.section	.text.HardFault_Handler,"ax",%progbits
  72              		.align	2
  73              		.global	HardFault_Handler
  74              		.thumb
  75              		.thumb_func
  77              	HardFault_Handler:
  78              	.LFB111:
  67:../src/stm32f4xx_it.c **** 
  68:../src/stm32f4xx_it.c **** /**
  69:../src/stm32f4xx_it.c ****   * @brief  This function handles Hard Fault exception.
  70:../src/stm32f4xx_it.c ****   * @param  None
  71:../src/stm32f4xx_it.c ****   * @retval None
  72:../src/stm32f4xx_it.c ****   */
  73:../src/stm32f4xx_it.c **** void HardFault_Handler(void)
  74:../src/stm32f4xx_it.c **** {
  79              		.loc 1 74 0
  80              		.cfi_startproc
  81              		@ args = 0, pretend = 0, frame = 0
  82              		@ frame_needed = 1, uses_anonymous_args = 0
  83              		@ link register save eliminated.
  84 0000 80B4     		push	{r7}
  85              	.LCFI2:
  86              		.cfi_def_cfa_offset 4
  87              		.cfi_offset 7, -4
  88 0002 00AF     		add	r7, sp, #0
  89              	.LCFI3:
  90              		.cfi_def_cfa_register 7
  91              	.L3:
  75:../src/stm32f4xx_it.c ****   /* Go to infinite loop when Hard Fault exception occurs */
  76:../src/stm32f4xx_it.c ****   while (1)
  77:../src/stm32f4xx_it.c ****   {
  78:../src/stm32f4xx_it.c ****   }
  92              		.loc 1 78 0 discriminator 1
  93 0004 FEE7     		b	.L3
  94              		.cfi_endproc
  95              	.LFE111:
  97 0006 00BF     		.section	.text.MemManage_Handler,"ax",%progbits
  98              		.align	2
  99              		.global	MemManage_Handler
 100              		.thumb
 101              		.thumb_func
 103              	MemManage_Handler:
 104              	.LFB112:
  79:../src/stm32f4xx_it.c **** }
  80:../src/stm32f4xx_it.c **** 
  81:../src/stm32f4xx_it.c **** /**
  82:../src/stm32f4xx_it.c ****   * @brief  This function handles Memory Manage exception.
  83:../src/stm32f4xx_it.c ****   * @param  None
  84:../src/stm32f4xx_it.c ****   * @retval None
  85:../src/stm32f4xx_it.c ****   */
  86:../src/stm32f4xx_it.c **** void MemManage_Handler(void)
  87:../src/stm32f4xx_it.c **** {
 105              		.loc 1 87 0
 106              		.cfi_startproc
 107              		@ args = 0, pretend = 0, frame = 0
 108              		@ frame_needed = 1, uses_anonymous_args = 0
 109              		@ link register save eliminated.
 110 0000 80B4     		push	{r7}
 111              	.LCFI4:
 112              		.cfi_def_cfa_offset 4
 113              		.cfi_offset 7, -4
 114 0002 00AF     		add	r7, sp, #0
 115              	.LCFI5:
 116              		.cfi_def_cfa_register 7
 117              	.L5:
  88:../src/stm32f4xx_it.c ****   /* Go to infinite loop when Memory Manage exception occurs */
  89:../src/stm32f4xx_it.c ****   while (1)
  90:../src/stm32f4xx_it.c ****   {
  91:../src/stm32f4xx_it.c ****   }
 118              		.loc 1 91 0 discriminator 1
 119 0004 FEE7     		b	.L5
 120              		.cfi_endproc
 121              	.LFE112:
 123 0006 00BF     		.section	.text.BusFault_Handler,"ax",%progbits
 124              		.align	2
 125              		.global	BusFault_Handler
 126              		.thumb
 127              		.thumb_func
 129              	BusFault_Handler:
 130              	.LFB113:
  92:../src/stm32f4xx_it.c **** }
  93:../src/stm32f4xx_it.c **** 
  94:../src/stm32f4xx_it.c **** /**
  95:../src/stm32f4xx_it.c ****   * @brief  This function handles Bus Fault exception.
  96:../src/stm32f4xx_it.c ****   * @param  None
  97:../src/stm32f4xx_it.c ****   * @retval None
  98:../src/stm32f4xx_it.c ****   */
  99:../src/stm32f4xx_it.c **** void BusFault_Handler(void)
 100:../src/stm32f4xx_it.c **** {
 131              		.loc 1 100 0
 132              		.cfi_startproc
 133              		@ args = 0, pretend = 0, frame = 0
 134              		@ frame_needed = 1, uses_anonymous_args = 0
 135              		@ link register save eliminated.
 136 0000 80B4     		push	{r7}
 137              	.LCFI6:
 138              		.cfi_def_cfa_offset 4
 139              		.cfi_offset 7, -4
 140 0002 00AF     		add	r7, sp, #0
 141              	.LCFI7:
 142              		.cfi_def_cfa_register 7
 143              	.L7:
 101:../src/stm32f4xx_it.c ****   /* Go to infinite loop when Bus Fault exception occurs */
 102:../src/stm32f4xx_it.c ****   while (1)
 103:../src/stm32f4xx_it.c ****   {
 104:../src/stm32f4xx_it.c ****   }
 144              		.loc 1 104 0 discriminator 1
 145 0004 FEE7     		b	.L7
 146              		.cfi_endproc
 147              	.LFE113:
 149 0006 00BF     		.section	.text.UsageFault_Handler,"ax",%progbits
 150              		.align	2
 151              		.global	UsageFault_Handler
 152              		.thumb
 153              		.thumb_func
 155              	UsageFault_Handler:
 156              	.LFB114:
 105:../src/stm32f4xx_it.c **** }
 106:../src/stm32f4xx_it.c **** 
 107:../src/stm32f4xx_it.c **** /**
 108:../src/stm32f4xx_it.c ****   * @brief  This function handles Usage Fault exception.
 109:../src/stm32f4xx_it.c ****   * @param  None
 110:../src/stm32f4xx_it.c ****   * @retval None
 111:../src/stm32f4xx_it.c ****   */
 112:../src/stm32f4xx_it.c **** void UsageFault_Handler(void)
 113:../src/stm32f4xx_it.c **** {
 157              		.loc 1 113 0
 158              		.cfi_startproc
 159              		@ args = 0, pretend = 0, frame = 0
 160              		@ frame_needed = 1, uses_anonymous_args = 0
 161              		@ link register save eliminated.
 162 0000 80B4     		push	{r7}
 163              	.LCFI8:
 164              		.cfi_def_cfa_offset 4
 165              		.cfi_offset 7, -4
 166 0002 00AF     		add	r7, sp, #0
 167              	.LCFI9:
 168              		.cfi_def_cfa_register 7
 169              	.L9:
 114:../src/stm32f4xx_it.c ****   /* Go to infinite loop when Usage Fault exception occurs */
 115:../src/stm32f4xx_it.c ****   while (1)
 116:../src/stm32f4xx_it.c ****   {
 117:../src/stm32f4xx_it.c ****   }
 170              		.loc 1 117 0 discriminator 1
 171 0004 FEE7     		b	.L9
 172              		.cfi_endproc
 173              	.LFE114:
 175 0006 00BF     		.section	.text.SVC_Handler,"ax",%progbits
 176              		.align	2
 177              		.global	SVC_Handler
 178              		.thumb
 179              		.thumb_func
 181              	SVC_Handler:
 182              	.LFB115:
 118:../src/stm32f4xx_it.c **** }
 119:../src/stm32f4xx_it.c **** 
 120:../src/stm32f4xx_it.c **** /**
 121:../src/stm32f4xx_it.c ****   * @brief  This function handles SVCall exception.
 122:../src/stm32f4xx_it.c ****   * @param  None
 123:../src/stm32f4xx_it.c ****   * @retval None
 124:../src/stm32f4xx_it.c ****   */
 125:../src/stm32f4xx_it.c **** void SVC_Handler(void)
 126:../src/stm32f4xx_it.c **** {
 183              		.loc 1 126 0
 184              		.cfi_startproc
 185              		@ args = 0, pretend = 0, frame = 0
 186              		@ frame_needed = 1, uses_anonymous_args = 0
 187              		@ link register save eliminated.
 188 0000 80B4     		push	{r7}
 189              	.LCFI10:
 190              		.cfi_def_cfa_offset 4
 191              		.cfi_offset 7, -4
 192 0002 00AF     		add	r7, sp, #0
 193              	.LCFI11:
 194              		.cfi_def_cfa_register 7
 127:../src/stm32f4xx_it.c **** }
 195              		.loc 1 127 0
 196 0004 BD46     		mov	sp, r7
 197 0006 80BC     		pop	{r7}
 198 0008 7047     		bx	lr
 199              		.cfi_endproc
 200              	.LFE115:
 202 000a 00BF     		.section	.text.DebugMon_Handler,"ax",%progbits
 203              		.align	2
 204              		.global	DebugMon_Handler
 205              		.thumb
 206              		.thumb_func
 208              	DebugMon_Handler:
 209              	.LFB116:
 128:../src/stm32f4xx_it.c **** 
 129:../src/stm32f4xx_it.c **** /**
 130:../src/stm32f4xx_it.c ****   * @brief  This function handles Debug Monitor exception.
 131:../src/stm32f4xx_it.c ****   * @param  None
 132:../src/stm32f4xx_it.c ****   * @retval None
 133:../src/stm32f4xx_it.c ****   */
 134:../src/stm32f4xx_it.c **** void DebugMon_Handler(void)
 135:../src/stm32f4xx_it.c **** {
 210              		.loc 1 135 0
 211              		.cfi_startproc
 212              		@ args = 0, pretend = 0, frame = 0
 213              		@ frame_needed = 1, uses_anonymous_args = 0
 214              		@ link register save eliminated.
 215 0000 80B4     		push	{r7}
 216              	.LCFI12:
 217              		.cfi_def_cfa_offset 4
 218              		.cfi_offset 7, -4
 219 0002 00AF     		add	r7, sp, #0
 220              	.LCFI13:
 221              		.cfi_def_cfa_register 7
 136:../src/stm32f4xx_it.c **** }
 222              		.loc 1 136 0
 223 0004 BD46     		mov	sp, r7
 224 0006 80BC     		pop	{r7}
 225 0008 7047     		bx	lr
 226              		.cfi_endproc
 227              	.LFE116:
 229 000a 00BF     		.section	.text.PendSV_Handler,"ax",%progbits
 230              		.align	2
 231              		.global	PendSV_Handler
 232              		.thumb
 233              		.thumb_func
 235              	PendSV_Handler:
 236              	.LFB117:
 137:../src/stm32f4xx_it.c **** 
 138:../src/stm32f4xx_it.c **** /**
 139:../src/stm32f4xx_it.c ****   * @brief  This function handles PendSVC exception.
 140:../src/stm32f4xx_it.c ****   * @param  None
 141:../src/stm32f4xx_it.c ****   * @retval None
 142:../src/stm32f4xx_it.c ****   */
 143:../src/stm32f4xx_it.c **** void PendSV_Handler(void)
 144:../src/stm32f4xx_it.c **** {
 237              		.loc 1 144 0
 238              		.cfi_startproc
 239              		@ args = 0, pretend = 0, frame = 0
 240              		@ frame_needed = 1, uses_anonymous_args = 0
 241              		@ link register save eliminated.
 242 0000 80B4     		push	{r7}
 243              	.LCFI14:
 244              		.cfi_def_cfa_offset 4
 245              		.cfi_offset 7, -4
 246 0002 00AF     		add	r7, sp, #0
 247              	.LCFI15:
 248              		.cfi_def_cfa_register 7
 145:../src/stm32f4xx_it.c **** }
 249              		.loc 1 145 0
 250 0004 BD46     		mov	sp, r7
 251 0006 80BC     		pop	{r7}
 252 0008 7047     		bx	lr
 253              		.cfi_endproc
 254              	.LFE117:
 256 000a 00BF     		.section	.text.SysTick_Handler,"ax",%progbits
 257              		.align	2
 258              		.global	SysTick_Handler
 259              		.thumb
 260              		.thumb_func
 262              	SysTick_Handler:
 263              	.LFB118:
 146:../src/stm32f4xx_it.c **** 
 147:../src/stm32f4xx_it.c **** /**
 148:../src/stm32f4xx_it.c ****   * @brief  This function handles SysTick Handler.
 149:../src/stm32f4xx_it.c ****   * @param  None
 150:../src/stm32f4xx_it.c ****   * @retval None
 151:../src/stm32f4xx_it.c ****   */
 152:../src/stm32f4xx_it.c **** void SysTick_Handler(void)
 153:../src/stm32f4xx_it.c **** {
 264              		.loc 1 153 0
 265              		.cfi_startproc
 266              		@ args = 0, pretend = 0, frame = 0
 267              		@ frame_needed = 1, uses_anonymous_args = 0
 268 0000 80B5     		push	{r7, lr}
 269              	.LCFI16:
 270              		.cfi_def_cfa_offset 8
 271              		.cfi_offset 14, -4
 272              		.cfi_offset 7, -8
 273 0002 00AF     		add	r7, sp, #0
 274              	.LCFI17:
 275              		.cfi_def_cfa_register 7
 154:../src/stm32f4xx_it.c ****   TimingDelay_Decrement();
 276              		.loc 1 154 0
 277 0004 FFF7FEFF 		bl	TimingDelay_Decrement
 155:../src/stm32f4xx_it.c **** #if defined MEDIA_USB_KEY
 156:../src/stm32f4xx_it.c ****   if ( Command_index == 1)
 157:../src/stm32f4xx_it.c ****   {
 158:../src/stm32f4xx_it.c ****     Time_Rec_Base ++;
 159:../src/stm32f4xx_it.c ****   }
 160:../src/stm32f4xx_it.c **** #endif
 161:../src/stm32f4xx_it.c **** }
 278              		.loc 1 161 0
 279 0008 80BD     		pop	{r7, pc}
 280              		.cfi_endproc
 281              	.LFE118:
 283 000a 00BF     		.section	.text.EXTI1_IRQHandler,"ax",%progbits
 284              		.align	2
 285              		.global	EXTI1_IRQHandler
 286              		.thumb
 287              		.thumb_func
 289              	EXTI1_IRQHandler:
 290              	.LFB119:
 162:../src/stm32f4xx_it.c **** 
 163:../src/stm32f4xx_it.c **** 
 164:../src/stm32f4xx_it.c **** /******************************************************************************/
 165:../src/stm32f4xx_it.c **** /*                 STM32F4xx Peripherals Interrupt Handlers                   */
 166:../src/stm32f4xx_it.c **** /*  Add here the Interrupt Handler for the used peripheral(s) (PPP), for the  */
 167:../src/stm32f4xx_it.c **** /*  available peripheral interrupt handler's name please refer to the startup */
 168:../src/stm32f4xx_it.c **** /*  file (startup_stm32f4xx.s).                                               */
 169:../src/stm32f4xx_it.c **** /******************************************************************************/
 170:../src/stm32f4xx_it.c **** /**
 171:../src/stm32f4xx_it.c ****   * @brief  This function handles External line 1 interrupt request.
 172:../src/stm32f4xx_it.c ****   * @param  None
 173:../src/stm32f4xx_it.c ****   * @retval None
 174:../src/stm32f4xx_it.c ****   */
 175:../src/stm32f4xx_it.c **** void EXTI1_IRQHandler(void)
 176:../src/stm32f4xx_it.c **** {
 291              		.loc 1 176 0
 292              		.cfi_startproc
 293              		@ args = 0, pretend = 0, frame = 0
 294              		@ frame_needed = 1, uses_anonymous_args = 0
 295 0000 80B5     		push	{r7, lr}
 296              	.LCFI18:
 297              		.cfi_def_cfa_offset 8
 298              		.cfi_offset 14, -4
 299              		.cfi_offset 7, -8
 300 0002 00AF     		add	r7, sp, #0
 301              	.LCFI19:
 302              		.cfi_def_cfa_register 7
 177:../src/stm32f4xx_it.c ****   /* Check the clic on the accelerometer to Pause/Resume Playing */
 178:../src/stm32f4xx_it.c ****   if(EXTI_GetITStatus(EXTI_Line1) != RESET)
 303              		.loc 1 178 0
 304 0004 4FF00200 		mov	r0, #2
 305 0008 FFF7FEFF 		bl	EXTI_GetITStatus
 306 000c 0346     		mov	r3, r0
 307 000e 002B     		cmp	r3, #0
 308 0010 28D0     		beq	.L14
 179:../src/stm32f4xx_it.c ****   {
 180:../src/stm32f4xx_it.c ****     if( Count==1)
 309              		.loc 1 180 0
 310 0012 40F20003 		movw	r3, #:lower16:Count
 311 0016 C0F20003 		movt	r3, #:upper16:Count
 312 001a 1B78     		ldrb	r3, [r3, #0]
 313 001c DBB2     		uxtb	r3, r3
 314 001e 012B     		cmp	r3, #1
 315 0020 0ED1     		bne	.L16
 181:../src/stm32f4xx_it.c ****     {
 182:../src/stm32f4xx_it.c ****       PauseResumeStatus = 1;
 316              		.loc 1 182 0
 317 0022 40F20003 		movw	r3, #:lower16:PauseResumeStatus
 318 0026 C0F20003 		movt	r3, #:upper16:PauseResumeStatus
 319 002a 4FF00102 		mov	r2, #1
 320 002e 1A70     		strb	r2, [r3, #0]
 183:../src/stm32f4xx_it.c ****       Count = 0;
 321              		.loc 1 183 0
 322 0030 40F20003 		movw	r3, #:lower16:Count
 323 0034 C0F20003 		movt	r3, #:upper16:Count
 324 0038 4FF00002 		mov	r2, #0
 325 003c 1A70     		strb	r2, [r3, #0]
 326 003e 0DE0     		b	.L17
 327              	.L16:
 184:../src/stm32f4xx_it.c ****     }
 185:../src/stm32f4xx_it.c ****     else
 186:../src/stm32f4xx_it.c ****     {
 187:../src/stm32f4xx_it.c ****       PauseResumeStatus = 0;
 328              		.loc 1 187 0
 329 0040 40F20003 		movw	r3, #:lower16:PauseResumeStatus
 330 0044 C0F20003 		movt	r3, #:upper16:PauseResumeStatus
 331 0048 4FF00002 		mov	r2, #0
 332 004c 1A70     		strb	r2, [r3, #0]
 188:../src/stm32f4xx_it.c ****       Count = 1;
 333              		.loc 1 188 0
 334 004e 40F20003 		movw	r3, #:lower16:Count
 335 0052 C0F20003 		movt	r3, #:upper16:Count
 336 0056 4FF00102 		mov	r2, #1
 337 005a 1A70     		strb	r2, [r3, #0]
 338              	.L17:
 189:../src/stm32f4xx_it.c ****     }
 190:../src/stm32f4xx_it.c ****     /* Clear the EXTI line 1 pending bit */
 191:../src/stm32f4xx_it.c ****     EXTI_ClearITPendingBit(EXTI_Line1);
 339              		.loc 1 191 0
 340 005c 4FF00200 		mov	r0, #2
 341 0060 FFF7FEFF 		bl	EXTI_ClearITPendingBit
 342              	.L14:
 192:../src/stm32f4xx_it.c ****   }
 193:../src/stm32f4xx_it.c **** }
 343              		.loc 1 193 0
 344 0064 80BD     		pop	{r7, pc}
 345              		.cfi_endproc
 346              	.LFE119:
 348 0066 00BF     		.section	.text.TIM4_IRQHandler,"ax",%progbits
 349              		.align	2
 350              		.global	TIM4_IRQHandler
 351              		.thumb
 352              		.thumb_func
 354              	TIM4_IRQHandler:
 355              	.LFB120:
 194:../src/stm32f4xx_it.c **** 
 195:../src/stm32f4xx_it.c **** /**
 196:../src/stm32f4xx_it.c ****   * @brief  This function handles TIM4 global interrupt request.
 197:../src/stm32f4xx_it.c ****   * @param  None
 198:../src/stm32f4xx_it.c ****   * @retval None
 199:../src/stm32f4xx_it.c ****   */
 200:../src/stm32f4xx_it.c **** void TIM4_IRQHandler(void)
 201:../src/stm32f4xx_it.c **** {
 356              		.loc 1 201 0
 357              		.cfi_startproc
 358              		@ args = 0, pretend = 0, frame = 8
 359              		@ frame_needed = 1, uses_anonymous_args = 0
 360 0000 80B5     		push	{r7, lr}
 361              	.LCFI20:
 362              		.cfi_def_cfa_offset 8
 363              		.cfi_offset 14, -4
 364              		.cfi_offset 7, -8
 365 0002 82B0     		sub	sp, sp, #8
 366              	.LCFI21:
 367              		.cfi_def_cfa_offset 16
 368 0004 00AF     		add	r7, sp, #0
 369              	.LCFI22:
 370              		.cfi_def_cfa_register 7
 202:../src/stm32f4xx_it.c ****    uint8_t clickreg = 0;
 371              		.loc 1 202 0
 372 0006 4FF00003 		mov	r3, #0
 373 000a FB71     		strb	r3, [r7, #7]
 203:../src/stm32f4xx_it.c **** 
 204:../src/stm32f4xx_it.c ****   if (AudioPlayStart != 0x00)
 374              		.loc 1 204 0
 375 000c 40F20003 		movw	r3, #:lower16:AudioPlayStart
 376 0010 C0F20003 		movt	r3, #:upper16:AudioPlayStart
 377 0014 1B78     		ldrb	r3, [r3, #0]
 378 0016 DBB2     		uxtb	r3, r3
 379 0018 002B     		cmp	r3, #0
 380 001a 12D0     		beq	.L19
 205:../src/stm32f4xx_it.c ****   {
 206:../src/stm32f4xx_it.c ****     /* Read click status register */
 207:../src/stm32f4xx_it.c ****     LIS302DL_Read(&clickreg, LIS302DL_CLICK_SRC_REG_ADDR, 1); 
 381              		.loc 1 207 0
 382 001c 07F10703 		add	r3, r7, #7
 383 0020 1846     		mov	r0, r3
 384 0022 4FF03901 		mov	r1, #57
 385 0026 4FF00102 		mov	r2, #1
 386 002a FFF7FEFF 		bl	LIS302DL_Read
 208:../src/stm32f4xx_it.c ****     LIS302DL_Read(Buffer, LIS302DL_STATUS_REG_ADDR, 6);
 387              		.loc 1 208 0
 388 002e 40F20000 		movw	r0, #:lower16:Buffer
 389 0032 C0F20000 		movt	r0, #:upper16:Buffer
 390 0036 4FF02701 		mov	r1, #39
 391 003a 4FF00602 		mov	r2, #6
 392 003e FFF7FEFF 		bl	LIS302DL_Read
 393              	.L19:
 209:../src/stm32f4xx_it.c ****   }
 210:../src/stm32f4xx_it.c ****   
 211:../src/stm32f4xx_it.c ****   /* Checks whether the TIM interrupt has occurred */
 212:../src/stm32f4xx_it.c ****   if (TIM_GetITStatus(TIM4, TIM_IT_CC1) != RESET)
 394              		.loc 1 212 0
 395 0042 4FF40060 		mov	r0, #2048
 396 0046 C4F20000 		movt	r0, 16384
 397 004a 4FF00201 		mov	r1, #2
 398 004e FFF7FEFF 		bl	TIM_GetITStatus
 399 0052 0346     		mov	r3, r0
 400 0054 002B     		cmp	r3, #0
 401 0056 00F08D80 		beq	.L18
 213:../src/stm32f4xx_it.c ****   {
 214:../src/stm32f4xx_it.c ****     TIM_ClearITPendingBit(TIM4, TIM_IT_CC1);
 402              		.loc 1 214 0
 403 005a 4FF40060 		mov	r0, #2048
 404 005e C4F20000 		movt	r0, 16384
 405 0062 4FF00201 		mov	r1, #2
 406 0066 FFF7FEFF 		bl	TIM_ClearITPendingBit
 215:../src/stm32f4xx_it.c ****     if( LED_Toggle == 3)
 407              		.loc 1 215 0
 408 006a 40F20003 		movw	r3, #:lower16:LED_Toggle
 409 006e C0F20003 		movt	r3, #:upper16:LED_Toggle
 410 0072 1B78     		ldrb	r3, [r3, #0]
 411 0074 DBB2     		uxtb	r3, r3
 412 0076 032B     		cmp	r3, #3
 413 0078 0CD1     		bne	.L21
 216:../src/stm32f4xx_it.c ****     {
 217:../src/stm32f4xx_it.c ****       /* LED3 Orange toggling */
 218:../src/stm32f4xx_it.c ****       STM_EVAL_LEDToggle(LED3);
 414              		.loc 1 218 0
 415 007a 4FF00100 		mov	r0, #1
 416 007e FFF7FEFF 		bl	STM_EVAL_LEDToggle
 219:../src/stm32f4xx_it.c ****       STM_EVAL_LEDOff(LED6);
 417              		.loc 1 219 0
 418 0082 4FF00300 		mov	r0, #3
 419 0086 FFF7FEFF 		bl	STM_EVAL_LEDOff
 220:../src/stm32f4xx_it.c ****       STM_EVAL_LEDOff(LED4);
 420              		.loc 1 220 0
 421 008a 4FF00000 		mov	r0, #0
 422 008e FFF7FEFF 		bl	STM_EVAL_LEDOff
 423 0092 4EE0     		b	.L22
 424              	.L21:
 221:../src/stm32f4xx_it.c ****     }
 222:../src/stm32f4xx_it.c ****     else if( LED_Toggle == 4)
 425              		.loc 1 222 0
 426 0094 40F20003 		movw	r3, #:lower16:LED_Toggle
 427 0098 C0F20003 		movt	r3, #:upper16:LED_Toggle
 428 009c 1B78     		ldrb	r3, [r3, #0]
 429 009e DBB2     		uxtb	r3, r3
 430 00a0 042B     		cmp	r3, #4
 431 00a2 0CD1     		bne	.L23
 223:../src/stm32f4xx_it.c ****     {
 224:../src/stm32f4xx_it.c ****       /* LED4 Green toggling */
 225:../src/stm32f4xx_it.c ****       STM_EVAL_LEDToggle(LED4);
 432              		.loc 1 225 0
 433 00a4 4FF00000 		mov	r0, #0
 434 00a8 FFF7FEFF 		bl	STM_EVAL_LEDToggle
 226:../src/stm32f4xx_it.c ****       STM_EVAL_LEDOff(LED6);
 435              		.loc 1 226 0
 436 00ac 4FF00300 		mov	r0, #3
 437 00b0 FFF7FEFF 		bl	STM_EVAL_LEDOff
 227:../src/stm32f4xx_it.c ****       STM_EVAL_LEDOff(LED3);
 438              		.loc 1 227 0
 439 00b4 4FF00100 		mov	r0, #1
 440 00b8 FFF7FEFF 		bl	STM_EVAL_LEDOff
 441 00bc 39E0     		b	.L22
 442              	.L23:
 228:../src/stm32f4xx_it.c ****     }
 229:../src/stm32f4xx_it.c ****     else if( LED_Toggle == 6)
 443              		.loc 1 229 0
 444 00be 40F20003 		movw	r3, #:lower16:LED_Toggle
 445 00c2 C0F20003 		movt	r3, #:upper16:LED_Toggle
 446 00c6 1B78     		ldrb	r3, [r3, #0]
 447 00c8 DBB2     		uxtb	r3, r3
 448 00ca 062B     		cmp	r3, #6
 449 00cc 0CD1     		bne	.L24
 230:../src/stm32f4xx_it.c ****     {
 231:../src/stm32f4xx_it.c ****       /* LED6 Blue toggling */
 232:../src/stm32f4xx_it.c ****       STM_EVAL_LEDOff(LED3);
 450              		.loc 1 232 0
 451 00ce 4FF00100 		mov	r0, #1
 452 00d2 FFF7FEFF 		bl	STM_EVAL_LEDOff
 233:../src/stm32f4xx_it.c ****       STM_EVAL_LEDOff(LED4);
 453              		.loc 1 233 0
 454 00d6 4FF00000 		mov	r0, #0
 455 00da FFF7FEFF 		bl	STM_EVAL_LEDOff
 234:../src/stm32f4xx_it.c ****       STM_EVAL_LEDToggle(LED6);
 456              		.loc 1 234 0
 457 00de 4FF00300 		mov	r0, #3
 458 00e2 FFF7FEFF 		bl	STM_EVAL_LEDToggle
 459 00e6 24E0     		b	.L22
 460              	.L24:
 235:../src/stm32f4xx_it.c ****     }
 236:../src/stm32f4xx_it.c ****     else if (LED_Toggle ==0)
 461              		.loc 1 236 0
 462 00e8 40F20003 		movw	r3, #:lower16:LED_Toggle
 463 00ec C0F20003 		movt	r3, #:upper16:LED_Toggle
 464 00f0 1B78     		ldrb	r3, [r3, #0]
 465 00f2 DBB2     		uxtb	r3, r3
 466 00f4 002B     		cmp	r3, #0
 467 00f6 04D1     		bne	.L25
 237:../src/stm32f4xx_it.c ****     {
 238:../src/stm32f4xx_it.c ****       /* LED6 Blue On to signal Pause */
 239:../src/stm32f4xx_it.c ****       STM_EVAL_LEDOn(LED6);
 468              		.loc 1 239 0
 469 00f8 4FF00300 		mov	r0, #3
 470 00fc FFF7FEFF 		bl	STM_EVAL_LEDOn
 471 0100 17E0     		b	.L22
 472              	.L25:
 240:../src/stm32f4xx_it.c ****     }
 241:../src/stm32f4xx_it.c ****     else if (LED_Toggle == 7)
 473              		.loc 1 241 0
 474 0102 40F20003 		movw	r3, #:lower16:LED_Toggle
 475 0106 C0F20003 		movt	r3, #:upper16:LED_Toggle
 476 010a 1B78     		ldrb	r3, [r3, #0]
 477 010c DBB2     		uxtb	r3, r3
 478 010e 072B     		cmp	r3, #7
 479 0110 0FD1     		bne	.L22
 242:../src/stm32f4xx_it.c ****     {
 243:../src/stm32f4xx_it.c ****       /* LED4 toggling with frequency = 439.4 Hz */
 244:../src/stm32f4xx_it.c ****       STM_EVAL_LEDOff(LED3);
 480              		.loc 1 244 0
 481 0112 4FF00100 		mov	r0, #1
 482 0116 FFF7FEFF 		bl	STM_EVAL_LEDOff
 245:../src/stm32f4xx_it.c ****       STM_EVAL_LEDOff(LED4);
 483              		.loc 1 245 0
 484 011a 4FF00000 		mov	r0, #0
 485 011e FFF7FEFF 		bl	STM_EVAL_LEDOff
 246:../src/stm32f4xx_it.c ****       STM_EVAL_LEDOff(LED5);
 486              		.loc 1 246 0
 487 0122 4FF00200 		mov	r0, #2
 488 0126 FFF7FEFF 		bl	STM_EVAL_LEDOff
 247:../src/stm32f4xx_it.c ****       STM_EVAL_LEDOff(LED6);
 489              		.loc 1 247 0
 490 012a 4FF00300 		mov	r0, #3
 491 012e FFF7FEFF 		bl	STM_EVAL_LEDOff
 492              	.L22:
 248:../src/stm32f4xx_it.c ****     }
 249:../src/stm32f4xx_it.c ****     capture = TIM_GetCapture1(TIM4);
 493              		.loc 1 249 0
 494 0132 4FF40060 		mov	r0, #2048
 495 0136 C4F20000 		movt	r0, 16384
 496 013a FFF7FEFF 		bl	TIM_GetCapture1
 497 013e 0346     		mov	r3, r0
 498 0140 9AB2     		uxth	r2, r3
 499 0142 40F20003 		movw	r3, #:lower16:capture
 500 0146 C0F20003 		movt	r3, #:upper16:capture
 501 014a 1A80     		strh	r2, [r3, #0]	@ movhi
 250:../src/stm32f4xx_it.c ****     TIM_SetCompare1(TIM4, capture + CCR_Val);
 502              		.loc 1 250 0
 503 014c 40F20003 		movw	r3, #:lower16:capture
 504 0150 C0F20003 		movt	r3, #:upper16:capture
 505 0154 1B88     		ldrh	r3, [r3, #0]
 506 0156 1A46     		mov	r2, r3
 507 0158 40F20003 		movw	r3, #:lower16:CCR_Val
 508 015c C0F20003 		movt	r3, #:upper16:CCR_Val
 509 0160 1B88     		ldrh	r3, [r3, #0]	@ movhi
 510 0162 9BB2     		uxth	r3, r3
 511 0164 D318     		adds	r3, r2, r3
 512 0166 4FF40060 		mov	r0, #2048
 513 016a C4F20000 		movt	r0, 16384
 514 016e 1946     		mov	r1, r3
 515 0170 FFF7FEFF 		bl	TIM_SetCompare1
 516              	.L18:
 251:../src/stm32f4xx_it.c ****   }
 252:../src/stm32f4xx_it.c **** }
 517              		.loc 1 252 0
 518 0174 07F10807 		add	r7, r7, #8
 519 0178 BD46     		mov	sp, r7
 520 017a 80BD     		pop	{r7, pc}
 521              		.cfi_endproc
 522              	.LFE120:
 524              		.text
 525              	.Letext0:
 526              		.file 2 "c:\\program files (x86)\\codesourcery\\sourcery_codebench_lite_for_arm_eabi\\bin\\../lib/
 527              		.file 3 "C:\\Users\\Anthony.Paterson@opus.co\\Documents\\git\\blink\\blink\\Libraries\\CMSIS\\ST\\
 528              		.file 4 "C:\\Users\\Anthony.Paterson@opus.co\\Documents\\git\\blink\\blink\\Utilities\\STM32F4-Dis
 529              		.file 5 "C:\\Users\\Anthony.Paterson@opus.co\\Documents\\git\\blink\\blink\\Libraries\\CMSIS\\Incl
DEFINED SYMBOLS
                            *ABS*:00000000 stm32f4xx_it.c
C:\Users\ANTHON~1.CO\AppData\Local\Temp\ccQ4EjqQ.s:22     .data.PauseResumeStatus:00000000 PauseResumeStatus
C:\Users\ANTHON~1.CO\AppData\Local\Temp\ccQ4EjqQ.s:28     .bss.Count:00000000 Count
C:\Users\ANTHON~1.CO\AppData\Local\Temp\ccQ4EjqQ.s:29     .bss.Count:00000000 $d
C:\Users\ANTHON~1.CO\AppData\Local\Temp\ccQ4EjqQ.s:34     .bss.LED_Toggle:00000000 LED_Toggle
C:\Users\ANTHON~1.CO\AppData\Local\Temp\ccQ4EjqQ.s:35     .bss.LED_Toggle:00000000 $d
C:\Users\ANTHON~1.CO\AppData\Local\Temp\ccQ4EjqQ.s:41     .bss.capture:00000000 capture
C:\Users\ANTHON~1.CO\AppData\Local\Temp\ccQ4EjqQ.s:38     .bss.capture:00000000 $d
C:\Users\ANTHON~1.CO\AppData\Local\Temp\ccQ4EjqQ.s:44     .text.NMI_Handler:00000000 $t
C:\Users\ANTHON~1.CO\AppData\Local\Temp\ccQ4EjqQ.s:49     .text.NMI_Handler:00000000 NMI_Handler
C:\Users\ANTHON~1.CO\AppData\Local\Temp\ccQ4EjqQ.s:72     .text.HardFault_Handler:00000000 $t
C:\Users\ANTHON~1.CO\AppData\Local\Temp\ccQ4EjqQ.s:77     .text.HardFault_Handler:00000000 HardFault_Handler
C:\Users\ANTHON~1.CO\AppData\Local\Temp\ccQ4EjqQ.s:98     .text.MemManage_Handler:00000000 $t
C:\Users\ANTHON~1.CO\AppData\Local\Temp\ccQ4EjqQ.s:103    .text.MemManage_Handler:00000000 MemManage_Handler
C:\Users\ANTHON~1.CO\AppData\Local\Temp\ccQ4EjqQ.s:124    .text.BusFault_Handler:00000000 $t
C:\Users\ANTHON~1.CO\AppData\Local\Temp\ccQ4EjqQ.s:129    .text.BusFault_Handler:00000000 BusFault_Handler
C:\Users\ANTHON~1.CO\AppData\Local\Temp\ccQ4EjqQ.s:150    .text.UsageFault_Handler:00000000 $t
C:\Users\ANTHON~1.CO\AppData\Local\Temp\ccQ4EjqQ.s:155    .text.UsageFault_Handler:00000000 UsageFault_Handler
C:\Users\ANTHON~1.CO\AppData\Local\Temp\ccQ4EjqQ.s:176    .text.SVC_Handler:00000000 $t
C:\Users\ANTHON~1.CO\AppData\Local\Temp\ccQ4EjqQ.s:181    .text.SVC_Handler:00000000 SVC_Handler
C:\Users\ANTHON~1.CO\AppData\Local\Temp\ccQ4EjqQ.s:203    .text.DebugMon_Handler:00000000 $t
C:\Users\ANTHON~1.CO\AppData\Local\Temp\ccQ4EjqQ.s:208    .text.DebugMon_Handler:00000000 DebugMon_Handler
C:\Users\ANTHON~1.CO\AppData\Local\Temp\ccQ4EjqQ.s:230    .text.PendSV_Handler:00000000 $t
C:\Users\ANTHON~1.CO\AppData\Local\Temp\ccQ4EjqQ.s:235    .text.PendSV_Handler:00000000 PendSV_Handler
C:\Users\ANTHON~1.CO\AppData\Local\Temp\ccQ4EjqQ.s:257    .text.SysTick_Handler:00000000 $t
C:\Users\ANTHON~1.CO\AppData\Local\Temp\ccQ4EjqQ.s:262    .text.SysTick_Handler:00000000 SysTick_Handler
C:\Users\ANTHON~1.CO\AppData\Local\Temp\ccQ4EjqQ.s:284    .text.EXTI1_IRQHandler:00000000 $t
C:\Users\ANTHON~1.CO\AppData\Local\Temp\ccQ4EjqQ.s:289    .text.EXTI1_IRQHandler:00000000 EXTI1_IRQHandler
C:\Users\ANTHON~1.CO\AppData\Local\Temp\ccQ4EjqQ.s:349    .text.TIM4_IRQHandler:00000000 $t
C:\Users\ANTHON~1.CO\AppData\Local\Temp\ccQ4EjqQ.s:354    .text.TIM4_IRQHandler:00000000 TIM4_IRQHandler
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
TimingDelay_Decrement
EXTI_GetITStatus
EXTI_ClearITPendingBit
AudioPlayStart
LIS302DL_Read
Buffer
TIM_GetITStatus
TIM_ClearITPendingBit
STM_EVAL_LEDToggle
STM_EVAL_LEDOff
STM_EVAL_LEDOn
TIM_GetCapture1
CCR_Val
TIM_SetCompare1
