   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"main.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.comm	GPIO_InitStructure,8,4
  19              		.section	.text.main,"ax",%progbits
  20              		.align	2
  21              		.global	main
  22              		.thumb
  23              		.thumb_func
  25              	main:
  26              	.LFB110:
  27              		.file 1 "../src/main.c"
   1:../src/main.c **** /**
   2:../src/main.c **** *****************************************************************************
   3:../src/main.c **** **
   4:../src/main.c **** **  File        : main.c
   5:../src/main.c **** **
   6:../src/main.c **** **  Abstract    : main function.
   7:../src/main.c **** **
   8:../src/main.c **** **  Functions   : main
   9:../src/main.c **** **
  10:../src/main.c **** **  Environment : Atollic TrueSTUDIO(R)
  11:../src/main.c **** **                STMicroelectronics STM32F4xx Standard Peripherals Library
  12:../src/main.c **** **
  13:../src/main.c **** **  Distribution: The file is distributed “as is,” without any warranty
  14:../src/main.c **** **                of any kind.
  15:../src/main.c **** **
  16:../src/main.c **** **  (c)Copyright Atollic AB.
  17:../src/main.c **** **  You may use this file as-is or modify it according to the needs of your
  18:../src/main.c **** **  project. Distribution of this file (unmodified or modified) is not
  19:../src/main.c **** **  permitted. Atollic AB permit registered Atollic TrueSTUDIO(R) users the
  20:../src/main.c **** **  rights to distribute the assembled, compiled & linked contents of this
  21:../src/main.c **** **  file as part of an application binary file, provided that it is built
  22:../src/main.c **** **  using the Atollic TrueSTUDIO(R) toolchain.
  23:../src/main.c **** **
  24:../src/main.c **** **
  25:../src/main.c **** *****************************************************************************
  26:../src/main.c **** */
  27:../src/main.c **** 
  28:../src/main.c **** 
  29:../src/main.c **** 
  30:../src/main.c **** /* Includes */
  31:../src/main.c **** 
  32:../src/main.c **** #include "stm32f4xx.h"
  33:../src/main.c **** #include "stm32f4_discovery.h"
  34:../src/main.c **** #include <stdio.h>
  35:../src/main.c **** 
  36:../src/main.c **** /* Private typedef -----------------------------------------------------------*/
  37:../src/main.c **** GPIO_InitTypeDef GPIO_InitStructure;
  38:../src/main.c **** 
  39:../src/main.c **** /* Private define ------------------------------------------------------------*/
  40:../src/main.c **** /* Private macro */
  41:../src/main.c **** /* Private variables */
  42:../src/main.c **** /* Private function prototypes -----------------------------------------------*/
  43:../src/main.c **** 
  44:../src/main.c **** void Delaynus(vu32);
  45:../src/main.c **** void LED_Config();
  46:../src/main.c **** void USART_Config();
  47:../src/main.c **** 
  48:../src/main.c **** #ifdef __GNUC__
  49:../src/main.c ****   /* With GCC/RAISONANCE, small printf (option LD Linker->Libraries->Small printf
  50:../src/main.c ****      set to 'Yes') calls __io_putchar() */
  51:../src/main.c ****   #define PUTCHAR_PROTOTYPE int __io_putchar(int ch)
  52:../src/main.c **** #else
  53:../src/main.c ****   #define PUTCHAR_PROTOTYPE int fputc(int ch, FILE *f)
  54:../src/main.c **** #endif /* __GNUC__ */
  55:../src/main.c **** 
  56:../src/main.c **** /* Private functions ---------------------------------------------------------*/
  57:../src/main.c **** 
  58:../src/main.c **** /*
  59:../src/main.c ****  * ===========================================================================
  60:../src/main.c ****  *
  61:../src/main.c ****  *  Abstract: main program
  62:../src/main.c ****  *
  63:../src/main.c ****  * ===========================================================================
  64:../src/main.c ****  */
  65:../src/main.c **** 
  66:../src/main.c **** 
  67:../src/main.c **** 
  68:../src/main.c **** /**
  69:../src/main.c ****   * @brief  None
  70:../src/main.c ****   * @param  None
  71:../src/main.c ****   * @retval None
  72:../src/main.c ****   */
  73:../src/main.c **** int main(void)
  74:../src/main.c **** {
  28              		.loc 1 74 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 1, uses_anonymous_args = 0
  32 0000 80B5     		push	{r7, lr}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 8
  35              		.cfi_offset 14, -4
  36              		.cfi_offset 7, -8
  37 0002 00AF     		add	r7, sp, #0
  38              	.LCFI1:
  39              		.cfi_def_cfa_register 7
  75:../src/main.c **** 	LED_Config();
  40              		.loc 1 75 0
  41 0004 FFF7FEFF 		bl	LED_Config
  76:../src/main.c **** 	USART_Config();
  42              		.loc 1 76 0
  43 0008 FFF7FEFF 		bl	USART_Config
  44              	.L2:
  77:../src/main.c **** 
  78:../src/main.c ****     while (1)
  79:../src/main.c ****     {
  80:../src/main.c ****         Delaynus(100000 / 2);    /* A short delay */
  45              		.loc 1 80 0 discriminator 1
  46 000c 4CF25030 		movw	r0, #50000
  47 0010 FFF7FEFF 		bl	Delaynus
  81:../src/main.c ****         GPIOD->ODR^=0xF000;
  48              		.loc 1 81 0 discriminator 1
  49 0014 4FF44063 		mov	r3, #3072
  50 0018 C4F20203 		movt	r3, 16386
  51 001c 4FF44062 		mov	r2, #3072
  52 0020 C4F20202 		movt	r2, 16386
  53 0024 5269     		ldr	r2, [r2, #20]
  54 0026 82F47042 		eor	r2, r2, #61440
  55 002a 5A61     		str	r2, [r3, #20]
  82:../src/main.c ****         //GPIOD -> BSRRL = GPIO_Pin_12 | GPIO_Pin_13;
  83:../src/main.c **** 
  84:../src/main.c ****         Delaynus(100000 / 2);
  56              		.loc 1 84 0 discriminator 1
  57 002c 4CF25030 		movw	r0, #50000
  58 0030 FFF7FEFF 		bl	Delaynus
  85:../src/main.c ****        // GPIOD -> BSRRH = GPIO_Pin_12 | GPIO_Pin_13;
  86:../src/main.c ****     }
  59              		.loc 1 86 0 discriminator 1
  60 0034 EAE7     		b	.L2
  61              		.cfi_endproc
  62              	.LFE110:
  64 0036 00BF     		.section	.text.Delaynus,"ax",%progbits
  65              		.align	2
  66              		.global	Delaynus
  67              		.thumb
  68              		.thumb_func
  70              	Delaynus:
  71              	.LFB111:
  87:../src/main.c **** 
  88:../src/main.c ****     /* Infinite loop */
  89:../src/main.c **** 
  90:../src/main.c ****     {
  91:../src/main.c ****     }
  92:../src/main.c **** }
  93:../src/main.c **** 
  94:../src/main.c **** /**
  95:../src/main.c ****   * @brief  None
  96:../src/main.c ****   * @param  None
  97:../src/main.c ****   * @retval None
  98:../src/main.c ****   */
  99:../src/main.c **** void Delaynus(vu32 nus)
 100:../src/main.c **** {
  72              		.loc 1 100 0
  73              		.cfi_startproc
  74              		@ args = 0, pretend = 0, frame = 16
  75              		@ frame_needed = 1, uses_anonymous_args = 0
  76              		@ link register save eliminated.
  77 0000 80B4     		push	{r7}
  78              	.LCFI2:
  79              		.cfi_def_cfa_offset 4
  80              		.cfi_offset 7, -4
  81 0002 85B0     		sub	sp, sp, #20
  82              	.LCFI3:
  83              		.cfi_def_cfa_offset 24
  84 0004 00AF     		add	r7, sp, #0
  85              	.LCFI4:
  86              		.cfi_def_cfa_register 7
  87 0006 7860     		str	r0, [r7, #4]
 101:../src/main.c ****     u8 nCount;
 102:../src/main.c **** 
 103:../src/main.c ****     while (nus--)
  88              		.loc 1 103 0
  89 0008 0AE0     		b	.L4
  90              	.L7:
 104:../src/main.c ****     {
 105:../src/main.c ****         for (nCount = 6; nCount != 0; nCount--);
  91              		.loc 1 105 0
  92 000a 4FF00603 		mov	r3, #6
  93 000e FB73     		strb	r3, [r7, #15]
  94 0010 03E0     		b	.L5
  95              	.L6:
  96              		.loc 1 105 0 is_stmt 0 discriminator 2
  97 0012 FB7B     		ldrb	r3, [r7, #15]
  98 0014 03F1FF33 		add	r3, r3, #-1
  99 0018 FB73     		strb	r3, [r7, #15]
 100              	.L5:
 101              		.loc 1 105 0 discriminator 1
 102 001a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 103 001c 002B     		cmp	r3, #0
 104 001e F8D1     		bne	.L6
 105              	.L4:
 103:../src/main.c ****     while (nus--)
 106              		.loc 1 103 0 is_stmt 1 discriminator 1
 107 0020 7B68     		ldr	r3, [r7, #4]
 108 0022 002B     		cmp	r3, #0
 109 0024 0CBF     		ite	eq
 110 0026 0022     		moveq	r2, #0
 111 0028 0122     		movne	r2, #1
 112 002a D2B2     		uxtb	r2, r2
 113 002c 03F1FF33 		add	r3, r3, #-1
 114 0030 7B60     		str	r3, [r7, #4]
 115 0032 002A     		cmp	r2, #0
 116 0034 E9D1     		bne	.L7
 106:../src/main.c ****     }
 107:../src/main.c **** }
 117              		.loc 1 107 0
 118 0036 07F11407 		add	r7, r7, #20
 119 003a BD46     		mov	sp, r7
 120 003c 80BC     		pop	{r7}
 121 003e 7047     		bx	lr
 122              		.cfi_endproc
 123              	.LFE111:
 125              		.section	.text.LED_Config,"ax",%progbits
 126              		.align	2
 127              		.global	LED_Config
 128              		.thumb
 129              		.thumb_func
 131              	LED_Config:
 132              	.LFB112:
 108:../src/main.c **** 
 109:../src/main.c **** /**
 110:../src/main.c ****   * @brief  None
 111:../src/main.c ****   * @param  None
 112:../src/main.c ****   * @retval None
 113:../src/main.c ****   */
 114:../src/main.c **** void LED_Config()
 115:../src/main.c **** {
 133              		.loc 1 115 0
 134              		.cfi_startproc
 135              		@ args = 0, pretend = 0, frame = 8
 136              		@ frame_needed = 1, uses_anonymous_args = 0
 137 0000 80B5     		push	{r7, lr}
 138              	.LCFI5:
 139              		.cfi_def_cfa_offset 8
 140              		.cfi_offset 14, -4
 141              		.cfi_offset 7, -8
 142 0002 82B0     		sub	sp, sp, #8
 143              	.LCFI6:
 144              		.cfi_def_cfa_offset 16
 145 0004 00AF     		add	r7, sp, #0
 146              	.LCFI7:
 147              		.cfi_def_cfa_register 7
 116:../src/main.c ****   GPIO_InitTypeDef  GPIO_InitStructure;
 117:../src/main.c ****   /* GPIOD Periph clock enable */
 118:../src/main.c ****   RCC_AHB1PeriphClockCmd(RCC_AHB1Periph_GPIOD, ENABLE);
 148              		.loc 1 118 0
 149 0006 4FF00800 		mov	r0, #8
 150 000a 4FF00101 		mov	r1, #1
 151 000e FFF7FEFF 		bl	RCC_AHB1PeriphClockCmd
 119:../src/main.c ****   /* Configure PD12, PD13, PD14 and PD15 in output push-pull mode */
 120:../src/main.c ****   GPIO_InitStructure.GPIO_Pin = GPIO_Pin_12 | GPIO_Pin_13| GPIO_Pin_14| GPIO_Pin_15;
 152              		.loc 1 120 0
 153 0012 4FF47043 		mov	r3, #61440
 154 0016 3B60     		str	r3, [r7, #0]
 121:../src/main.c ****   GPIO_InitStructure.GPIO_OType = GPIO_OType_PP;
 155              		.loc 1 121 0
 156 0018 4FF00003 		mov	r3, #0
 157 001c BB71     		strb	r3, [r7, #6]
 122:../src/main.c ****   GPIO_InitStructure.GPIO_Speed = GPIO_Speed_25MHz;
 158              		.loc 1 122 0
 159 001e 4FF00103 		mov	r3, #1
 160 0022 7B71     		strb	r3, [r7, #5]
 123:../src/main.c ****   GPIO_InitStructure.GPIO_PuPd = GPIO_PuPd_NOPULL;
 161              		.loc 1 123 0
 162 0024 4FF00003 		mov	r3, #0
 163 0028 FB71     		strb	r3, [r7, #7]
 124:../src/main.c **** 
 125:../src/main.c ****   /* standard output pin */
 126:../src/main.c ****   GPIO_InitStructure.GPIO_Mode = GPIO_Mode_OUT;
 164              		.loc 1 126 0
 165 002a 4FF00103 		mov	r3, #1
 166 002e 3B71     		strb	r3, [r7, #4]
 127:../src/main.c ****   GPIO_Init(GPIOD, &GPIO_InitStructure);
 167              		.loc 1 127 0
 168 0030 4FF44060 		mov	r0, #3072
 169 0034 C4F20200 		movt	r0, 16386
 170 0038 3B46     		mov	r3, r7
 171 003a 1946     		mov	r1, r3
 172 003c FFF7FEFF 		bl	GPIO_Init
 128:../src/main.c ****   GPIO_Write(GPIOD,0);	//initial state (all LEDs OFF)
 173              		.loc 1 128 0
 174 0040 4FF44060 		mov	r0, #3072
 175 0044 C4F20200 		movt	r0, 16386
 176 0048 4FF00001 		mov	r1, #0
 177 004c FFF7FEFF 		bl	GPIO_Write
 129:../src/main.c **** }
 178              		.loc 1 129 0
 179 0050 07F10807 		add	r7, r7, #8
 180 0054 BD46     		mov	sp, r7
 181 0056 80BD     		pop	{r7, pc}
 182              		.cfi_endproc
 183              	.LFE112:
 185              		.section	.text.USART_Config,"ax",%progbits
 186              		.align	2
 187              		.global	USART_Config
 188              		.thumb
 189              		.thumb_func
 191              	USART_Config:
 192              	.LFB113:
 130:../src/main.c **** 
 131:../src/main.c **** /**
 132:../src/main.c ****   * @brief  None
 133:../src/main.c ****   * @param  None
 134:../src/main.c ****   * @retval None
 135:../src/main.c ****   */
 136:../src/main.c **** void USART_Config(){
 193              		.loc 1 136 0
 194              		.cfi_startproc
 195              		@ args = 0, pretend = 0, frame = 16
 196              		@ frame_needed = 1, uses_anonymous_args = 0
 197 0000 80B5     		push	{r7, lr}
 198              	.LCFI8:
 199              		.cfi_def_cfa_offset 8
 200              		.cfi_offset 14, -4
 201              		.cfi_offset 7, -8
 202 0002 86B0     		sub	sp, sp, #24
 203              	.LCFI9:
 204              		.cfi_def_cfa_offset 32
 205 0004 02AF     		add	r7, sp, #8
 206              	.LCFI10:
 207              		.cfi_def_cfa 7, 24
 137:../src/main.c **** 	USART_InitTypeDef USART_InitStructure;
 138:../src/main.c **** 	USART_InitStructure.USART_BaudRate = 115200;
 208              		.loc 1 138 0
 209 0006 4FF4E133 		mov	r3, #115200
 210 000a 3B60     		str	r3, [r7, #0]
 139:../src/main.c **** 	USART_InitStructure.USART_WordLength = USART_WordLength_8b;
 211              		.loc 1 139 0
 212 000c 4FF00003 		mov	r3, #0
 213 0010 BB80     		strh	r3, [r7, #4]	@ movhi
 140:../src/main.c **** 	USART_InitStructure.USART_StopBits = USART_StopBits_1;
 214              		.loc 1 140 0
 215 0012 4FF00003 		mov	r3, #0
 216 0016 FB80     		strh	r3, [r7, #6]	@ movhi
 141:../src/main.c **** 	USART_InitStructure.USART_Parity = USART_Parity_No;
 217              		.loc 1 141 0
 218 0018 4FF00003 		mov	r3, #0
 219 001c 3B81     		strh	r3, [r7, #8]	@ movhi
 142:../src/main.c **** 	USART_InitStructure.USART_HardwareFlowControl = USART_HardwareFlowControl_None;
 220              		.loc 1 142 0
 221 001e 4FF00003 		mov	r3, #0
 222 0022 BB81     		strh	r3, [r7, #12]	@ movhi
 143:../src/main.c **** 	USART_InitStructure.USART_Mode = USART_Mode_Rx | USART_Mode_Tx;
 223              		.loc 1 143 0
 224 0024 4FF00C03 		mov	r3, #12
 225 0028 7B81     		strh	r3, [r7, #10]	@ movhi
 144:../src/main.c **** 
 145:../src/main.c **** 	STM_Eval_COMInit(COM1,USART_InitStructure);
 226              		.loc 1 145 0
 227 002a FB68     		ldr	r3, [r7, #12]
 228 002c 0093     		str	r3, [sp, #0]
 229 002e 3B46     		mov	r3, r7
 230 0030 0ECB     		ldmia	r3, {r1, r2, r3}
 231 0032 4FF00000 		mov	r0, #0
 232 0036 FFF7FEFF 		bl	STM_Eval_COMInit
 146:../src/main.c **** }
 233              		.loc 1 146 0
 234 003a 07F11007 		add	r7, r7, #16
 235 003e BD46     		mov	sp, r7
 236 0040 80BD     		pop	{r7, pc}
 237              		.cfi_endproc
 238              	.LFE113:
 240 0042 00BF     		.section	.text.__io_putchar,"ax",%progbits
 241              		.align	2
 242              		.global	__io_putchar
 243              		.thumb
 244              		.thumb_func
 246              	__io_putchar:
 247              	.LFB114:
 147:../src/main.c **** 
 148:../src/main.c **** /**
 149:../src/main.c ****   * @brief  Retargets the C library printf function to the USART.
 150:../src/main.c ****   * @param  None
 151:../src/main.c ****   * @retval None
 152:../src/main.c ****   */
 153:../src/main.c **** PUTCHAR_PROTOTYPE
 154:../src/main.c **** {
 248              		.loc 1 154 0
 249              		.cfi_startproc
 250              		@ args = 0, pretend = 0, frame = 8
 251              		@ frame_needed = 1, uses_anonymous_args = 0
 252 0000 80B5     		push	{r7, lr}
 253              	.LCFI11:
 254              		.cfi_def_cfa_offset 8
 255              		.cfi_offset 14, -4
 256              		.cfi_offset 7, -8
 257 0002 82B0     		sub	sp, sp, #8
 258              	.LCFI12:
 259              		.cfi_def_cfa_offset 16
 260 0004 00AF     		add	r7, sp, #0
 261              	.LCFI13:
 262              		.cfi_def_cfa_register 7
 263 0006 7860     		str	r0, [r7, #4]
 155:../src/main.c ****   /* Place your implementation of fputc here */
 156:../src/main.c ****   /* e.g. write a character to the USART */
 157:../src/main.c ****   USART_SendData(EVAL_COM1, (uint8_t) ch);
 264              		.loc 1 157 0
 265 0008 7B68     		ldr	r3, [r7, #4]
 266 000a DBB2     		uxtb	r3, r3
 267 000c 4FF4A050 		mov	r0, #5120
 268 0010 C4F20100 		movt	r0, 16385
 269 0014 1946     		mov	r1, r3
 270 0016 FFF7FEFF 		bl	USART_SendData
 158:../src/main.c **** 
 159:../src/main.c ****   /* Loop until the end of transmission */
 160:../src/main.c ****   while (USART_GetFlagStatus(EVAL_COM1, USART_FLAG_TC) == RESET);
 271              		.loc 1 160 0
 272 001a 00BF     		nop
 273              	.L11:
 274              		.loc 1 160 0 is_stmt 0 discriminator 1
 275 001c 4FF4A050 		mov	r0, #5120
 276 0020 C4F20100 		movt	r0, 16385
 277 0024 4FF04001 		mov	r1, #64
 278 0028 FFF7FEFF 		bl	USART_GetFlagStatus
 279 002c 0346     		mov	r3, r0
 280 002e 002B     		cmp	r3, #0
 281 0030 F4D0     		beq	.L11
 161:../src/main.c **** 
 162:../src/main.c ****   return ch;
 282              		.loc 1 162 0 is_stmt 1
 283 0032 7B68     		ldr	r3, [r7, #4]
 163:../src/main.c **** }
 284              		.loc 1 163 0
 285 0034 1846     		mov	r0, r3
 286 0036 07F10807 		add	r7, r7, #8
 287 003a BD46     		mov	sp, r7
 288 003c 80BD     		pop	{r7, pc}
 289              		.cfi_endproc
 290              	.LFE114:
 292 003e 00BF     		.text
 293              	.Letext0:
 294              		.file 2 "c:\\program files (x86)\\codesourcery\\sourcery_codebench_lite_for_arm_eabi\\bin\\../lib/
 295              		.file 3 "C:\\Users\\Anthony.Paterson@opus.co\\Documents\\git\\blink\\blink\\Libraries\\Device\\STM
 296              		.file 4 "C:\\Users\\Anthony.Paterson@opus.co\\Documents\\git\\blink\\blink\\Libraries\\STM32F4xx_S
 297              		.file 5 "C:\\Users\\Anthony.Paterson@opus.co\\Documents\\git\\blink\\blink\\Libraries\\STM32F4xx_S
 298              		.file 6 "C:\\Users\\Anthony.Paterson@opus.co\\Documents\\git\\blink\\blink\\inc/stm32f4_discovery.
 299              		.file 7 "C:\\Users\\Anthony.Paterson@opus.co\\Documents\\git\\blink\\blink\\Libraries\\CMSIS\\Incl
DEFINED SYMBOLS
                            *ABS*:00000000 main.c
                            *COM*:00000008 GPIO_InitStructure
C:\Users\ANTHON~1.CO\AppData\Local\Temp\ccSoCqAf.s:20     .text.main:00000000 $t
C:\Users\ANTHON~1.CO\AppData\Local\Temp\ccSoCqAf.s:25     .text.main:00000000 main
C:\Users\ANTHON~1.CO\AppData\Local\Temp\ccSoCqAf.s:131    .text.LED_Config:00000000 LED_Config
C:\Users\ANTHON~1.CO\AppData\Local\Temp\ccSoCqAf.s:191    .text.USART_Config:00000000 USART_Config
C:\Users\ANTHON~1.CO\AppData\Local\Temp\ccSoCqAf.s:70     .text.Delaynus:00000000 Delaynus
C:\Users\ANTHON~1.CO\AppData\Local\Temp\ccSoCqAf.s:65     .text.Delaynus:00000000 $t
C:\Users\ANTHON~1.CO\AppData\Local\Temp\ccSoCqAf.s:126    .text.LED_Config:00000000 $t
C:\Users\ANTHON~1.CO\AppData\Local\Temp\ccSoCqAf.s:186    .text.USART_Config:00000000 $t
C:\Users\ANTHON~1.CO\AppData\Local\Temp\ccSoCqAf.s:241    .text.__io_putchar:00000000 $t
C:\Users\ANTHON~1.CO\AppData\Local\Temp\ccSoCqAf.s:246    .text.__io_putchar:00000000 __io_putchar
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
RCC_AHB1PeriphClockCmd
GPIO_Init
GPIO_Write
STM_Eval_COMInit
USART_SendData
USART_GetFlagStatus
